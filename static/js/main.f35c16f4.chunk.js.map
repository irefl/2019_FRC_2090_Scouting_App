{"version":3,"sources":["Assets/Images/HabPlatforms.png","Components/LoadingSpinner.js","Components/BlueButton.js","Pages/MainPage/MainPage.js","Assets/Teams/Teams.js","Components/TeamPicker/TeamPicker.js","Components/Constants/ScoringConfigurations.js","Components/Constants/HabLevels.js","Pages/EnterInfo/HabLevelPicker/HabLevelPicker.js","Components/Spacer.js","Pages/Stats/TeamStats/AddImage/AddImage.js","Pages/Stats/TeamStats/GetDataObjects/GetDataObjects.js","Pages/Stats/TeamStats/Charts/MatchScoreChart/MatchScoreChart.js","Pages/Stats/TeamStats/ShowHatchData/ShowHatchData.js","Pages/Stats/TeamStats/ShowCargoData/ShowCargoData.js","Pages/Stats/TeamStats/ShowTotalScores/ShowTotalScores.js","Pages/Stats/TeamStats/ShowNearRocketScoring/ShowNearRocketScoring.js","Pages/Stats/TeamStats/ShowFarRocketScoring/ShowFarRocketScoring.js","Pages/Stats/TeamStats/CargoComfort/CargoComfort.js","Pages/Stats/TeamStats/ShowClimbs/ShowClimbs.js","Pages/Stats/TeamStats/AutoPerformance/AutoPerformance.js","Pages/Stats/TeamStats/Observations/Observations.js","Pages/Stats/TeamStats/DropCounts/DropCounts.js","Pages/Stats/TeamStats/PickupHatchPerformance/PickupHatchConstants.js","Pages/Stats/TeamStats/PickupHatchPerformance/PickupHatchPerformance.js","Pages/Stats/TeamStats/PitInfoShow/PitInfoShow.js","Pages/Stats/TeamStats/TeamStats.js","Pages/Stats/Stats.js","Pages/AllStats/TeamSelector/TeamSelector.js","Pages/AllStats/DataCalculator/DataCalculator.js","Pages/AllStats/GeneralBarChart/GeneralBarChart.js","Pages/AllStats/AllStats.js","Pages/MatchSchedule/Matches.js","Pages/MatchSchedule/MatchSchedule.js","Pages/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","LoadingSpinner","react_default","a","createElement","Fragment","style","margin","marginTop","textAlign","react_loader_spinner_default","type","color","height","width","BlueButton","_ref","onClick","children","disabled","Button","Object","objectSpread","backgroundColor","pages","link","name","MainPage","currentUser","displayName","map","page","i","key","react_router_dom","to","Components_BlueButton","firebase","auth","signOut","Teams","TeamsMapping","359","368","2090","2437","2438","2439","2441","2443","2444","2445","2465","2477","2504","2853","2896","3008","3721","3800","3878","3882","4253","4270","5515","5701","6704","6766","6909","6998","7497","7505","7548","7550","7631","7724","7898","TeamsInit","TeamsInitF","TeamPicker","allData","selectedTeam","setSelectedTeam","_useState","useState","_useState2","slicedToArray","dropOpen","setDropOpen","Dropdown","isOpen","toggle","DropdownToggle","caret","DropdownMenu","modifiers","setMaxHeight","enabled","order","fn","data","styles","overflow","maxHeight","window","innerHeight","team","numEntries","match_data","keys","length","DropdownItem","ScoringConfigurations","NONE","CARGO","HATCH","CARGO_AND_HATCH","HabLevels","LEVEL_1","LEVEL_2","LEVEL_3","Spacer","_LevelsMapping","defineProperty","space","AddImage","image","setImage","Input","onChange","e","target","files","file","Components_Spacer","asyncToGenerator","regenerator_default","mark","_callee","hash","uploadSnap","url","wrap","_context","prev","next","toast","error","abrupt","info","crypto","randomBytes","toString","storage","ref","concat","put","sent","getDownloadURL","database","push","src","success","t0","message","stop","countBoth","rocket","score","forEach","panel","countHatches","countCargo","farBays","nearBays","getScoreOfCertainCargoSpots","cargo","bays","bay","calculateAutonLevel","value","MatchScoreChart","finalYLab","ylab","es6","top","right","left","bottom","dataKey","domain","allowDecimals","label","position","angle","stroke","strokeDashArray","dot","fill","ShowHatchData","matchData","match","farRocket","nearRocket","Charts_MatchScoreChart_MatchScoreChart","ShowCargoData","ShowTotalScores","ShowNearRocketScoring","side","ShowFarRocketScoring","CargoComfort","_cargocomfortScores","matches","nearLeft","farLeft","nearRight","farRight","cargocomfortScores","react_flexbox_grid_lib","md","ShowClimbs","habBonus","AutoPerformance","selectedAuton","Observations","href","matchNumber","border","borderRadius","padding","fontWeight","observations","DropCounts","_dropScores","cargoDropped","hatchesDropped","dropScores","PickupHatchConstantsMapping","NO_INFORMATION_AVAILABLE","CANT_PICKUP","PICKS_UP_WELL","CAN_PICKUP_BUT_NO_COMFORT","CAN_PICKUP_BUT_OFTEN_FAILS","CAN_PICKUP_BUT_CANNOT_SCORE","PickupHatchConstants","Levels","PickupHatchPerformance","pickupHatchPerformance","currUserChosenPerformance","uid","ratingLevel","level","set","op","PitInfoShow","pitinfo","maxStart","maxStartingPos","autoOrCamera","preGamePreference","mainScoringMethod","hatchCircled","reduce","acc","curr","join","cargoCircled","climbCircled","fontSize","driveType","reliability","timeToClimb","climbReliability","scoringStrats","notes","TeamStats","items","teamData","images","areImages","item","caption","header","Number","sort","b","className","innerWidth","UncontrolledCarousel","autoPlay","interval","TeamStats_AddImage_AddImage","TeamStats_PickupHatchPerformance_PickupHatchPerformance","TeamStats_ShowTotalScores_ShowTotalScores","TeamStats_ShowHatchData_ShowHatchData","TeamStats_ShowCargoData_ShowCargoData","TeamStats_ShowNearRocketScoring_ShowNearRocketScoring","TeamStats_ShowFarRocketScoring_ShowFarRocketScoring","TeamStats_DropCounts_DropCounts","TeamStats_CargoComfort_CargoComfort","TeamStats_ShowClimbs_ShowClimbs","TeamStats_AutoPerformance_AutoPerformance","TeamStats_Observations_Observations","pit_info","TeamStats_PitInfoShow_PitInfoShow","Stats","setData","_useState3","_useState4","loading","setLoading","_useState5","_useState6","useEffect","params","dataRef","on","snap","val","off","Components_LoadingSpinner","Components_TeamPicker_TeamPicker","Stats_TeamStats_TeamStats","TeamSelector","teamsToInclude","setTeamsToInclude","sortByBest","setSortByBest","xs","lg","marginBottom","userSelect","cursor","opacity","setTeams","DataCalculator","cargoScores","hatchScores","overallScores","autonScores","rocketOverallScores","cargoShipOverallScores","cargoDropCounts","hatchDropCounts","habBonuses","overallScoresAvg","matchCount","cargoTotal","hatchTotal","overallTotal","autonTotal","rocketTotal","cargoShipTotal","cargoDropCount","hatchDropCount","overallScore","matchKey","countBothNearRocket","countBothFarRocket","countBothCargoShip","CustomTick","x","y","payload","transform","dy","textAnchor","GeneralBarChart","_ref2","highlightedTeams","tick","GeneralBarChart_CustomTick","entry","index","AllStats","setCalculatedInfo","_useState7","_useState8","_useState9","_useState10","setHighlightedTeams","calculatedInfo","teamsArr","d","avgCargoScoreData","currHighestCargoAvg","avgHatchScoreData","currHighestHatchAvg","overallBothScoreData","highestOverallScore","autonScoreData","highestAutonScore","rocketScoreData","highestRocketScore","cargoScoreData","highestCargoScore","cargoDropData","lowestCargoDropCount","Infinity","hatchDropData","lowestHatchDropCount","highestHabBonus","highestOverallScoreCombinedAll","cargoScoreCurr","hatchScoreCurr","overallScoreCurr","autonScoreCurr","rocketOverallCurr","cargoShipOverallCurr","cargoDropCurr","hatchDropCurr","habBonusCurr","scoreCurr","count","AllStats_TeamSelector_TeamSelector","placeholder","newThing","split","tToN","isEqual","sm","AllStats_GeneralBarChart_GeneralBarChart","assign","Matches","1","blueTeams","redTeams","10","video","11","12","13","14","15","16","17","18","19","2","20","21","22","23","24","25","26","27","28","29","3","30","31","32","33","34","35","36","37","38","39","4","40","41","42","43","44","45","46","47","48","49","5","50","51","52","53","54","55","56","57","58","59","6","60","61","62","63","64","65","66","67","68","7","8","9","MatchSchedule","orderedMatches","Table","bordered","size","responsive","blueTeam","redTeam","Home","canSee","setCanSee","canSeeRef","react_router","exact","path","component","Pages_MainPage_MainPage","r","Pages_Stats_Stats","Pages_AllStats_AllStats","Pages_MatchSchedule_MatchSchedule","provider","GoogleAuthProvider","App","state","componentDidMount","_this","onAuthStateChanged","user","setState","autoClose","_this$state","this","marginLeft","marginRight","lib","signInWithRedirect","Pages_Home","Component","Boolean","location","hostname","console","log","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f35c16f4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/HabPlatforms.8d295c08.png\";","import React from 'react';\nimport Spinner from 'react-loader-spinner';\n\nconst LoadingSpinner = () => <><div style={{\n    margin: 'auto',\n    marginTop: 50,\n    textAlign: 'center'\n}}><Spinner\n        type=\"Oval\"\n        color=\"#005696\"\n        height=\"100\"\n        width=\"100\"\n    /></div></>;\n\nexport default LoadingSpinner;","import React from 'react';\nimport { Button } from 'reactstrap';\n\nconst BlueButton = ({ style, onClick, children, disabled }) => {\n    return <Button\n        style={{\n            ...style,\n            backgroundColor: \"#20508b\",\n        }}\n        onClick={onClick ? onClick : () => null}\n        disabled={disabled ? true : false}> {children}</Button >\n}\n\nexport default BlueButton;","import React from 'react';\nimport BlueButton from '../../Components/BlueButton';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport { Link } from 'react-router-dom';\n\nconst pages = [\n//     {\n//     link: \"/enterinfo\",\n//     name: \"Enter match info\"\n// }, {\n//     link: \"/enterpitscouting\",\n//     name: \"Enter pit scouting info\"\n// }, \n{\n    link: \"/stats\",\n    name: \"See statstics by team\"\n}, {\n    link: \"/allstats\",\n    name: \"See all team statistics\"\n}, {\n    link: \"/matchschedule\",\n    name: \"See match schedule\"\n}];\n\nconst MainPage = ({ currentUser }) => {\n    return <>\n        <h1>FRC 2090 Scouting App</h1>\n        <h2>Welcome, {currentUser.displayName}</h2>\n        {\n            pages.map((page, i) => {\n                return <div key={\"pageButton\" + i}>\n                    <Link to={page.link}>\n                        <BlueButton style={{ marginTop: 10 }}>\n                            {page.name}\n                        </BlueButton>\n                    </Link>\n                </div>\n            })\n        }\n        <hr />\n        <BlueButton style={{ marginTop: 10 }} onClick={() => {\n            firebase.auth().signOut();\n        }}>Sign out</BlueButton>\n    </>\n}\n\nexport default MainPage","/**\n * \n * let teamsMapping = {}\ndocument.querySelectorAll(\".team-name\").forEach(d => {\n\tlet text = d.children[0].innerText;\n\tlet split = text.split(\"\\n\");\n\tlet teamNumber = Number(split[0])\n\tteamsMapping[teamNumber] = split[1]\n})\n */\n\nconst Teams = [359,\n    368,\n    2090,\n    2437,\n    2438,\n    2439,\n    2441,\n    2443,\n    2444,\n    2445,\n    2465,\n    2477,\n    2504,\n    2853,\n    2896,\n    3008,\n    3721,\n    3800,\n    3878,\n    3882,\n    4253,\n    4270,\n    5515,\n    5701,\n    6704,\n    6766,\n    6909,\n    6998,\n    7497,\n    7505,\n    7548,\n    7550,\n    7631,\n    7724,\n    7898]\n\nconst TeamsMapping = {\n    359: \"Hawaiian Kids\",\n    368: \"Team Kika Mana\",\n    2090: \"Buff 'n Blue\",\n    2437: \"Lancer Robotics\",\n    2438: \"'Iobotics\",\n    2439: \"Bearbotics\",\n    2441: \"Spartechs\",\n    2443: \"Blue Thunder\",\n    2444: \"Kamehameha RoboWarriors\",\n    2445: \"RoboKAP\",\n    2465: \"Kauaibots\",\n    2477: \"Marauder Rascals\",\n    2504: \"The Governors\",\n    2853: \"Hot Spot Robotics\",\n    2896: \"MechaMonarchs\",\n    3008: \"Team Magma\",\n    3721: \"Charger Robotics\",\n    3800: \"Mustangs\",\n    3878: \"Wildcats\",\n    3882: \"Lunas\",\n    4253: \"Raid Zero\",\n    4270: \"Crusaders\",\n    5515: \"Blue Power Robotics\",\n    5701: \"RAIJINbotics\",\n    6704: \"Mid Pacific Owl Robotics\",\n    6766: \"Pharma Atom Storm\",\n    6909: \"SAKURA Tempesta\",\n    6998: \"NNKIEH\",\n    7497: \"MARAHO\",\n    7505: \"PTU\",\n    7548: \"Le Jardin Academy\",\n    7550: \"DieForTonga\",\n    7631: \"Cool Guy\",\n    7724: \"Molokai Robotics\",\n    7898: \"Cool Geeks\"\n}\n\nconst TeamsInit = {\n    359: true,\n    368: true,\n    2090: true,\n    2437: true,\n    2438: true,\n    2439: true,\n    2441: true,\n    2443: true,\n    2444: true,\n    2445: true,\n    2465: true,\n    2477: true,\n    2504: true,\n    2853: true,\n    2896: true,\n    3008: true,\n    3721: true,\n    3800: true,\n    3878: true,\n    3882: true,\n    4253: true,\n    4270: true,\n    5515: true,\n    5701: true,\n    6704: true,\n    6766: true,\n    6909: true,\n    6998: true,\n    7497: true,\n    7505: true,\n    7548: true,\n    7550: true,\n    7631: true,\n    7724: true,\n    7898: true\n}\n\nconst TeamsInitF = {\n    359: false,\n    368: false,\n    2090: false,\n    2437: false,\n    2438: false,\n    2439: false,\n    2441: false,\n    2443: false,\n    2444: false,\n    2445: false,\n    2465: false,\n    2477: false,\n    2504: false,\n    2853: false,\n    2896: false,\n    3008: false,\n    3721: false,\n    3800: false,\n    3878: false,\n    3882: false,\n    4253: false,\n    4270: false,\n    5515: false,\n    5701: false,\n    6704: false,\n    6766: false,\n    6909: false,\n    6998: false,\n    7497: false,\n    7505: false,\n    7548: false,\n    7550: false,\n    7631: false,\n    7724: false,\n    7898: false\n}\n\nexport { Teams, TeamsMapping, TeamsInit, TeamsInitF }","import React, { useState } from 'react';\nimport {\n    Dropdown, DropdownToggle, DropdownMenu, DropdownItem,\n} from 'reactstrap';\nimport { Teams, TeamsMapping } from '../../Assets/Teams/Teams';\n\nconst TeamPicker = ({ allData, selectedTeam, setSelectedTeam }) => {\n    const [dropOpen, setDropOpen] = useState(false);\n\n    return <Dropdown isOpen={dropOpen} toggle={() => setDropOpen(!dropOpen)} >\n        <DropdownToggle caret style={{ backgroundColor: \"#20508b\" }}>\n            {selectedTeam !== 0 ? <>{selectedTeam} - {TeamsMapping[selectedTeam]}</> : <>Choose a team</>}\n        </DropdownToggle>\n        <DropdownMenu modifiers={{\n            setMaxHeight: {\n                enabled: true,\n                order: 890,\n                fn: (data) => {\n                    return {\n                        ...data,\n                        styles: {\n                            ...data.styles,\n                            overflow: 'auto',\n                            maxHeight: window.innerHeight * .8,\n                        },\n                    };\n                },\n            },\n        }}>\n            {Teams.map(team => {\n                let numEntries = 0;\n                if (allData && allData[team] && allData[team].match_data) {\n                    numEntries = Object.keys(allData[team].match_data).length;\n                }\n                return <DropdownItem key={team} onClick={() => { setSelectedTeam(team) }}>\n                    {team} - {TeamsMapping[team]} {allData && <>- ({numEntries})</>}\n                </DropdownItem>\n            })}\n        </DropdownMenu>\n    </Dropdown>\n}\n\nexport default TeamPicker;","const ScoringConfigurations = {\n    NONE: \"none\",\n    CARGO: \"cargo\",\n    HATCH: \"hatch\",\n    CARGO_AND_HATCH: \"cargoAndHatch\"\n}\n\nexport default ScoringConfigurations;","const HabLevels = {\n    NONE: 0,\n    LEVEL_1: 1,\n    LEVEL_2: 2,\n    LEVEL_3: 3\n}\n\nexport default HabLevels;","import React, { useState } from 'react';\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport HabLevels from '../../../Components/Constants/HabLevels';\n\nconst { NONE, LEVEL_1, LEVEL_2, LEVEL_3 } = HabLevels;\n\nconst Levels = [\n    { value: NONE, name: \"None\" },\n    { value: LEVEL_1, name: \"Level 1\" },\n    { value: LEVEL_2, name: \"Level 2\" },\n    { value: LEVEL_3, name: \"Level 3\" }\n]\n\nconst LevelsMapping = {\n    [NONE]: \"None\",\n    [LEVEL_1]: \"Level 1\",\n    [LEVEL_2]: \"Level 2\",\n    [LEVEL_3]: \"Level 3\"\n}\n\nconst HabLevelPicker = ({ habBonus, setHabBonus }) => {\n    const [dropOpen, setDropOpen] = useState(false);\n\n    return <Dropdown isOpen={dropOpen} toggle={() => setDropOpen(!dropOpen)} >\n        <DropdownToggle caret style={{ backgroundColor: \"#20508b\" }}>\n            {habBonus !== \"\" ? <>{LevelsMapping[habBonus]}</> : <>Select a parking bonus</>}\n        </DropdownToggle>\n        <DropdownMenu modifiers={{\n            setMaxHeight: {\n                enabled: true,\n                order: 890,\n                fn: (data) => {\n                    return {\n                        ...data,\n                        styles: {\n                            ...data.styles,\n                            overflow: 'auto',\n                            maxHeight: window.innerHeight * .8,\n                        },\n                    };\n                },\n            },\n        }}>\n            {Levels.map(level => {\n                const { value, name } = level;\n                return <DropdownItem key={value} onClick={() => { setHabBonus(value) }}>{name}</DropdownItem>\n            })}\n        </DropdownMenu>\n    </Dropdown>\n}\n\nexport default HabLevelPicker;","import React from 'react';\nconst Spacer = ({ space }) => {\n    const marginTop = space || 0\n    return <div style={{ marginTop }}></div>\n}\n\nexport default Spacer;","import React, { useState } from 'react';\nimport BlueButton from '../../../../Components/BlueButton';\nimport { Input } from 'reactstrap';\nimport Spacer from '../../../../Components/Spacer';\nimport crypto from 'crypto';\nimport firebase from 'firebase/app';\nimport 'firebase/database';\nimport 'firebase/storage';\nimport { toast } from 'react-toastify';\n\nconst AddImage = ({ selectedTeam }) => {\n    const [image, setImage] = useState(null);\n    return <>\n        <h4>Add an image</h4>\n        <Input type=\"file\" onChange={(e) => {\n            setImage({\n                name: e.target.files[0].name,\n                file: e.target.files[0]\n            });\n        }} />\n        <Spacer space={10} />\n        <BlueButton disabled={image ? false : true} onClick={async () => {\n            if (!image) {\n                toast.error(\"No/invalid image provided\");\n                return;\n            }\n            try {\n                toast.info(\"Uploading image...\");\n                const hash = crypto.randomBytes(32).toString(\"hex\");\n                const uploadSnap = await firebase.storage().ref(`imgs/${hash}/${image.name}`).put(image.file);\n                const url = await uploadSnap.ref.getDownloadURL();\n                await firebase.database().ref(`2019data/${selectedTeam}/images`).push({ src: url });\n                toast.success(\"Image upload success!\");\n            } catch (e) {\n                toast.error(`Error uploading image: ${e.message}`);\n            }\n        }}>Submit</BlueButton>\n    </>\n}\n\nexport default AddImage;","import ScoringConfigurations from \"../../../../Components/Constants/ScoringConfigurations\";\n\nconst nearRocket = (matches) => {\n    return matches.map((match, i) => {\n        return {\n            match: i + 1,\n            score: match.side === \"LEFT\" ? countBoth(match.farRocket) : countBoth(match.nearRocket)\n        }\n    });\n}\n\n\nconst farRocket = (matches) => {\n    return matches.map((match, i) => {\n        return {\n            match: i + 1,\n            score: match.side === \"RIGHT\" ? countBoth(match.farRocket) : countBoth(match.nearRocket)\n        }\n    });\n}\n\nconst cargo = (matches) => {\n    return matches.map((match, i) => {\n        return {\n            match: i + 1,\n            score: countBoth(match.cargo)\n        }\n    });\n}\n\n/**\n * Returns matches as {match: ##, score: ##} for hatches\n * @param {Object} matches \n */\nconst hatchScores = (matches) => {\n    return matches.map((match, i) => {\n        return {\n            match: i + 1,\n            score: countHatches(match.cargo) + countHatches(match.farRocket) + countHatches(match.nearRocket)\n        };\n    })\n}\n\nconst countBoth = (rocket) => {\n    let score = 0;\n    Object.keys(rocket).forEach(panel => {\n        if (rocket[panel] === ScoringConfigurations.HATCH || rocket[panel] === ScoringConfigurations.CARGO_AND_HATCH ||\n            rocket[panel] === ScoringConfigurations.CARGO) {\n            score++;\n        }\n    });\n    return score;\n}\n\n/**\n * Count the hatches per rocket or cargo ship\n * @param {Object} rocket \n */\nconst countHatches = (rocket) => {\n    let score = 0;\n    Object.keys(rocket).forEach(panel => {\n        if (rocket[panel] === ScoringConfigurations.HATCH || rocket[panel] === ScoringConfigurations.CARGO_AND_HATCH) {\n            score++;\n        }\n    });\n    return score;\n}\n\nconst cargoScores = (matches) => {\n    return matches.map((match, i) => {\n        return {\n            match: i + 1,\n            score: countCargo(match.cargo) + countCargo(match.farRocket) + countCargo(match.nearRocket)\n        }\n    })\n}\n\nconst countCargo = (rocket) => {\n    let score = 0;\n    Object.keys(rocket).forEach(panel => {\n        if (rocket[panel] === ScoringConfigurations.CARGO || rocket[panel] === ScoringConfigurations.CARGO_AND_HATCH) {\n            score++;\n        }\n    });\n    return score;\n}\n\nconst allScores = (matches) => {\n    return matches.map((match, i) => {\n        return {\n            match: i + 1,\n            score: match.score\n        }\n    })\n}\n\nconst farBays = [\"bay1\", \"bay2\", \"bay3\", \"bay4\"];\nconst nearBays = [\"bay5\", \"bay6\", \"bay7\", \"bay8\"];\n\nconst cargocomfortScores = (matches) => {\n    let nearLeft = [];\n    let farLeft = [];\n    let nearRight = [];\n    let farRight = [];\n\n    matches.forEach((match, i) => {\n        if (match.side === \"LEFT\") {\n            farLeft.push({\n                match: i + 1,\n                score: getScoreOfCertainCargoSpots(match.cargo, farBays)\n            });\n            nearLeft.push({\n                match: i + 1,\n                score: getScoreOfCertainCargoSpots(match.cargo, nearBays)\n            });\n        }\n\n        if (match.side === \"RIGHT\") {\n            farRight.push({\n                match: i + 1,\n                score: getScoreOfCertainCargoSpots(match.cargo, farBays)\n            });\n            nearRight.push({\n                match: i + 1,\n                score: getScoreOfCertainCargoSpots(match.cargo, nearBays)\n            });\n        }\n    })\n\n    return {\n        nearLeft,\n        farLeft,\n        nearRight,\n        farRight\n    }\n}\n\n// bays is an array of strings in the format \"bay#\"\nconst getScoreOfCertainCargoSpots = (cargo, bays) => {\n    let score = 0;\n    bays.forEach(bay => {\n        let scored = cargo[bay];\n        switch (scored) {\n            case ScoringConfigurations.CARGO:\n                score += 3;\n                break;\n            case ScoringConfigurations.HATCH:\n                score += 2;\n                break;\n            case ScoringConfigurations.CARGO_AND_HATCH:\n                score += 5;\n                break;\n            default:\n                score += 0;\n                break;\n        }\n    });\n    return score;\n}\n\nconst calculateClimb = (matches) => {\n    return matches.map((match, i) => {\n        return {\n            match: i + 1,\n            score: match.habBonus\n        }\n    });\n}\n\nconst calculateAuto = (matches) => {\n    return matches.map((match, i) => {\n        return {\n            match: i + 1,\n            score: calculateAutonLevel(match.selectedAuton)\n        }\n    })\n}\n\nconst calculateAutonLevel = (value) => {\n    switch (value) {\n        case 2:\n            return 1;\n        case 3:\n            return 2;\n        default:\n            return 0;\n    }\n}\n\nconst dropScores = (matches) => {\n    let cargoDropped = [];\n    let hatchesDropped = [];\n    // cargoDropped\n\n    matches.forEach((match, i) => {\n        cargoDropped.push({\n            match: i + 1,\n            score: match.cargoDropped\n        });\n        hatchesDropped.push({\n            match: i + 1,\n            score: match.hatchesDropped\n        });\n    })\n\n    return {\n        cargoDropped, hatchesDropped\n    }\n}\n\nexport {\n    calculateAuto,\n    calculateClimb,\n    cargocomfortScores,\n    cargo,\n    nearRocket,\n    farRocket,\n    hatchScores,\n    countHatches,\n    cargoScores,\n    countCargo,\n    allScores,\n    dropScores,\n    countBoth,\n    calculateAutonLevel\n}","import React from 'react';\nimport { LineChart, XAxis, YAxis, CartesianGrid, Tooltip, Line } from 'recharts';\n\nconst MatchScoreChart = ({ data, ylab }) => {\n    let finalYLab = ylab || \"Count\";\n    return <LineChart width={300} height={250} data={data} margin={{ top: 0, right: 0, left: 10, bottom: 25 }}>\n        <XAxis dataKey=\"match\" domain={[1, \"auto\"]} allowDecimals={false} label={{ value: \"Match\", position: \"bottom\" }} type=\"number\" />\n        <YAxis dataKey=\"score\" domain={[\"auto\", \"auto\"]} allowDecimals={false} label={{ value: finalYLab, angle: -90, position: \"insideLeft\" }} />\n        <CartesianGrid stroke=\"#ddd\" strokeDashArray=\"3 3\" />\n        <Tooltip />\n        <Line dot={true} type=\"monotone\" dataKey=\"score\" stroke={\"#20508B\"} fill={\"#20508B\"} />\n    </LineChart>\n}\n\nexport default MatchScoreChart;","import React from 'react';\nimport { hatchScores } from '../GetDataObjects/GetDataObjects';\nimport MatchScoreChart from '../Charts/MatchScoreChart/MatchScoreChart';\n\nconst ShowHatchData = ({ matchData }) => {\n    let data = hatchScores(matchData);\n    return <>\n        <h3>Total Hatches Scored Per Match (in any goal)</h3>\n        <MatchScoreChart data={data} />\n    </>\n}\n\nexport default ShowHatchData;","import React from 'react';\nimport { cargoScores } from '../GetDataObjects/GetDataObjects';\nimport MatchScoreChart from '../Charts/MatchScoreChart/MatchScoreChart';\n\nconst ShowCargoData = ({ matchData }) => {\n    let data = cargoScores(matchData);\n    return <>\n        <h3>Total Cargo Scored Per Match (in any goal)</h3>\n        <MatchScoreChart data={data} />\n    </>\n}\n\nexport default ShowCargoData;","import React from 'react';\nimport { allScores } from '../GetDataObjects/GetDataObjects';\nimport MatchScoreChart from '../Charts/MatchScoreChart/MatchScoreChart';\n\nconst ShowTotalScores = ({ matchData }) => {\n    let data = allScores(matchData);\n    return <>\n        <h3>Total Individual Score per Match</h3>\n        <MatchScoreChart data={data} ylab={\"Score\"} />\n    </>\n}\n\nexport default ShowTotalScores;","import React from 'react';\nimport { nearRocket } from '../GetDataObjects/GetDataObjects';\nimport MatchScoreChart from '../Charts/MatchScoreChart/MatchScoreChart';\n\nconst ShowNearRocketScoring = ({ matchData }) => {\n    let data = nearRocket(matchData);\n    return <>\n        <h3>Total Scored on Relative Left Rocket (hatch + cargo combined)</h3>\n        <MatchScoreChart data={data} />\n    </>\n}\n\nexport default ShowNearRocketScoring;","import React from 'react';\nimport { farRocket } from '../GetDataObjects/GetDataObjects';\nimport MatchScoreChart from '../Charts/MatchScoreChart/MatchScoreChart';\n\nconst ShowFarRocketScoring = ({ matchData }) => {\n    let data = farRocket(matchData);\n    return <>\n        <h3>Total Scored on Relative Right Rocket (hatch + cargo combined)</h3>\n        <MatchScoreChart data={data} />\n    </>\n}\n\nexport default ShowFarRocketScoring;","import React from 'react';\nimport { cargocomfortScores } from '../GetDataObjects/GetDataObjects';\nimport MatchScoreChart from '../Charts/MatchScoreChart/MatchScoreChart';\nimport { Grid, Row, Col } from 'react-flexbox-grid';\n\nconst CargoComfort = ({ matchData }) => {\n    // let data = cargoScores(matchData);\n    let { nearLeft, farLeft, nearRight, farRight } = cargocomfortScores(matchData);\n    return <>\n        <Grid>\n            <Row>\n                <Col md={6}>\n                    <h3>Near side when on left</h3>\n                    <MatchScoreChart ylab={\"Score\"} data={nearLeft} />\n                    <h3>Far side when on left</h3>\n                    <MatchScoreChart ylab={\"Score\"} data={farLeft} />\n                </Col>\n                <Col md={6}>\n                    <h3>Near side when on right</h3>\n                    <MatchScoreChart ylab={\"Score\"} data={nearRight} />\n                    <h3>Far side when on right</h3>\n                    <MatchScoreChart ylab={\"Score\"} data={farRight} />\n                </Col>\n            </Row>\n        </Grid>\n\n    </>\n}\n\nexport default CargoComfort;","import React from 'react';\nimport { calculateClimb } from '../GetDataObjects/GetDataObjects';\nimport MatchScoreChart from '../Charts/MatchScoreChart/MatchScoreChart';\n\nconst ShowClimbs = ({ matchData }) => {\n    let data = calculateClimb(matchData);\n    return <>\n        <h3>Climb for each match</h3>\n        <MatchScoreChart data={data} />\n    </>\n}\n\nexport default ShowClimbs;","import React from 'react';\nimport { calculateAuto } from '../GetDataObjects/GetDataObjects';\nimport MatchScoreChart from '../Charts/MatchScoreChart/MatchScoreChart';\n\nconst AutoPerformance = ({ matchData }) => {\n    let data = calculateAuto(matchData);\n    return <>\n        <h3>Auto performance (0 can mean none or fail)</h3>\n        <MatchScoreChart data={data} ylab={\"Level\"} />\n    </>\n}\n\nexport default AutoPerformance;","import React from 'react';\nimport { Grid, Row, Col } from 'react-flexbox-grid';\n\nconst Observations = ({ matchData }) => {\n    return <>\n        <h3>Click to go to TBA page for that match</h3>\n        <Grid>\n            <Row>\n                {matchData.map((match, i) => {\n                    return <Col md={3} key={\"obs\" + i}>\n                        <a href={`https://www.thebluealliance.com/match/2019hiho_qm${match.matchNumber}`}>\n                            <div style={{\n                                margin: 10,\n                                backgroundColor: '#efefef',\n                                border: \"2px solid #20508B\",\n                                borderRadius: 4,\n                                padding: 5,\n                                textAlign: 'left'\n                            }}>\n                                <div style={{\n                                    color: \"#20508B\",\n                                    fontWeight: 'bold'\n                                }}>Match {match.matchNumber}</div>\n                                {match.observations}\n                            </div>\n                        </a>\n                    </Col>\n                })}\n            </Row>\n        </Grid>\n    </>\n}\n\nexport default Observations;","import React from 'react';\nimport { dropScores } from '../GetDataObjects/GetDataObjects';\nimport MatchScoreChart from '../Charts/MatchScoreChart/MatchScoreChart';\nimport { Grid, Row, Col } from 'react-flexbox-grid';\n\nconst DropCounts = ({ matchData }) => {\n    let { cargoDropped, hatchesDropped } = dropScores(matchData);\n    return <>\n        <Grid>\n            <Row>\n                <Col md={6}>\n                    <h3>Cargo</h3>\n                    <MatchScoreChart data={cargoDropped} />\n                </Col>\n                <Col md={6}>\n                    <h3>Hatches</h3>\n                    <MatchScoreChart data={hatchesDropped} />\n                </Col>\n            </Row>\n        </Grid>\n\n    </>\n}\n\nexport default DropCounts;","const PickupHatchConstants = {\n    NO_INFORMATION_AVAILABLE: \"NO_INFORMATION_AVAILABLE\",\n    CANT_PICKUP: \"CANT_PICKUP\",\n    PICKS_UP_WELL: \"PICKS_UP_WELL\",\n    CAN_PICKUP_BUT_NO_COMFORT: \"CAN_PICKUP_BUT_NO_COMFORT\",\n    CAN_PICKUP_BUT_OFTEN_FAILS: \"CAN_PICKUP_BUT_OFTEN_FAILS\",\n    CAN_PICKUP_BUT_CANNOT_SCORE: \"CAN_PICKUP_BUT_CANNOT_SCORE\"\n};\n\nconst PickupHatchConstantsMapping = {\n    NO_INFORMATION_AVAILABLE: \"There is no hatch pickup information available\",\n    CANT_PICKUP: \"The team cannot pick up hatches off the ground\",\n    PICKS_UP_WELL: \"The team can pick up hatches off the ground well\",\n    CAN_PICKUP_BUT_NO_COMFORT: \"The team can pick up hatches but it prefers not to\",\n    CAN_PICKUP_BUT_OFTEN_FAILS: \"The team can pick up hatches but fails to do so often\",\n    CAN_PICKUP_BUT_CANNOT_SCORE: \"The team can pick up hatches but cannot score them afterwards\"\n}\n\nexport default PickupHatchConstants;\n\nexport {PickupHatchConstantsMapping};","import React, {useState} from 'react';\nimport {\n    Dropdown, DropdownToggle, DropdownMenu, DropdownItem,\n} from 'reactstrap';\nimport PickupHatchConstants, { PickupHatchConstantsMapping } from './PickupHatchConstants';\nimport firebase from 'firebase/app';\nimport 'firebase/database';\nimport {toast} from 'react-toastify';\nimport Spacer from '../../../../Components/Spacer';\nimport {Grid, Row, Col} from 'react-flexbox-grid';\n\nconst {NO_INFORMATION_AVAILABLE,\nCANT_PICKUP,\nPICKS_UP_WELL,\nCAN_PICKUP_BUT_NO_COMFORT,\nCAN_PICKUP_BUT_OFTEN_FAILS,\nCAN_PICKUP_BUT_CANNOT_SCORE} = PickupHatchConstants;\n\nconst Levels = [{\n    value: CANT_PICKUP,\n    name: PickupHatchConstantsMapping.CANT_PICKUP\n}, {\n    value: PICKS_UP_WELL,\n    name: PickupHatchConstantsMapping.PICKS_UP_WELL\n},{\n    value:CAN_PICKUP_BUT_NO_COMFORT ,\n    name: PickupHatchConstantsMapping.CAN_PICKUP_BUT_NO_COMFORT\n},{\n    value: CAN_PICKUP_BUT_OFTEN_FAILS,\n    name: PickupHatchConstantsMapping.CAN_PICKUP_BUT_OFTEN_FAILS\n},{\n    value: CAN_PICKUP_BUT_CANNOT_SCORE,\n    name: PickupHatchConstantsMapping.CAN_PICKUP_BUT_CANNOT_SCORE\n}]\n\nconst PickupHatchPerformance = ({pickupHatchPerformance, currentUser, selectedTeam}) => {\n    const [dropOpen, setDropOpen] = useState(false);\n\n    let currUserChosenPerformance = NO_INFORMATION_AVAILABLE;\n    if(pickupHatchPerformance && pickupHatchPerformance[currentUser.uid]) {\n        currUserChosenPerformance = pickupHatchPerformance[currentUser.uid].ratingLevel;\n    } \n\n    return <>\n        <hr />\n        <h2>Hatch pickup performance</h2>\n\n        <h3>What do you think their hatch pickup performance is? (Pick 1)</h3>\n        <Dropdown isOpen={dropOpen} toggle={() => setDropOpen(!dropOpen)} >\n        <DropdownToggle caret style={{ backgroundColor: \"#20508b\" }}>\n            {PickupHatchConstantsMapping[currUserChosenPerformance]} \n        </DropdownToggle>\n        <DropdownMenu modifiers={{\n            setMaxHeight: {\n                enabled: true,\n                order: 890,\n                fn: (data) => {\n                    return {\n                        ...data,\n                        styles: {\n                            ...data.styles,\n                            overflow: 'auto',\n                            maxHeight: window.innerHeight * .8,\n                        },\n                    };\n                },\n            },\n        }}>\n            {Levels.map(level => {\n                const { value, name } = level;\n                return <DropdownItem key={value} onClick={async () => { \n                    // setSelectedAuton(value) \n                    toast.info(`Setting \"${name}\"...`);\n                    try {\n                        await firebase.database().ref(`2019data/${selectedTeam}/pickupHatchPerformance/${currentUser.uid}`).set({\n                            displayName: currentUser.displayName,\n                            ratingLevel: value\n                        });\n                        toast.success(\"Set value\");\n                    } catch(e) {\n                        toast.error(`Error: ${e.message}`);\n                    }\n                }}>{name}</DropdownItem>\n            })}\n            </DropdownMenu>\n        </Dropdown>\n        <Spacer space={10} />\n        <h3>What do others think?</h3>\n        {!pickupHatchPerformance && <>\n            Cannot find any ratings\n        </>}\n        {pickupHatchPerformance && \n            <Grid>\n                <Row>\n                    {Object.keys(pickupHatchPerformance).map((op, i) => {\n                        return <Col md={3} key={\"op\" + i}>\n                            <div style={{\n                                margin:10,\n                                backgroundColor: \"#efefef\",\n                                border: \"2px solid #20508B\",\n                                borderRadius: 4,\n                                padding: 5,\n                                textAlign: 'left'\n                            }}>\n                                <span style={{\n                                        fontWeight: 'bold'\n                                    }}>{pickupHatchPerformance[op].displayName}: </span>\n                                    {PickupHatchConstantsMapping[pickupHatchPerformance[op].ratingLevel]} \n                            </div>\n                        </Col>\n                    })}\n                </Row>\n            </Grid>\n        }\n        <hr />\n    </>\n}\n\nexport default PickupHatchPerformance;","import React from 'react';\n\nconst PitInfoShow = ({pitinfo}) => {\n    // console.log(pitinfo);\n//     cargoCircled: {Cargo: false, L1: true, L2: true, L3: true, None: false}\n// climbReliability: 0\n// driveType: \"Mechanum\"\n// hatchCircled: {Cargo: false, L1: true, L2: true, L3: true, None: false}\n// mainScoringMethod: 3\n// maxStartingPos: 1\n// notes: \"Wheels with stuff, not chains though (william note: Track?)\"\n// preGamePreference: 2\n// reliability: 0\n// scoringStrats: \"\"\n// timeToClimb: \"Depends, quick\"\n    let maxStart = \"None\";\n    switch (pitinfo.maxStartingPos) {\n        case 1: \n            maxStart = \"H1\";\n            break;\n        case 2:\n            maxStart = \"H2\";\n            break;\n        default:\n            maxStart = \"None\";\n            break;\n    }\n\n    let autoOrCamera = \"None\";\n    switch (pitinfo.preGamePreference) {\n        case 1:\n            autoOrCamera = \"Auto\";\n            break;\n        case 2:\n            autoOrCamera = \"Camera\";\n            break;\n        default:\n            autoOrCamera = \"None\";\n            break;\n    }\n\n    let mainScoringMethod = \"None\";\n    switch(pitinfo.mainScoringMethod) {\n        case 1:\n            mainScoringMethod = \"Hatch\";\n            break;\n        case 2:\n            mainScoringMethod = \"Cargo\";\n            break;\n        case 3:\n            mainScoringMethod = \"Climb\";\n            break;\n        case 4:\n            mainScoringMethod = \"Cargo and Hatch\";\n            break;\n        case 5:\n            mainScoringMethod = \"Cargo, Hatch, and Climb\";\n            break;\n        default:\n            mainScoringMethod = \"None\";\n            break;\n    }\n\n    let hatchCircled = Object.keys(pitinfo.hatchCircled).reduce((acc, curr) => {\n        if(pitinfo.hatchCircled[curr]) {\n            acc.push(curr);\n        }\n        return acc;\n    },[]).join(\", \");\n\n    let cargoCircled = Object.keys(pitinfo.cargoCircled).reduce((acc, curr) => {\n        if(pitinfo.cargoCircled[curr]) {\n            acc.push(curr);\n        }\n        return acc;\n    },[]).join(\", \");\n\n    let climbCircled = Object.keys(pitinfo.climbCircled).reduce((acc, curr) => {\n        if(pitinfo.climbCircled[curr]) {\n            acc.push(curr);\n        }\n        return acc;\n    },[]).join(\", \");\n\n    return <>\n        <div>\n            <div style={{\n                fontWeight: \"bold\", \n                color: \"#20508B\",\n                fontSize: 20}}>Drive type:</div>\n                {pitinfo.driveType}\n        </div>\n        <div>\n            <div style={{\n                fontWeight: \"bold\", \n                color: \"#20508B\",\n                fontSize: 20}}>Robot reliability (low = 1, high = 10, unrated = 0):</div>\n                {pitinfo.reliability} \n        </div>\n        <div>\n            <div style={{\n                fontWeight: \"bold\", \n                color: \"#20508B\",\n                fontSize: 20}}>Max starting position:</div>\n                {maxStart} \n        </div>\n        <div>\n            <div style={{\n                fontWeight: \"bold\", \n                color: \"#20508B\",\n                fontSize: 20}}>Pre-Game:</div>\n                {autoOrCamera} \n        </div>\n        <div>\n            <div style={{\n                fontWeight: \"bold\", \n                color: \"#20508B\",\n                fontSize: 20}}>Main scoring method:</div>\n                {mainScoringMethod} \n        </div>\n        <div>\n            <div style={{\n                fontWeight: \"bold\", \n                color: \"#20508B\",\n                fontSize: 20}}>Hatch:</div>\n                {hatchCircled} \n        </div>\n\n        <div>\n            <div style={{\n                fontWeight: \"bold\", \n                color: \"#20508B\",\n                fontSize: 20}}>Cargo:</div>\n                {cargoCircled} \n        </div>\n\n        <div>\n            <div style={{\n                fontWeight: \"bold\", \n                color: \"#20508B\",\n                fontSize: 20}}>Climb:</div>\n                {climbCircled} \n        </div>\n\n        <div>\n            <div style={{\n                fontWeight: \"bold\", \n                color: \"#20508B\",\n                fontSize: 20}}>Time to climb:</div>\n                {pitinfo.timeToClimb} \n        </div>\n\n        <div>\n            <div style={{\n                fontWeight: \"bold\", \n                color: \"#20508B\",\n                fontSize: 20}}>Climb reliability (low = 1, high = 10, unrated = 0):</div>\n                {pitinfo.climbReliability} \n        </div>\n\n        <div>\n            <div style={{\n                fontWeight: \"bold\", \n                color: \"#20508B\",\n                fontSize: 20}}>Scoring strategies:</div>\n                {pitinfo.scoringStrats} \n        </div>\n\n        <div>\n            <div style={{\n                fontWeight: \"bold\", \n                color: \"#20508B\",\n                fontSize: 20}}>Notes:</div>\n                {pitinfo.notes} \n        </div>\n    </>\n\n}\n\nexport default PitInfoShow;","import React from 'react';\nimport { UncontrolledCarousel } from 'reactstrap';\nimport AddImage from './AddImage/AddImage';\nimport Spacer from '../../../Components/Spacer';\nimport ShowHatchData from './ShowHatchData/ShowHatchData';\nimport ShowCargoData from './ShowCargoData/ShowCargoData';\nimport ShowTotalScores from './ShowTotalScores/ShowTotalScores';\nimport ShowNearRocketScoring from './ShowNearRocketScoring/ShowNearRocketScoring';\nimport ShowFarRocketScoring from './ShowFarRocketScoring/ShowFarRocketScoring';\nimport CargoComfort from './CargoComfort/CargoComfort';\nimport { Grid, Row, Col } from 'react-flexbox-grid';\nimport ShowClimbs from './ShowClimbs/ShowClimbs';\nimport AutoPerformance from './AutoPerformance/AutoPerformance';\nimport Observations from './Observations/Observations';\nimport DropCounts from './DropCounts/DropCounts';\nimport PickupHatchPerformance from './PickupHatchPerformance/PickupHatchPerformance';\nimport PitInfoShow from './PitInfoShow/PitInfoShow';\n\nconst TeamStats = ({ teamData, selectedTeam, currentUser }) => {\n    if (selectedTeam === 0) {\n        return <><h2>Please select a team to view data about them</h2></>\n    }\n\n    let items;\n    let matchData;\n    if (teamData) {\n        items = teamData.images || {};\n        matchData = teamData.match_data || {};\n    } else {\n        items = {};\n        matchData = {};\n    }\n\n    let areImages = false;\n    if (Object.keys(items).length > 0) {\n        items = Object.keys(items).map(item => {\n            return { ...items[item], caption: '', header: '' }\n        });\n        areImages = true;\n    }\n\n    matchData = Object.keys(matchData).map(match => {\n        return {\n            matchNumber: Number(match),\n            ...matchData[match]\n        };\n    })\n\n    matchData = matchData.sort((a, b) => {\n        return a.matchNumber - b.matchNumber;\n    });\n\n    return <>\n        <h2>Viewing data about Team {selectedTeam}</h2>\n        <p>See pit scouting info at bottom</p>\n        <h3>Pictures</h3>\n        {areImages ? <div className=\"carouselOut\" style={{ width: window.innerWidth < 700 ? '100%' : '50%', margin: 'auto' }}>\n            <UncontrolledCarousel items={items} autoPlay={false} interval={false} />\n        </div> : <div>There are no pictures for this team</div>}\n\n        <div><AddImage {...{ selectedTeam }} /></div>\n        <Spacer space={10} />\n\n        {teamData && <div><PickupHatchPerformance selectedTeam={selectedTeam} pickupHatchPerformance={teamData.pickupHatchPerformance} currentUser={currentUser}/></div>}\n\n        {/* <div><PickupHatchPerformance pickupHatchPerformance = teamData.pickupHatchPerformance, currentUser /></div> */}\n\n        {matchData.length > 0 ? <>\n            <div style={{ margin: 'auto', textAlign: 'center' }}>\n                {/* See chart of total scores */}\n                <ShowTotalScores {...{ matchData }} />\n                <hr />\n                <Grid>\n                    <Row>\n                        <Col md={6}>\n                            <h2>Hatch vs Cargo (which does the team prefer more?)</h2>\n                            {/* See chart of hatch on rockets and cargo ship per match */}\n                            <ShowHatchData {...{ matchData }} />\n                            {/* See chart of cargo on rockets and cargo ship per match */}\n                            <ShowCargoData {...{ matchData }} />\n                        </Col>\n                        {/* Show scoring on near and rocket */}\n                        <Col md={6}>\n                            <h2>Left vs Right Rocket (relative to the team, which does the team prefer more?)</h2>\n                            {/** For sake of not renaming files, Near is Left, Far is right. */}\n                            <ShowNearRocketScoring {...{ matchData }} />\n                            <ShowFarRocketScoring {...{ matchData }} />\n                        </Col>\n                    </Row>\n                </Grid>\n                <hr />\n                <h2>Cargo vs Hatch drop count (how well are they at handling them?)</h2>\n                <DropCounts {...{ matchData }} />\n                <hr />\n                <h2>Cargo ship scores (which side is the team comfortable with?)</h2>\n                <CargoComfort {...{ matchData }} />\n                <hr />\n\n                <Grid>\n                    <Row>\n                        <Col md={6}>\n                            {/* Climbing levels */}\n                            <h2>Climb level for each match (are they consistent?)</h2>\n                            <ShowClimbs {...{ matchData }} />\n                        </Col>\n                        <Col md={6}>\n                            <h2>Autonomous performance</h2>\n                            <AutoPerformance {...{ matchData }} />\n                        </Col>\n                    </Row>\n                </Grid>\n                <hr />\n                <h2>Observations</h2>\n                <Observations {...{ matchData }} />\n                {/* Scroll through all previous matches */}\n            </div>\n        </> : <>There is no match data for this team.</>}\n        <hr />\n        <h2>Pit scouting information</h2>\n        <h3>Aka what the teams <em>say</em> they can do</h3>\n        {teamData && teamData.pit_info ? <>\n            <PitInfoShow pitinfo={teamData.pit_info} />\n        </> : <>There is no pit info data yet</>}\n\n    </> \n}\n\nexport default TeamStats;","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport BlueButton from '../../Components/BlueButton';\nimport firebase from 'firebase/app';\nimport 'firebase/database';\nimport LoadingSpinner from '../../Components/LoadingSpinner';\nimport TeamStats from './TeamStats/TeamStats';\nimport TeamPicker from '../../Components/TeamPicker/TeamPicker';\nimport Spacer from '../../Components/Spacer';\n\nconst Stats = ({ currentUser, match }) => {\n    const [data, setData] = useState(null);\n    const [loading, setLoading] = useState(true);\n    const [selectedTeam, setSelectedTeam] = useState(0);\n\n    // console.log(match);\n    useEffect(() => {\n        if(match && match.params && match.params.team) {\n            setSelectedTeam(Number(match.params.team));\n        }\n    }, []);\n\n    useEffect(() => {\n        const dataRef = firebase.database().ref(\"2019data\");\n        dataRef.on('value', (snap) => {\n            let value = snap.val() || null;\n            setData(value);\n            setLoading(false);\n        });\n\n        return () => { dataRef.off(); }\n    }, [])\n\n    if (loading) {\n        return <>\n            <LoadingSpinner />\n            <Link to=\"/\"><BlueButton>Back</BlueButton></Link>\n        </>\n    }\n\n    return <>\n        <Link to=\"/\"><BlueButton>Back</BlueButton></Link>\n        <hr />\n        <h1>View team stats</h1>\n\n        <TeamPicker {...{ allData: data, selectedTeam, setSelectedTeam }} />\n        <Spacer space={10} />\n        <TeamStats {...{ teamData: data ? data[selectedTeam] : {}, selectedTeam, currentUser }} />\n\n        <hr />\n        <Link to=\"/\"><BlueButton>Back</BlueButton></Link>\n    </>\n}\n\nexport default Stats;\n","import React from 'react';\nimport { Grid, Row, Col } from 'react-flexbox-grid';\nimport { Teams, TeamsInit, TeamsInitF } from '../../../Assets/Teams/Teams';\nimport BlueButton from '../../../Components/BlueButton';\n\nconst TeamSelector = ({ teamsToInclude, setTeamsToInclude, sortByBest, setSortByBest }) => {\n    return <>\n        <Grid>\n            <Row>\n                <Col><BlueButton style={{ margin: 10 }} onClick={() => {\n                    setTeamsToInclude(TeamsInit);\n                }}>Select all</BlueButton></Col>\n                <Col><BlueButton style={{ margin: 10 }} onClick={() => {\n                    setTeamsToInclude(TeamsInitF);\n                }}>Deselect all</BlueButton></Col>\n                <Col><div style={{ width: 2, height: '80%', backgroundColor: \"#20508b\" }}></div></Col>\n                <Col><BlueButton style={{ margin: 10 }} onClick={() => {\n                    setSortByBest(true);\n                }} disabled={sortByBest}>Sort by best</BlueButton></Col>\n                <Col><BlueButton style={{ margin: 10 }} onClick={() => {\n                    setSortByBest(false);\n                }} disabled={!sortByBest}>Sort by team</BlueButton></Col>\n            </Row>\n            <Row>\n                {Teams.map(team => {\n                    return <Col xs={3} md={3} lg={1} key={team}>\n                        <div style={{\n                            border: \"2px solid #20508B\",\n                            borderRadius: 5,\n                            padding: 3,\n                            marginBottom: 5,\n                            backgroundColor: \"#efefef\",\n                            userSelect: \"none\",\n                            cursor: \"pointer\",\n                            opacity: teamsToInclude[team] ? 1 : 0.2,\n                            textAlign: 'center'\n                        }} onClick={() => {\n                            let setTeams = { ...teamsToInclude };\n                            setTeams[team] = !setTeams[team];\n                            setTeamsToInclude(setTeams);\n                        }}>\n                            {team}\n                        </div>\n                    </Col>\n                })}\n            </Row>\n        </Grid>\n    </>\n}\n\nexport default TeamSelector;","import {\n    countCargo,\n    countHatches,\n    countBoth,\n    calculateAutonLevel\n} from \"../../Stats/TeamStats/GetDataObjects/GetDataObjects\";\n// import { } from \"../../../Assets/Teams/Teams\";\n\nconst DataCalculator = (data) => {\n    let cargoScores = {};\n    let hatchScores = {};\n    let overallScores = {};\n    let autonScores = {};\n    let rocketOverallScores = {};\n    let cargoShipOverallScores = {};\n    let cargoDropCounts = {};\n    let hatchDropCounts = {};\n    let habBonuses = {};\n    let overallScoresAvg = {};\n\n    if(data) {\n\n        Object.keys(data).forEach(team => {\n            const matchData = data[team] && data[team].match_data ? data[team].match_data : {}\n            let matchCount = Object.keys(matchData).length;\n            let cargoTotal = 0;\n            let hatchTotal = 0;\n            let overallTotal = 0;\n            let autonTotal = 0;\n            let rocketTotal = 0;\n            let cargoShipTotal = 0;\n            let cargoDropCount = 0;\n            let hatchDropCount = 0;\n            let habBonus = 0;\n            let overallScore = 0;\n            Object.keys(matchData).forEach(matchKey => {\n                let match = matchData[matchKey]\n    \n                let countBothNearRocket = countBoth(match.nearRocket);\n                let countBothFarRocket = countBoth(match.farRocket);\n                let countBothCargoShip = countBoth(match.cargo)\n    \n                cargoTotal += countCargo(match.nearRocket) + countCargo(match.farRocket) + countCargo(match.cargo);\n                hatchTotal += countHatches(match.nearRocket) + countHatches(match.farRocket) + countHatches(match.cargo);\n                overallTotal += countBothNearRocket + countBothFarRocket + countBothCargoShip;\n                autonTotal += calculateAutonLevel(match.selectedAuton)\n                rocketTotal += countBothNearRocket + countBothFarRocket;\n                cargoShipTotal += countBothCargoShip;\n                cargoDropCount += match.cargoDropped;\n                hatchDropCount += match.hatchesDropped;\n                habBonus += match.habBonus;\n                overallScore += match.score;\n            });\n    \n            if (matchCount > 0) {\n                cargoScores[team] = cargoTotal / matchCount;\n                hatchScores[team] = hatchTotal / matchCount;\n                overallScores[team] = overallTotal / matchCount;\n                autonScores[team] = autonTotal / matchCount;\n                rocketOverallScores[team] = rocketTotal / matchCount;\n                cargoShipOverallScores[team] = cargoShipTotal / matchCount;\n                cargoDropCounts[team] = cargoDropCount / matchCount;\n                hatchDropCounts[team] = hatchDropCount / matchCount;\n                habBonuses[team] = habBonus / matchCount;\n                overallScoresAvg[team] = overallScore / matchCount;\n            }\n        });\n    }\n\n    return {\n        cargoScores,\n        hatchScores,\n        overallScores,\n        autonScores,\n        rocketOverallScores,\n        cargoShipOverallScores,\n        cargoDropCounts,\n        hatchDropCounts,\n        habBonuses,\n        overallScoresAvg\n    };\n}\n\n\n\nexport default DataCalculator;","import React from 'react';\nimport {\n    BarChart, Bar, XAxis, YAxis, Tooltip, Cell\n} from 'recharts';\n\nconst CustomTick = ({ x, y, stroke, payload }) => {\n    return <>\n        <g transform={`translate(${x},${y})`}>\n            <text x={0} y={0} dy={\n                window.innerWidth < 550 ? 3 : 6} textAnchor=\"end\" fill=\"#666\" transform=\"rotate(-90)\" fontSize={\n                    window.innerWidth < 550 ? 8 : 16}>{payload.value}</text>\n        </g>\n    </>\n}\n\nconst GeneralBarChart = ({ data, dataKey, highlightedTeams }) => {\n    return <BarChart\n        width={window.innerWidth < 550 ? 300 : 550}\n        height={250}\n        data={data}\n        margin={{ top: 0, right: 0, left: 0, bottom: 13 }}>\n        <XAxis dataKey=\"name\" interval={0} tick={<CustomTick />} />\n        <YAxis label={{ value: dataKey, angle: -90, position: \"insideLeft\" }} />\n        <Tooltip />\n        {/* <Legend /> */}\n        {/* <Bar dataKey={dataKey} fill=\"#20508B\" /> */}\n        <Bar dataKey={dataKey}>\n            {\n                data.map((entry, index) => (\n                    <Cell fill={highlightedTeams && highlightedTeams[entry.name] ? \"#ff0000\" : \"#20508b\"}\n                        key={\"cell\"+index} />\n                ))\n            }\n        </Bar>\n    </BarChart>\n}\n\nexport default GeneralBarChart;","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport BlueButton from '../../Components/BlueButton';\nimport firebase from 'firebase/app';\nimport 'firebase/database';\nimport LoadingSpinner from '../../Components/LoadingSpinner';\nimport { TeamsInit } from '../../Assets/Teams/Teams';\nimport TeamSelector from './TeamSelector/TeamSelector';\nimport DataCalculator from './DataCalculator/DataCalculator';\nimport GeneralBarChart from './GeneralBarChart/GeneralBarChart';\nimport { Grid, Row, Col } from 'react-flexbox-grid';\nimport {Input} from 'reactstrap';\nimport {isEqual} from 'lodash';\n\nconst AllStats = ({ currentUser }) => {\n    const [info, setCalculatedInfo] = useState({});\n    const [loading, setLoading] = useState(true);\n    const [teamsToInclude, setTeamsToInclude] = useState(TeamsInit);\n    const [sortByBest, setSortByBest] = useState(true);\n    const [highlightedTeams, setHighlightedTeams] = useState({});\n    useEffect(() => {\n        const dataRef = firebase.database().ref(\"2019data\");\n        dataRef.on('value', (snap) => {\n            let value = snap.val() || null;\n            let calculatedInfo = DataCalculator(value)\n            setCalculatedInfo(calculatedInfo);\n            setLoading(false);\n        });\n\n        return () => { dataRef.off(); }\n    }, [])\n\n    if (loading) {\n        return <>\n            <LoadingSpinner />\n            <Link to=\"/\"><BlueButton>Back</BlueButton></Link>\n        </>\n    }\n\n    // Get the teams to show\n    let teamsArr = [];\n    Object.keys(teamsToInclude).forEach(team => {\n        if (teamsToInclude[team]) {\n            teamsArr.push(team);\n        }\n    });\n    teamsArr = teamsArr.map(d => Number(d));\n    teamsArr = teamsArr.sort((a, b) => a - b);\n\n    // Convert to objects used in the bar charts\n    let avgCargoScoreData = [];\n    let currHighestCargoAvg = [\"Nobody\", 0];\n    let avgHatchScoreData = [];\n    let currHighestHatchAvg = [\"Nobody\", 0];\n    let overallBothScoreData = [];\n    let highestOverallScore = [\"Nobody\", 0];\n    let autonScoreData = [];\n    let highestAutonScore = [\"Nobody\", 0];\n    let rocketScoreData = [];\n    let highestRocketScore = [\"Nobody\", 0];\n    let cargoScoreData = [];\n    let highestCargoScore = [\"Nobody\", 0];\n    let cargoDropData = [];\n    let lowestCargoDropCount = [\"Nobody\", Infinity];\n    let hatchDropData = [];\n    let lowestHatchDropCount = [\"Nobody\", Infinity];\n    let habBonuses = [];\n    let highestHabBonus = [\"Nobody\", 0];\n    let overallScores = [];\n    let highestOverallScoreCombinedAll = [\"Nobody\", 0];\n\n    teamsArr.forEach(team => {\n        let cargoScoreCurr = info.cargoScores[team];\n        let hatchScoreCurr = info.hatchScores[team];\n        let overallScoreCurr = info.overallScores[team];\n        let autonScoreCurr = info.autonScores[team];\n        let rocketOverallCurr = info.rocketOverallScores[team];\n        let cargoShipOverallCurr = info.cargoShipOverallScores[team];\n        let cargoDropCurr = info.cargoDropCounts[team];\n        let hatchDropCurr = info.hatchDropCounts[team];\n        let habBonusCurr = info.habBonuses[team];\n        let scoreCurr = info.overallScoresAvg[team];\n        \n        if(scoreCurr || scoreCurr === 0) {\n            overallScores.push({\n                name: team,\n                score: scoreCurr\n            });\n            if(scoreCurr > highestOverallScoreCombinedAll[1]) {\n                highestOverallScoreCombinedAll = [team, scoreCurr];\n            }\n        }\n\n        if (habBonusCurr || habBonusCurr === 0) {\n            habBonuses.push({\n                name: team,\n                score: habBonusCurr\n            });\n            if (habBonusCurr > highestHabBonus[1]) {\n                highestHabBonus = [team, habBonusCurr];\n            }\n        }\n\n        if (cargoDropCurr || cargoDropCurr === 0) {\n            cargoDropData.push({\n                name: team,\n                count: cargoDropCurr\n            });\n            if (cargoDropCurr < lowestCargoDropCount[1]) {\n                lowestCargoDropCount = [team, cargoDropCurr];\n            }\n        }\n\n        if (hatchDropCurr || hatchDropCurr === 0) {\n            hatchDropData.push({\n                name: team,\n                count: hatchDropCurr\n            });\n            if (hatchDropCurr < lowestHatchDropCount[1]) {\n                lowestHatchDropCount = [team, hatchDropCurr];\n            }\n        }\n\n        if (rocketOverallCurr || rocketOverallCurr === 0) {\n            rocketScoreData.push({\n                name: team,\n                count: rocketOverallCurr\n            });\n            if (rocketOverallCurr > highestRocketScore[1]) {\n                highestRocketScore = [team, rocketOverallCurr];\n            }\n        }\n\n        if (cargoShipOverallCurr || cargoShipOverallCurr === 0) {\n            cargoScoreData.push({\n                name: team,\n                count: cargoShipOverallCurr\n            });\n            if (cargoShipOverallCurr > highestCargoScore[1]) {\n                highestCargoScore = [team, cargoShipOverallCurr];\n            }\n        }\n\n\n        if (autonScoreCurr || autonScoreCurr === 0) {\n            autonScoreData.push({\n                name: team,\n                score: autonScoreCurr\n            });\n            if (autonScoreCurr > highestAutonScore[1]) {\n                highestAutonScore = [team, autonScoreCurr];\n            }\n        }\n\n        if (overallScoreCurr || overallScoreCurr === 0) {\n            overallBothScoreData.push({\n                name: team,\n                count: overallScoreCurr\n            });\n            if (overallScoreCurr > highestOverallScore[1]) {\n                highestOverallScore = [team, overallScoreCurr];\n            }\n        }\n\n        if (cargoScoreCurr || cargoScoreCurr === 0) {\n            avgCargoScoreData.push({\n                name: team,\n                count: cargoScoreCurr\n            });\n            if (cargoScoreCurr > currHighestCargoAvg[1]) {\n                currHighestCargoAvg = [team, cargoScoreCurr];\n            }\n        }\n\n        if (hatchScoreCurr || hatchScoreCurr === 0) {\n            avgHatchScoreData.push({\n                name: team,\n                count: hatchScoreCurr\n            });\n            if (hatchScoreCurr > currHighestHatchAvg[1]) {\n                currHighestHatchAvg = [team, hatchScoreCurr];\n            }\n        }\n    });\n\n    if (sortByBest) {\n        avgCargoScoreData = avgCargoScoreData.sort((a, b) => {\n            return b.count - a.count;\n        });\n\n        avgHatchScoreData = avgHatchScoreData.sort((a, b) => {\n            return b.count - a.count;\n        });\n\n        overallBothScoreData = overallBothScoreData.sort((a, b) => {\n            return b.count - a.count;\n        });\n\n        autonScoreData = autonScoreData.sort((a, b) => {\n            return b.score - a.score;\n        });\n\n        rocketScoreData = rocketScoreData.sort((a, b) => {\n            return b.count - a.count;\n        });\n\n        cargoScoreData = cargoScoreData.sort((a, b) => {\n            return b.count - a.count;\n        });\n\n        cargoDropData = cargoDropData.sort((a, b) => {\n            return a.count - b.count;\n        });\n\n        hatchDropData = hatchDropData.sort((a, b) => {\n            return a.count - b.count;\n        });\n\n        habBonuses = habBonuses.sort((a, b) => {\n            return b.score - a.score;\n        });\n\n        overallScores = overallScores.sort((a,b) => {\n            return b.score - a.score;\n        })\n    }\n    return <>\n        <Link to=\"/\"><BlueButton>Back</BlueButton></Link>\n        <hr />\n        <h1>View all stats</h1>\n\n        <h2>Click on a team to hide/show them</h2>\n        <TeamSelector {...{ teamsToInclude, setTeamsToInclude, sortByBest, setSortByBest }} />\n        <h3>Enter a comma separated list of teams to highlight them</h3>\n        <Input placeholder={\"Enter team numbers, eg: 359,2090\"} onChange={\n            (e) => {\n                if (e.target.value !== \"\") {\n                    let newThing = {}\n                    e.target.value.split(\",\").forEach(team => {\n                        let tToN = Number(team);\n                        if(TeamsInit[tToN]) {\n                            newThing[tToN] = true;\n                        }\n                    });\n                    if (!isEqual(newThing, highlightedTeams)) {\n                        setHighlightedTeams(newThing);\n                    }\n                }\n            }\n        }/>\n        <Grid>\n            <Row>\n                <Col md={6} sm={12} xs={12}>\n                    {info && info.cargoScores && <>\n                        <div style={{ textAlign: 'center' }}>\n                            <h2>Average cargo scores</h2>\n                            <h3>Higher is better (current highest: {currHighestCargoAvg[0]})</h3>\n                        </div>\n                        <GeneralBarChart {...{highlightedTeams}} data={avgCargoScoreData} dataKey={\"count\"} />\n                    </>}\n                </Col>\n                <Col md={6} sm={12} xs={12}>\n                    {info && info.hatchScores && <>\n                        <div style={{ textAlign: 'center' }}>\n                            <h2 style={{ textAlign: 'center' }}>Average hatch scores</h2>\n                            <h3>Higher is better (current highest: {currHighestHatchAvg[0]})</h3>\n                        </div>\n                        <GeneralBarChart {...{highlightedTeams}} data={avgHatchScoreData} dataKey={\"count\"} />\n                    </>}\n                </Col>\n                <Col md={6} sm={12} xs={12}>\n                    {info && info.overallScores && <>\n                        <div style={{ textAlign: 'center' }}>\n                            <h2 style={{ textAlign: 'center' }}>Average combined hatch + cargo</h2>\n                            <h3>Higher is better (current highest: {highestOverallScore[0]})</h3>\n                        </div>\n                        <GeneralBarChart {...{highlightedTeams}} data={overallBothScoreData} dataKey={\"count\"} />\n                    </>}\n                </Col>\n                <Col md={6} sm={12} xs={12}>\n                    {info && info.autonScores && <>\n                        <div style={{ textAlign: 'center' }}>\n                            <h2 style={{ textAlign: 'center' }}>Average auton performance</h2>\n                            <h3>Higher is better (current highest: {highestAutonScore[0]})</h3>\n                        </div>\n                        <GeneralBarChart {...{highlightedTeams}} data={autonScoreData} dataKey={\"score\"} />\n                    </>}\n                </Col>\n                <Col md={6} sm={12} xs={12}>\n                    {info && info.rocketOverallScores && <>\n                        <div style={{ textAlign: 'center' }}>\n                            <h2 style={{ textAlign: 'center' }}>Rocket performance</h2>\n                            <h3>Higher is better (current highest: {highestRocketScore[0]})</h3>\n                        </div>\n                        <GeneralBarChart {...{highlightedTeams}} data={rocketScoreData} dataKey={\"count\"} />\n                    </>}\n                </Col>\n                <Col md={6} sm={12} xs={12}>\n                    {info && info.cargoShipOverallScores && <>\n                        <div style={{ textAlign: 'center' }}>\n                            <h2 style={{ textAlign: 'center' }}>Cargo ship performance</h2>\n                            <h3>Higher is better (current highest: {highestCargoScore[0]})</h3>\n                        </div>\n                        <GeneralBarChart {...{highlightedTeams}} data={cargoScoreData} dataKey={\"count\"} />\n                    </>}\n                </Col>\n                <Col md={6} sm={12} xs={12}>\n                    {info && info.cargoDropCounts && <>\n                        <div style={{ textAlign: 'center' }}>\n                            <h2 style={{ textAlign: 'center' }}>Cargo drop averages</h2>\n                            <h3>Lower is better (current lowest: {lowestCargoDropCount[0]})</h3>\n                        </div>\n                        <GeneralBarChart {...{highlightedTeams}} data={cargoDropData} dataKey={\"count\"} />\n                    </>}\n                </Col>\n                <Col md={6} sm={12} xs={12}>\n                    {info && info.hatchDropCounts && <>\n                        <div style={{ textAlign: 'center' }}>\n                            <h2 style={{ textAlign: 'center' }}>Hatch drop averages</h2>\n                            <h3>Lower is better (current lowest: {lowestHatchDropCount[0]})</h3>\n                        </div>\n                        <GeneralBarChart {...{highlightedTeams}} data={hatchDropData} dataKey={\"count\"} />\n                    </>}\n                </Col>\n                <Col md={6} sm={12} xs={12}>\n                    {info && info.habBonuses && <>\n                        <div style={{ textAlign: 'center' }}>\n                            <h2 style={{ textAlign: 'center' }}>Hab Bonus Level Avgs</h2>\n                            <h3>Higher is better (current highest: {highestHabBonus[0]})</h3>\n                        </div>\n                        <GeneralBarChart {...{highlightedTeams}} data={habBonuses} dataKey={\"score\"} />\n                    </>}\n                </Col>\n                <Col md={6} sm={12} xs={12}>\n                    {info && info.overallScoresAvg && <>\n                        <div style={{ textAlign: 'center' }}>\n                            <h2 style={{ textAlign: 'center' }}>Overall Individual Score Averages</h2>\n                            <h3>Higher is better (current highest: {highestOverallScoreCombinedAll[0]})</h3>\n                        </div>\n                        <GeneralBarChart {...{highlightedTeams}} data={overallScores} dataKey={\"score\"} />\n                    </>}\n                </Col>\n            </Row>\n        </Grid>\n\n\n        <hr />\n        <Link to=\"/\"><BlueButton>Back</BlueButton></Link>\n    </>\n}\n\nexport default AllStats;\n","const Matches = {1: {'blueTeams': [2443, 4270, 2853], 'redTeams': [7898, 7497, 2465]},\n 10: {'blueTeams': [6704, 3878, 2090], 'redTeams': [2443, 6998, 7724], video: \"https://www.twitch.tv/videos/403119403?t=16m02s\"},\n 11: {'blueTeams': [6909, 2465, 2438], 'redTeams': [359, 2504, 7631]},\n 12: {'blueTeams': [368, 2896, 2439], 'redTeams': [2441, 6998, 4270]},\n 13: {'blueTeams': [3008, 359, 3882], 'redTeams': [7505, 7548, 2438]},\n 14: {'blueTeams': [2444, 2090, 2896], 'redTeams': [2853, 6909, 3721], video: \"https://www.twitch.tv/videos/403119403?t=51m46s\"},\n 15: {'blueTeams': [2504, 2443, 2441], 'redTeams': [2445, 2437, 4253]},\n 16: {'blueTeams': [7631, 7898, 6704], 'redTeams': [3878, 5701, 7497]},\n 17: {'blueTeams': [7724, 5515, 3800], 'redTeams': [6766, 2477, 2465]},\n 18: {'blueTeams': [6998, 3878, 7505], 'redTeams': [2853, 368, 2504]},\n 19: {'blueTeams': [2438, 5515, 2437], 'redTeams': [7548, 2090, 6766]},\n 2: {'blueTeams': [2439, 7631, 7548], 'redTeams': [2441, 2090, 4253]},\n 20: {'blueTeams': [2465, 5701, 2444], 'redTeams': [2439, 4253, 3882]},\n 21: {'blueTeams': [7898, 3721, 2443], 'redTeams': [7631, 3008, 7724]},\n 22: {'blueTeams': [2441, 2896, 7497], 'redTeams': [6909, 2477, 359]},\n 23: {'blueTeams': [2445, 2504, 6704], 'redTeams': [2444, 3800, 4270]},\n 24: {'blueTeams': [6766, 6998, 5515], 'redTeams': [359, 2438, 2441]},\n 25: {'blueTeams': [2437, 7497, 2443], 'redTeams': [2853, 5701, 2090]},\n 26: {'blueTeams': [368, 7548, 2465], 'redTeams': [6704, 2439, 6909]},\n 27: {'blueTeams': [7505, 7898, 7724], 'redTeams': [2445, 2896, 3008]},\n 28: {'blueTeams': [4253, 3721, 3800], 'redTeams': [7631, 3878, 2477]},\n 29: {'blueTeams': [4270, 2437, 6909], 'redTeams': [3882, 2443, 7505]},\n 3: {'blueTeams': [3882, 368, 6998], 'redTeams': [6909, 2445, 7505]},\n 30: {'blueTeams': [368, 6766, 2438], 'redTeams': [2477, 7898, 2896]},\n 31: {'blueTeams': [2441, 2444, 7548], 'redTeams': [7724, 2465, 3878]},\n 32: {'blueTeams': [3800, 2853, 359], 'redTeams': [7497, 3882, 7631]},\n 33: {'blueTeams': [4253, 6704, 3008], 'redTeams': [4270, 2504, 2090]},\n 34: {'blueTeams': [5701, 2439, 6998], 'redTeams': [3721, 5515, 2445]},\n 35: {'blueTeams': [2504, 4253, 2477], 'redTeams': [7724, 2853, 3882]},\n 36: {'blueTeams': [5515, 2465, 7631], 'redTeams': [2444, 6909, 3878]},\n 37: {'blueTeams': [2438, 2090, 3800], 'redTeams': [3008, 368, 2441]},\n 38: {'blueTeams': [2896, 359, 4270], 'redTeams': [5701, 7505, 3721]},\n 39: {'blueTeams': [6998, 2445, 7898], 'redTeams': [6704, 7548, 2437]},\n 4: {'blueTeams': [2437, 3878, 3008], 'redTeams': [6766, 2896, 2504]},\n 40: {'blueTeams': [6766, 2443, 3878], 'redTeams': [7497, 3721, 2439]},\n 41: {'blueTeams': [2504, 3008, 5701], 'redTeams': [7548, 2853, 7898]},\n 42: {'blueTeams': [2437, 7724, 6766], 'redTeams': [7497, 4270, 368]},\n 43: {'blueTeams': [2090, 3882, 2445], 'redTeams': [2465, 359, 6704]},\n 44: {'blueTeams': [2441, 7505, 5515], 'redTeams': [2443, 4253, 2896]},\n 45: {'blueTeams': [2477, 2439, 2444], 'redTeams': [6998, 2438, 7631]},\n 46: {'blueTeams': [6909, 7497, 2090], 'redTeams': [3800, 6766, 7898]},\n 47: {'blueTeams': [2477, 2441, 2437], 'redTeams': [7505, 4270, 2465]},\n 48: {'blueTeams': [3878, 3882, 3800], 'redTeams': [3008, 2438, 2443]},\n 49: {'blueTeams': [6998, 359, 3721], 'redTeams': [368, 6909, 4253]},\n 5: {'blueTeams': [7724, 3721, 2438], 'redTeams': [5701, 3800, 6704]},\n 50: {'blueTeams': [2504, 7724, 2439], 'redTeams': [2896, 6704, 5515]},\n 51: {'blueTeams': [2853, 7631, 2444], 'redTeams': [7548, 2445, 5701]},\n 52: {'blueTeams': [3878, 2504, 7898], 'redTeams': [2090, 2437, 368]},\n 53: {'blueTeams': [3721, 6704, 2477], 'redTeams': [2465, 6998, 2853]},\n 54: {'blueTeams': [7505, 6766, 3008], 'redTeams': [7631, 2441, 5701]},\n 55: {'blueTeams': [7548, 5515, 2443], 'redTeams': [2896, 3800, 6909]},\n 56: {'blueTeams': [4253, 2438, 7497], 'redTeams': [2444, 7724, 2445]},\n 57: {'blueTeams': [4270, 3882, 7898], 'redTeams': [359, 2439, 5515]},\n 58: {'blueTeams': [7497, 3008, 7548], 'redTeams': [2896, 2437, 6998]},\n 59: {'blueTeams': [2443, 7631, 6909], 'redTeams': [2444, 6704, 368]},\n 6: {'blueTeams': [5515, 2477, 368], 'redTeams': [2437, 2444, 359]},\n 60: {'blueTeams': [2439, 7505, 2853], 'redTeams': [2090, 7724, 359]},\n 61: {'blueTeams': [3800, 2465, 2445], 'redTeams': [4270, 4253, 3878]},\n 62: {'blueTeams': [3721, 2441, 6766], 'redTeams': [2438, 3882, 2504]},\n 63: {'blueTeams': [5701, 6909, 7724], 'redTeams': [2477, 3008, 6998]},\n 64: {'blueTeams': [4253, 2444, 7505], 'redTeams': [6704, 2853, 6766]},\n 65: {'blueTeams': [2438, 2445, 4270], 'redTeams': [5515, 7497, 2504]},\n 66: {'blueTeams': [3721, 7631, 2896], 'redTeams': [2439, 3800, 2437]},\n 67: {'blueTeams': [7898, 368, 5701], 'redTeams': [2465, 2441, 3882]},\n 68: {'blueTeams': [3878, 359, 7548], 'redTeams': [2090, 2443, 2477]},\n 7: {'blueTeams': [5701, 6766, 4253], 'redTeams': [3882, 7548, 3721]},\n 8: {'blueTeams': [2445, 2477, 2853], 'redTeams': [3008, 4270, 2439]},\n 9: {'blueTeams': [3800, 7505, 7497], 'redTeams': [5515, 7898, 2444]}};\n\nexport default Matches;","import React from 'react';\nimport Matches from './Matches';\nimport {Link} from 'react-router-dom';\nimport BlueButton from '../../Components/BlueButton';\nimport {Table} from 'reactstrap';\nimport \"./Matches.css\";\nimport { TeamsMapping } from '../../Assets/Teams/Teams';\n\nconst MatchSchedule = () => {\n    let orderedMatches = Object.keys(Matches).sort((a,b) => {\n        return Number(a) - Number(b);\n    });\n\n\n    return <>\n        <Link to=\"/\"><BlueButton>Back</BlueButton></Link>\n        <h1>Match schedule</h1>\n        <h3>Click on a team to go to their info page</h3>\n        <h3>Click on a match (if highlighted) to go to that match on Twitch</h3>\n        <Table bordered size=\"sm\" responsive>\n            <thead>\n                <tr>\n                    <th>#</th>\n                    <th className=\"blue\">Blue 1</th>\n                    <th className=\"blue\">Blue 2</th>\n                    <th className=\"blue\">Blue 3</th>\n                    <th className=\"red\">Red 1</th>\n                    <th className=\"red\">Red 2</th>\n                    <th className=\"red\">Red 3</th>\n                </tr>\n            </thead>\n            <tbody>\n                {orderedMatches.map(match => {\n                    return <tr key={match}>\n                        <th>{Matches[match].video ? <a style={{backgroundColor: \"#eeee00\"}} href={Matches[match].video}>{match}</a> : match}</th>\n                        {Matches[match].blueTeams.map(blueTeam => {\n                            return <td key={\"bl-\"+match+blueTeam} className={blueTeam === 2090 ? \"punahou\" :\"blue\"}><Link to={`/stats/${blueTeam}`}><strong>{blueTeam}</strong> - {TeamsMapping[blueTeam]}</Link></td>\n                        })}\n                        {Matches[match].redTeams.map(redTeam => {\n                            return <td key={\"bl-\"+match+redTeam} className={redTeam === 2090 ? \"punahou\" : \"red\"}><Link to={`/stats/${redTeam}`}><strong>{redTeam}</strong> - {TeamsMapping[redTeam]}</Link></td>\n                        })}\n                    </tr>   \n                })}\n            </tbody>\n        </Table>\n        \n\n        <hr />\n        <Link to=\"/\"><BlueButton>Back</BlueButton></Link>\n    </>\n}\n\nexport default MatchSchedule;","import React, { useState, useEffect } from 'react';\nimport firebase from 'firebase/app';\nimport 'firebase/database';\nimport 'firebase/auth';\nimport LoadingSpinner from '../Components/LoadingSpinner';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport BlueButton from '../Components/BlueButton';\nimport MainPage from './MainPage/MainPage';\nimport EnterInfo from './EnterInfo/EnterInfo';\nimport Stats from './Stats/Stats';\nimport AllStats from './AllStats/AllStats';\nimport PitInfo from './PitInfo/PitInfo';\nimport MatchSchedule from './MatchSchedule/MatchSchedule';\n\nconst Home = ({ currentUser }) => {\n    const [canSee, setCanSee] = useState(false)\n    const [loading, setLoading] = useState(true)\n\n    useEffect(() => {\n        const canSeeRef = firebase.database().ref(\"canSee2019\");\n        canSeeRef.on('value', (snap) => {\n            let value = snap.val() || false;\n            setCanSee(value);\n            setLoading(false);\n        });\n\n        return () => { canSeeRef.off(); };\n    }, []);\n\n    if (loading) {\n        return <>\n            <LoadingSpinner />\n            <div>If you see this spinner for a while it means you do not have access to the page</div>\n            <BlueButton style={{ marginTop: 10 }} onClick={() => {\n                firebase.auth().signOut();\n            }}>Sign out</BlueButton>\n        </>\n    }\n\n    return <>\n        {canSee &&\n            <>\n                <Router>\n                    <Switch>\n                        <Route exact path=\"/\" component={() => <MainPage currentUser={currentUser} />} />\n                        {/* <Route path=\"/enterinfo\" component={() => <EnterInfo currentUser={currentUser} />} /> */}\n                        {/* <Route path=\"/enterpitscouting\" component={() => <PitInfo currentUser={currentUser} />} />  */}\n                        <Route exact path=\"/stats\" component={(r) => <Stats currentUser={currentUser} />} />\n                        <Route path=\"/stats/:team\" component={(r) => <Stats {...r} currentUser={currentUser} />} />\n                        <Route path=\"/allstats\" component={() => <AllStats currentUser={currentUser} />} />\n                        <Route path=\"/matchschedule\" component={() => <MatchSchedule />} />\n                        <Route component={() => <div>This page does not exist</div>} />\n                    </Switch>\n                </Router>\n            </>\n        }\n\n        {!canSee &&\n            <>\n                <div>You are not authorized to see this page.</div>\n                <BlueButton style={{ marginTop: 10 }} onClick={() => {\n                    firebase.auth().signOut();\n                }}>Sign out</BlueButton>\n            </>\n        }\n\n\n    </>\n}\n\nexport default Home;","import React, { Component } from 'react';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport Home from './Pages/Home';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport LoadingSpinner from './Components/LoadingSpinner';\nimport BlueButton from './Components/BlueButton';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst provider = new firebase.auth.GoogleAuthProvider();\n\nclass App extends Component {\n    state = {\n        currentUser: null,\n        loading: true\n    }\n\n    // When the component mounts, connect to firebase and check if\n    // user is logged in or not\n    componentDidMount = () => {\n        this.auth = firebase.auth().onAuthStateChanged(user => {\n            if (user) {\n                this.setState({\n                    currentUser: user,\n                    loading: false\n                });\n                toast.success(\"Login successful\", { autoClose: 3000 })\n            } else {\n                this.setState({\n                    currentUser: null,\n                    loading: false\n                });\n            }\n        })\n    }\n\n    render() {\n        const { currentUser, loading } = this.state;\n\n        // If still loading, show a spinner instead.\n        if (loading) {\n            return <LoadingSpinner />;\n        }\n\n        return (\n            <div style={{\n                marginLeft: '5%',\n                marginRight: '5%',\n                marginTop: '2%',\n                marginBottom: '5%'\n            }}>\n                <ToastContainer />\n                {/** If the user isn't logged in, show a button to log in via Google */}\n                {!currentUser &&\n                    <>\n                        <div style={{\n                            margin: 'auto',\n                            color: \"#20508b\"\n                        }}>\n                            <h1>FRC 2090 Scouting App 2019</h1>\n                            <h2>Built by William Kwok</h2>\n                            <BlueButton style={{ marginTop: 10 }}\n                                onClick={() => {\n                                    firebase.auth().signInWithRedirect(provider);\n                                }}\n                            >Log in via google</BlueButton>\n                        </div>\n                    </>\n                }\n\n                {/** If the user is logged in, enable different routes. */}\n                {currentUser && <Home currentUser={currentUser} />\n                }\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport firebase from 'firebase/app';\n\nconsole.log(\"v1.0.0\");\n\n// Firebase config. This API Key is completely okay to be exposed\nconst config = {\n    apiKey: \"AIzaSyDqNearNomkDkz8cgGN5jkvnKUcxabHQ1g\",\n    authDomain: \"frc2090scouting.firebaseapp.com\",\n    databaseURL: \"https://frc2090scouting.firebaseio.com\",\n    projectId: \"frc2090scouting\",\n    storageBucket: \"frc2090scouting.appspot.com\",\n    messagingSenderId: \"536911532006\"\n};\nfirebase.initializeApp(config);\n\n// React render to the root element\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}