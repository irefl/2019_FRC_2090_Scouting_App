{"version":3,"sources":["Assets/Images/HabPlatforms.png","Components/LoadingSpinner.js","Components/BlueButton.js","Pages/MainPage/MainPage.js","Pages/EnterInfo/MatchNumberInput/MatchNumberInput.js","Pages/EnterInfo/AutonPointsPicker/AutonPointsPicker.js","Assets/Teams/Teams.js","Components/TeamPicker/TeamPicker.js","Components/Constants/ScoringConfigurations.js","Pages/EnterInfo/CargoCell/Icons/Icons.js","Pages/EnterInfo/CargoCell/CargoCell.js","Pages/EnterInfo/Rocket/Rocket.js","Pages/EnterInfo/SidePicker/SidePicker.js","Pages/EnterInfo/CargoShip/CargoShip.js","Components/Constants/HabLevels.js","Pages/EnterInfo/HabLevelPicker/HabLevelPicker.js","Components/Spacer.js","Pages/EnterInfo/CargoAndHatchesDropped/CargoAndHatchesDropped.js","Pages/EnterInfo/SubmissionCount/SubmissionCount.js","Pages/EnterInfo/EnterInfo.js","Pages/Stats/TeamStats/AddImage/AddImage.js","Pages/Stats/TeamStats/GetDataObjects/GetDataObjects.js","Pages/Stats/TeamStats/Charts/MatchScoreChart/MatchScoreChart.js","Pages/Stats/TeamStats/ShowHatchData/ShowHatchData.js","Pages/Stats/TeamStats/ShowCargoData/ShowCargoData.js","Pages/Stats/TeamStats/ShowTotalScores/ShowTotalScores.js","Pages/Stats/TeamStats/ShowNearRocketScoring/ShowNearRocketScoring.js","Pages/Stats/TeamStats/ShowFarRocketScoring/ShowFarRocketScoring.js","Pages/Stats/TeamStats/CargoComfort/CargoComfort.js","Pages/Stats/TeamStats/ShowClimbs/ShowClimbs.js","Pages/Stats/TeamStats/AutoPerformance/AutoPerformance.js","Pages/Stats/TeamStats/Observations/Observations.js","Pages/Stats/TeamStats/DropCounts/DropCounts.js","Pages/Stats/TeamStats/PickupHatchPerformance/PickupHatchConstants.js","Pages/Stats/TeamStats/PickupHatchPerformance/PickupHatchPerformance.js","Pages/Stats/TeamStats/PitInfoShow/PitInfoShow.js","Pages/Stats/TeamStats/TeamStats.js","Pages/Stats/Stats.js","Pages/AllStats/TeamSelector/TeamSelector.js","Pages/AllStats/DataCalculator/DataCalculator.js","Pages/AllStats/GeneralBarChart/GeneralBarChart.js","Pages/AllStats/AllStats.js","Pages/PitInfo/PitInfoConsts/PitInfoConsts.js","Pages/PitInfo/InputBox/InputBox.js","Pages/PitInfo/ReliabilityInput/ReliabilityInput.js","Pages/PitInfo/PitInfo.js","Pages/MatchSchedule/Matches.js","Pages/MatchSchedule/MatchSchedule.js","Pages/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","LoadingSpinner","react_default","a","createElement","Fragment","style","margin","marginTop","textAlign","react_loader_spinner_default","type","color","height","width","BlueButton","_ref","onClick","children","disabled","Button","Object","objectSpread","backgroundColor","pages","link","name","MainPage","currentUser","displayName","map","page","i","key","react_router_dom","to","Components_BlueButton","firebase","auth","signOut","MatchNumberInput","matchNumber","setMatchNumber","InputGroup","InputGroupAddon","addonType","InputGroupText","Input","value","placeholder","onChange","e","newNumber","Number","target","toast","warn","Levels","AutonPointsPicker","selectedAuton","setSelectedAuton","_useState","useState","_useState2","slicedToArray","dropOpen","setDropOpen","Dropdown","isOpen","toggle","DropdownToggle","caret","DropdownMenu","modifiers","setMaxHeight","enabled","order","fn","data","styles","overflow","maxHeight","window","innerHeight","level","DropdownItem","Teams","TeamsMapping","359","368","2090","2437","2438","2439","2441","2443","2444","2445","2465","2477","2504","2853","2896","3008","3721","3800","3878","3882","4253","4270","5515","5701","6704","6766","6909","6998","7497","7505","7548","7550","7631","7724","7898","TeamsInit","TeamsInitF","TeamPicker","allData","selectedTeam","setSelectedTeam","team","numEntries","match_data","keys","length","ScoringConfigurations","NONE","CARGO","HATCH","CARGO_AND_HATCH","None","Cargo","cx","cy","r","stroke","strokeWidth","fill","Hatch","CargoAndHatch","CargoCell","rocket","setRocket","cantChange","border","display","cursor","userSelect","cellName","newRocket","setCell","Icons_None","Icons_Hatch","Icons_CargoAndHatch","Icons_Cargo","Rocket","marginRight","fontSize","EnterInfo_CargoCell_CargoCell","SidePicker","side","setSide","CargoShip","HabLevels","LEVEL_1","LEVEL_2","LEVEL_3","LevelsMapping","_LevelsMapping","defineProperty","HabLevelPicker","habBonus","setHabBonus","Spacer","space","CargoAndHatchesDropped","setValue","SubmissionCount","setData","_useState3","_useState4","loading","setLoading","useEffect","dataRef","database","ref","on","snap","val","off","count","teams","forEach","push","d","sort","b","fontWeight","join","calculateCargo","score","checkValidity","doubleChecked","cargoDropped","hatchesDropped","error","EnterInfo","_ref3","_useState5","_useState6","_useState7","_useState8","_useState9","topLeft","topRight","midLeft","midRight","botLeft","botRight","_useState10","nearRocket","setNearRocket","_useState11","_useState12","farRocket","setFarRocket","_useState13","bay1","bay2","bay3","bay4","bay5","bay6","bay7","bay8","_useState14","cargo","setCargo","_useState15","_useState16","_useState17","_useState18","setCargoDropped","_useState19","_useState20","setHatchesDropped","_useState21","_useState22","observations","setObservations","_useState23","_useState24","setDoubleChecked","_ref2","calculateScore","Components_TeamPicker_TeamPicker","Components_Spacer","react_flexbox_grid_lib","md","EnterInfo_MatchNumberInput_MatchNumberInput","EnterInfo_SubmissionCount_SubmissionCount","EnterInfo_SidePicker_SidePicker","src","HabPlatformsImage","alt","borderRadius","EnterInfo_AutonPointsPicker_AutonPointsPicker","EnterInfo_Rocket_Rocket","EnterInfo_CargoShip_CargoShip","EnterInfo_HabLevelPicker_HabLevelPicker","EnterInfo_CargoAndHatchesDropped_CargoAndHatchesDropped","Label","check","checked","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","info","concat","once","sent","abrupt","set","whoAdded","email","success","scroll","stop","AddImage","image","setImage","files","file","hash","uploadSnap","url","crypto","randomBytes","toString","storage","put","getDownloadURL","t0","message","countBoth","panel","countHatches","countCargo","farBays","nearBays","getScoreOfCertainCargoSpots","bays","bay","calculateAutonLevel","MatchScoreChart","finalYLab","ylab","es6","top","right","left","bottom","dataKey","domain","allowDecimals","label","position","angle","strokeDashArray","dot","ShowHatchData","matchData","match","Charts_MatchScoreChart_MatchScoreChart","ShowCargoData","ShowTotalScores","ShowNearRocketScoring","ShowFarRocketScoring","CargoComfort","_cargocomfortScores","matches","nearLeft","farLeft","nearRight","farRight","cargocomfortScores","ShowClimbs","AutoPerformance","Observations","href","padding","DropCounts","_dropScores","dropScores","PickupHatchConstantsMapping","NO_INFORMATION_AVAILABLE","CANT_PICKUP","PICKS_UP_WELL","CAN_PICKUP_BUT_NO_COMFORT","CAN_PICKUP_BUT_OFTEN_FAILS","CAN_PICKUP_BUT_CANNOT_SCORE","PickupHatchConstants","PickupHatchPerformance","pickupHatchPerformance","currUserChosenPerformance","uid","ratingLevel","op","PitInfoShow","pitinfo","maxStart","maxStartingPos","autoOrCamera","preGamePreference","mainScoringMethod","hatchCircled","reduce","acc","curr","cargoCircled","climbCircled","driveType","reliability","timeToClimb","climbReliability","scoringStrats","notes","TeamStats","items","teamData","images","areImages","item","caption","header","className","innerWidth","UncontrolledCarousel","autoPlay","interval","TeamStats_AddImage_AddImage","TeamStats_PickupHatchPerformance_PickupHatchPerformance","TeamStats_ShowTotalScores_ShowTotalScores","TeamStats_ShowHatchData_ShowHatchData","TeamStats_ShowCargoData_ShowCargoData","TeamStats_ShowNearRocketScoring_ShowNearRocketScoring","TeamStats_ShowFarRocketScoring_ShowFarRocketScoring","TeamStats_DropCounts_DropCounts","TeamStats_CargoComfort_CargoComfort","TeamStats_ShowClimbs_ShowClimbs","TeamStats_AutoPerformance_AutoPerformance","TeamStats_Observations_Observations","pit_info","TeamStats_PitInfoShow_PitInfoShow","Stats","params","Components_LoadingSpinner","Stats_TeamStats_TeamStats","TeamSelector","teamsToInclude","setTeamsToInclude","sortByBest","setSortByBest","xs","lg","marginBottom","opacity","setTeams","DataCalculator","cargoScores","hatchScores","overallScores","autonScores","rocketOverallScores","cargoShipOverallScores","cargoDropCounts","hatchDropCounts","habBonuses","matchCount","cargoTotal","hatchTotal","overallTotal","autonTotal","rocketTotal","cargoShipTotal","cargoDropCount","hatchDropCount","matchKey","countBothNearRocket","countBothFarRocket","countBothCargoShip","CustomTick","x","y","payload","transform","dy","textAnchor","GeneralBarChart","tick","GeneralBarChart_CustomTick","AllStats","setCalculatedInfo","calculatedInfo","teamsArr","avgCargoScoreData","currHighestCargoAvg","avgHatchScoreData","currHighestHatchAvg","overallBothScoreData","highestOverallScore","autonScoreData","highestAutonScore","rocketScoreData","highestRocketScore","cargoScoreData","highestCargoScore","cargoDropData","lowestCargoDropCount","Infinity","hatchDropData","lowestHatchDropCount","highestHabBonus","cargoScoreCurr","hatchScoreCurr","overallScoreCurr","autonScoreCurr","rocketOverallCurr","cargoShipOverallCurr","cargoDropCurr","hatchDropCurr","habBonusCurr","AllStats_TeamSelector_TeamSelector","sm","AllStats_GeneralBarChart_GeneralBarChart","INIT_CIRCLED","L3","L2","L1","INIT_CLIMB_CIRCLED","InputBox","ReliabilityInput","max","PitInfo","setDriveTypeText","setReliability","setMaxStartingPos","setPreGamePreference","setMainScoringMethod","setHatchCircled","setCargoCircled","setClimbCircled","setTimeToClimb","setClimbReliability","setScoringStrats","_useState25","_useState26","setNotes","PitInfo_InputBox_InputBox","PitInfo_ReliabilityInput_ReliabilityInput","Matches","1","blueTeams","redTeams","10","11","12","13","14","15","16","17","18","19","2","20","21","22","23","24","25","26","27","28","29","3","30","31","32","33","34","35","36","37","38","39","4","40","41","42","43","44","45","46","47","48","49","5","50","51","52","53","54","55","56","57","58","59","6","60","61","62","63","64","65","66","67","68","7","8","9","MatchSchedule","orderedMatches","Table","bordered","size","responsive","blueTeam","redTeam","Home","canSee","setCanSee","canSeeRef","react_router","exact","path","component","Pages_MainPage_MainPage","Pages_EnterInfo_EnterInfo","Pages_PitInfo_PitInfo","Pages_Stats_Stats","assign","Pages_AllStats_AllStats","Pages_MatchSchedule_MatchSchedule","provider","GoogleAuthProvider","App","state","componentDidMount","_this","onAuthStateChanged","user","setState","autoClose","_this$state","this","marginLeft","lib","signInWithRedirect","Pages_Home","Component","Boolean","location","hostname","console","log","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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oC,EAAhBpC,MAAOtB,EAAS0D,EAAT1D,KACf,OAAOxB,EAAAC,EAAAC,cAACiF,EAAA,EAAD,CAAcpD,IAAKe,EAAO/B,QAAS,WAAQ2C,EAAiBZ,KAAWtB,QCpCxF4D,EAAQ,CAAC,IACX,IACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MAEEC,EAAe,CACjBC,IAAK,gBACLC,IAAK,iBACLC,KAAM,eACNC,KAAM,kBACNC,KAAM,YACNC,KAAM,aACNC,KAAM,YACNC,KAAM,eACNC,KAAM,0BACNC,KAAM,UACNC,KAAM,YACNC,KAAM,mBACNC,KAAM,gBACNC,KAAM,oBACNC,KAAM,gBACNC,KAAM,aACNC,KAAM,mBACNC,KAAM,WACNC,KAAM,WACNC,KAAM,QACNC,KAAM,YACNC,KAAM,YACNC,KAAM,sBACNC,KAAM,eACNC,KAAM,2BACNC,KAAM,oBACNC,KAAM,kBACNC,KAAM,SACNC,KAAM,SACNC,KAAM,MACNC,KAAM,oBACNC,KAAM,cACNC,KAAM,WACNC,KAAM,mBACNC,KAAM,cAGJC,EAAY,CACdnC,KAAK,EACLC,KAAK,EACLC,MAAM,EACNC,MAAM,EACNC,MAAM,EACNC,MAAM,EACNC,MAAM,EACNC,MAAM,EACNC,MAAM,EACNC,MAAM,EACNC,MAAM,EACNC,MAAM,EACNC,MAAM,EACNC,MAAM,EACNC,MAAM,EACNC,MAAM,EACNC,MAAM,EACNC,MAAM,EACNC,MAAM,EACNC,MAAM,EACNC,MAAM,EACNC,MAAM,EACNC,MAAM,EACNC,MAAM,EACNC,MAAM,EACNC,MAAM,EACNC,MAAM,EACNC,MAAM,EACNC,MAAM,EACNC,MAAM,EACNC,MAAM,EACNC,MAAM,EACNC,MAAM,EACNC,MAAM,EACNC,MAAM,GAGJE,EAAa,CACfpC,KAAK,EACLC,KAAK,EACLC,MAAM,EACNC,MAAM,EACNC,MAAM,EACNC,MAAM,EACNC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","file":"static/js/main.7dd6f31b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/HabPlatforms.8d295c08.png\";","import React from 'react';\nimport Spinner from 'react-loader-spinner';\n\nconst LoadingSpinner = () => <><div style={{\n    margin: 'auto',\n    marginTop: 50,\n    textAlign: 'center'\n}}><Spinner\n        type=\"Oval\"\n        color=\"#005696\"\n        height=\"100\"\n        width=\"100\"\n    /></div></>;\n\nexport default LoadingSpinner;","import React from 'react';\nimport { Button } from 'reactstrap';\n\nconst BlueButton = ({ style, onClick, children, disabled }) => {\n    return <Button\n        style={{\n            ...style,\n            backgroundColor: \"#20508b\",\n        }}\n        onClick={onClick ? onClick : () => null}\n        disabled={disabled ? true : false}> {children}</Button >\n}\n\nexport default BlueButton;","import React from 'react';\nimport BlueButton from '../../Components/BlueButton';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport { Link } from 'react-router-dom';\n\nconst pages = [{\n    link: \"/enterinfo\",\n    name: \"Enter match info\"\n}, {\n    link: \"/enterpitscouting\",\n    name: \"Enter pit scouting info\"\n}, {\n    link: \"/stats\",\n    name: \"See statstics by team\"\n}, {\n    link: \"/allstats\",\n    name: \"See all team statistics\"\n}, {\n    link: \"/matchschedule\",\n    name: \"See match schedule\"\n}];\n\nconst MainPage = ({ currentUser }) => {\n    return <>\n        <h1>FRC 2090 Scouting App</h1>\n        <h2>Welcome, {currentUser.displayName}</h2>\n        {\n            pages.map((page, i) => {\n                return <div key={\"pageButton\" + i}>\n                    <Link to={page.link}>\n                        <BlueButton style={{ marginTop: 10 }}>\n                            {page.name}\n                        </BlueButton>\n                    </Link>\n                </div>\n            })\n        }\n        <hr />\n        <BlueButton style={{ marginTop: 10 }} onClick={() => {\n            firebase.auth().signOut();\n        }}>Sign out</BlueButton>\n    </>\n}\n\nexport default MainPage","import React from 'react';\nimport {\n    Input, InputGroup, InputGroupAddon, InputGroupText\n} from 'reactstrap';\nimport { toast } from 'react-toastify';\n\n\nconst MatchNumberInput = ({ matchNumber, setMatchNumber }) => {\n    return <InputGroup>\n        <InputGroupAddon addonType=\"prepend\">\n            <InputGroupText>Match Number</InputGroupText>\n        </InputGroupAddon>\n        <Input value={matchNumber !== 0 ? matchNumber : \"\"} placeholder=\"Number\" type=\"number\" onChange={(e) => {\n            let newNumber = Number(e.target.value)\n            if (newNumber > 100 || newNumber < 0) {\n                toast.warn(\"Match number must be between 0 and 100\")\n            } else {\n                setMatchNumber(newNumber)\n            }\n        }} />\n    </InputGroup>\n}\n\nexport default MatchNumberInput;\n","import React, { useState } from 'react';\nimport {\n    Dropdown, DropdownToggle, DropdownMenu, DropdownItem,\n} from 'reactstrap';\n\nconst Levels = [{\n    value: 0,\n    name: \"No auto\"\n}, {\n    value: 1,\n    name: \"Attempted to move but didn't cross any lines\"\n}, {\n    value: 2,\n    name: \"COMPLETELY Crossed HAB line from level 1\"\n}, {\n    value: 3,\n    name: \"COMPLETELY Crossed HAB line from level 2\"\n}, {\n    value: 4,\n    name: \"Huge failure (details in notes)\"\n}]\n\nconst AutonPointsPicker = ({ selectedAuton, setSelectedAuton }) => {\n    const [dropOpen, setDropOpen] = useState(false);\n\n    return <Dropdown isOpen={dropOpen} toggle={() => setDropOpen(!dropOpen)} >\n        <DropdownToggle caret style={{ backgroundColor: \"#20508b\" }}>\n            {selectedAuton !== -1 ? <>{Levels[selectedAuton].name}</> : <>Select an autonomous</>}\n        </DropdownToggle>\n        <DropdownMenu modifiers={{\n            setMaxHeight: {\n                enabled: true,\n                order: 890,\n                fn: (data) => {\n                    return {\n                        ...data,\n                        styles: {\n                            ...data.styles,\n                            overflow: 'auto',\n                            maxHeight: window.innerHeight * .8,\n                        },\n                    };\n                },\n            },\n        }}>\n            {Levels.map(level => {\n                const { value, name } = level;\n                return <DropdownItem key={value} onClick={() => { setSelectedAuton(value) }}>{name}</DropdownItem>\n            })}\n        </DropdownMenu>\n    </Dropdown>\n}\n\nexport default AutonPointsPicker;","/**\n * \n * let teamsMapping = {}\ndocument.querySelectorAll(\".team-name\").forEach(d => {\n\tlet text = d.children[0].innerText;\n\tlet split = text.split(\"\\n\");\n\tlet teamNumber = Number(split[0])\n\tteamsMapping[teamNumber] = split[1]\n})\n */\n\nconst Teams = [359,\n    368,\n    2090,\n    2437,\n    2438,\n    2439,\n    2441,\n    2443,\n    2444,\n    2445,\n    2465,\n    2477,\n    2504,\n    2853,\n    2896,\n    3008,\n    3721,\n    3800,\n    3878,\n    3882,\n    4253,\n    4270,\n    5515,\n    5701,\n    6704,\n    6766,\n    6909,\n    6998,\n    7497,\n    7505,\n    7548,\n    7550,\n    7631,\n    7724,\n    7898]\n\nconst TeamsMapping = {\n    359: \"Hawaiian Kids\",\n    368: \"Team Kika Mana\",\n    2090: \"Buff 'n Blue\",\n    2437: \"Lancer Robotics\",\n    2438: \"'Iobotics\",\n    2439: \"Bearbotics\",\n    2441: \"Spartechs\",\n    2443: \"Blue Thunder\",\n    2444: \"Kamehameha RoboWarriors\",\n    2445: \"RoboKAP\",\n    2465: \"Kauaibots\",\n    2477: \"Marauder Rascals\",\n    2504: \"The Governors\",\n    2853: \"Hot Spot Robotics\",\n    2896: \"MechaMonarchs\",\n    3008: \"Team Magma\",\n    3721: \"Charger Robotics\",\n    3800: \"Mustangs\",\n    3878: \"Wildcats\",\n    3882: \"Lunas\",\n    4253: \"Raid Zero\",\n    4270: \"Crusaders\",\n    5515: \"Blue Power Robotics\",\n    5701: \"RAIJINbotics\",\n    6704: \"Mid Pacific Owl Robotics\",\n    6766: \"Pharma Atom Storm\",\n    6909: \"SAKURA Tempesta\",\n    6998: \"NNKIEH\",\n    7497: \"MARAHO\",\n    7505: \"PTU\",\n    7548: \"Le Jardin Academy\",\n    7550: \"DieForTonga\",\n    7631: \"Cool Guy\",\n    7724: \"Molokai Robotics\",\n    7898: \"Cool Geeks\"\n}\n\nconst TeamsInit = {\n    359: true,\n    368: true,\n    2090: true,\n    2437: true,\n    2438: true,\n    2439: true,\n    2441: true,\n    2443: true,\n    2444: true,\n    2445: true,\n    2465: true,\n    2477: true,\n    2504: true,\n    2853: true,\n    2896: true,\n    3008: true,\n    3721: true,\n    3800: true,\n    3878: true,\n    3882: true,\n    4253: true,\n    4270: true,\n    5515: true,\n    5701: true,\n    6704: true,\n    6766: true,\n    6909: true,\n    6998: true,\n    7497: true,\n    7505: true,\n    7548: true,\n    7550: true,\n    7631: true,\n    7724: true,\n    7898: true\n}\n\nconst TeamsInitF = {\n    359: false,\n    368: false,\n    2090: false,\n    2437: false,\n    2438: false,\n    2439: false,\n    2441: false,\n    2443: false,\n    2444: false,\n    2445: false,\n    2465: false,\n    2477: false,\n    2504: false,\n    2853: false,\n    2896: false,\n    3008: false,\n    3721: false,\n    3800: false,\n    3878: false,\n    3882: false,\n    4253: false,\n    4270: false,\n    5515: false,\n    5701: false,\n    6704: false,\n    6766: false,\n    6909: false,\n    6998: false,\n    7497: false,\n    7505: false,\n    7548: false,\n    7550: false,\n    7631: false,\n    7724: false,\n    7898: false\n}\n\nexport { Teams, TeamsMapping, TeamsInit, TeamsInitF }","import React, { useState } from 'react';\nimport {\n    Dropdown, DropdownToggle, DropdownMenu, DropdownItem,\n} from 'reactstrap';\nimport { Teams, TeamsMapping } from '../../Assets/Teams/Teams';\n\nconst TeamPicker = ({ allData, selectedTeam, setSelectedTeam }) => {\n    const [dropOpen, setDropOpen] = useState(false);\n\n    return <Dropdown isOpen={dropOpen} toggle={() => setDropOpen(!dropOpen)} >\n        <DropdownToggle caret style={{ backgroundColor: \"#20508b\" }}>\n            {selectedTeam !== 0 ? <>{selectedTeam} - {TeamsMapping[selectedTeam]}</> : <>Choose a team</>}\n        </DropdownToggle>\n        <DropdownMenu modifiers={{\n            setMaxHeight: {\n                enabled: true,\n                order: 890,\n                fn: (data) => {\n                    return {\n                        ...data,\n                        styles: {\n                            ...data.styles,\n                            overflow: 'auto',\n                            maxHeight: window.innerHeight * .8,\n                        },\n                    };\n                },\n            },\n        }}>\n            {Teams.map(team => {\n                let numEntries = 0;\n                if (allData && allData[team] && allData[team].match_data) {\n                    numEntries = Object.keys(allData[team].match_data).length;\n                }\n                return <DropdownItem key={team} onClick={() => { setSelectedTeam(team) }}>\n                    {team} - {TeamsMapping[team]} {allData && <>- ({numEntries})</>}\n                </DropdownItem>\n            })}\n        </DropdownMenu>\n    </Dropdown>\n}\n\nexport default TeamPicker;","const ScoringConfigurations = {\n    NONE: \"none\",\n    CARGO: \"cargo\",\n    HATCH: \"hatch\",\n    CARGO_AND_HATCH: \"cargoAndHatch\"\n}\n\nexport default ScoringConfigurations;","import React from 'react';\n\nconst None = () => {\n    return <svg height=\"50\" width=\"50\">\n    </svg>\n}\n\nconst Cargo = () => {\n    return <svg height=\"50\" width=\"50\">\n        <circle cx=\"25\" cy=\"25\" r=\"15\" stroke=\"#f4d941\" strokeWidth=\"0\" fill=\"#ffa500\" />\n    </svg>\n}\n\nconst Hatch = () => {\n    return <svg height=\"50\" width=\"50\">\n        <circle cx=\"25\" cy=\"25\" r=\"15\" stroke=\"#f4d941\" strokeWidth=\"10\" fill=\"#eeeeee\" />\n    </svg>\n}\n\nconst CargoAndHatch = () => {\n    return <svg height=\"50\" width=\"50\">\n        <circle cx=\"25\" cy=\"25\" r=\"15\" stroke=\"#f4d941\" strokeWidth=\"10\" fill=\"#ffa500\" />\n    </svg>\n}\n\nexport { None, Cargo, Hatch, CargoAndHatch };","import React from 'react';\nimport ScoringConfigurations from '../../../Components/Constants/ScoringConfigurations';\nimport { None, Cargo, Hatch, CargoAndHatch } from './Icons/Icons';\n\nconst { NONE, CARGO, CARGO_AND_HATCH, HATCH } = ScoringConfigurations;\n\nconst setCell = (rocket, setRocket, cellName) => {\n    let newRocket = { ...rocket };\n    const currCell = rocket[cellName];\n    switch (currCell) {\n        case NONE:\n            newRocket[cellName] = HATCH;\n            break;\n        case HATCH:\n            newRocket[cellName] = CARGO;\n            break;\n        case CARGO:\n            newRocket[cellName] = CARGO_AND_HATCH;\n            break;\n        case CARGO_AND_HATCH:\n            newRocket[cellName] = NONE;\n            break;\n        default:\n            newRocket[cellName] = NONE;\n            break;\n    }\n    setRocket(newRocket);\n}\n\nconst CargoCell = ({ name, value, rocket, setRocket, cantChange }) => {\n    return <>\n        <div style={{\n            width: 51,\n            height: 51,\n            border: \"1px solid black\",\n            display: \"inline-block\",\n            cursor: \"pointer\",\n            userSelect: \"none\"\n        }} onClick={() => {\n            if (!cantChange) {\n                setCell(rocket, setRocket, name);\n            }\n        }} >\n            {value === NONE &&\n                <None />}\n\n            {value === HATCH &&\n                <Hatch />}\n\n            {value === CARGO_AND_HATCH &&\n                <CargoAndHatch />}\n\n            {value === CARGO &&\n                <Cargo />}\n        </div>\n    </>\n}\n\nexport default CargoCell;","import React from 'react';\nimport CargoCell from '../CargoCell/CargoCell';\n\nconst Rocket = ({ rocket, setRocket, cantChange }) => {\n    return <>\n        <div>\n            <div style={{ marginRight: 5, fontSize: '1.5em', display: \"inline-block\", width: 150 }}>Top level </div>\n            <CargoCell {...{ rocket, setRocket, name: \"topLeft\", value: rocket[\"topLeft\"], cantChange }} />\n            <CargoCell {...{ rocket, setRocket, name: \"topRight\", value: rocket[\"topRight\"], cantChange }} />\n        </div>\n        <div>\n            <div style={{ marginRight: 5, fontSize: '1.5em', display: \"inline-block\", width: 150 }}>Mid level </div>\n            <CargoCell {...{ rocket, setRocket, name: \"midLeft\", value: rocket[\"midLeft\"], cantChange }} />\n            <CargoCell {...{ rocket, setRocket, name: \"midRight\", value: rocket[\"midRight\"], cantChange }} />\n        </div>\n        <div>\n            <div style={{ marginRight: 5, fontSize: '1.5em', display: \"inline-block\", width: 150 }}>Bot level </div>\n            <CargoCell {...{ rocket, setRocket, name: \"botLeft\", value: rocket[\"botLeft\"], cantChange }} />\n            <CargoCell {...{ rocket, setRocket, name: \"botRight\", value: rocket[\"botRight\"], cantChange }} />\n        </div>\n\n\n    </>\n}\n\nexport default Rocket;","import React, { useState } from 'react';\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\n\nconst Levels = [\n    { value: \"LEFT\", name: \"LEFT\" },\n    { value: \"RIGHT\", name: \"RIGHT\" }\n]\n\nconst SidePicker = ({ side, setSide }) => {\n    const [dropOpen, setDropOpen] = useState(false);\n\n    return <Dropdown isOpen={dropOpen} toggle={() => setDropOpen(!dropOpen)} >\n        <DropdownToggle caret style={{ backgroundColor: \"#20508b\" }}>\n            {side !== \"\" ? <>{side}</> : <>Select a side</>}\n        </DropdownToggle>\n        <DropdownMenu modifiers={{\n            setMaxHeight: {\n                enabled: true,\n                order: 890,\n                fn: (data) => {\n                    return {\n                        ...data,\n                        styles: {\n                            ...data.styles,\n                            overflow: 'auto',\n                            maxHeight: window.innerHeight * .8,\n                        },\n                    };\n                },\n            },\n        }}>\n            {Levels.map(level => {\n                const { value, name } = level;\n                return <DropdownItem key={value} onClick={() => { setSide(value) }}>{name}</DropdownItem>\n            })}\n        </DropdownMenu>\n    </Dropdown>\n}\n\nexport default SidePicker;","import React from 'react';\nimport CargoCell from '../CargoCell/CargoCell';\n\nconst CargoShip = ({ rocket, setRocket, side, cantChange }) => {\n    return <>\n        <h2>Cargo ship ({side === \"\" ? \"LEFT\" : side})</h2>\n        <div>\n            {(side === \"LEFT\" || side === \"\") &&\n                <div style={{ marginRight: 5, fontSize: '1.5em', display: \"inline-block\", width: 57 }}>Nose</div>\n            }\n            <CargoCell {...{ rocket, setRocket, name: \"bay1\", value: rocket[\"bay1\"], cantChange }} />\n            <CargoCell {...{ rocket, setRocket, name: \"bay2\", value: rocket[\"bay2\"], cantChange }} />\n            <CargoCell {...{ rocket, setRocket, name: \"bay3\", value: rocket[\"bay3\"], cantChange }} />\n            <CargoCell {...{ rocket, setRocket, name: \"bay4\", value: rocket[\"bay4\"], cantChange }} />\n            {(side === \"RIGHT\") &&\n                <div style={{ marginRight: 5, fontSize: '1.5em', display: \"inline-block\", width: 57 }}>Nose</div>\n            }\n        </div>\n        <div>\n            {(side === \"LEFT\" || side === \"\") &&\n                <div style={{ marginRight: 5, fontSize: '1.5em', display: \"inline-block\", width: 57 }}>Nose</div>\n            }\n            <CargoCell {...{ rocket, setRocket, name: \"bay5\", value: rocket[\"bay5\"], cantChange }} />\n            <CargoCell {...{ rocket, setRocket, name: \"bay6\", value: rocket[\"bay6\"], cantChange }} />\n            <CargoCell {...{ rocket, setRocket, name: \"bay7\", value: rocket[\"bay7\"], cantChange }} />\n            <CargoCell {...{ rocket, setRocket, name: \"bay8\", value: rocket[\"bay8\"], cantChange }} />\n            {(side === \"RIGHT\") &&\n                <div style={{ marginRight: 5, fontSize: '1.5em', display: \"inline-block\", width: 57 }}>Nose</div>\n            }\n        </div>\n\n    </>\n}\n\nexport default CargoShip;","const HabLevels = {\n    NONE: 0,\n    LEVEL_1: 1,\n    LEVEL_2: 2,\n    LEVEL_3: 3\n}\n\nexport default HabLevels;","import React, { useState } from 'react';\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport HabLevels from '../../../Components/Constants/HabLevels';\n\nconst { NONE, LEVEL_1, LEVEL_2, LEVEL_3 } = HabLevels;\n\nconst Levels = [\n    { value: NONE, name: \"None\" },\n    { value: LEVEL_1, name: \"Level 1\" },\n    { value: LEVEL_2, name: \"Level 2\" },\n    { value: LEVEL_3, name: \"Level 3\" }\n]\n\nconst LevelsMapping = {\n    [NONE]: \"None\",\n    [LEVEL_1]: \"Level 1\",\n    [LEVEL_2]: \"Level 2\",\n    [LEVEL_3]: \"Level 3\"\n}\n\nconst HabLevelPicker = ({ habBonus, setHabBonus }) => {\n    const [dropOpen, setDropOpen] = useState(false);\n\n    return <Dropdown isOpen={dropOpen} toggle={() => setDropOpen(!dropOpen)} >\n        <DropdownToggle caret style={{ backgroundColor: \"#20508b\" }}>\n            {habBonus !== \"\" ? <>{LevelsMapping[habBonus]}</> : <>Select a parking bonus</>}\n        </DropdownToggle>\n        <DropdownMenu modifiers={{\n            setMaxHeight: {\n                enabled: true,\n                order: 890,\n                fn: (data) => {\n                    return {\n                        ...data,\n                        styles: {\n                            ...data.styles,\n                            overflow: 'auto',\n                            maxHeight: window.innerHeight * .8,\n                        },\n                    };\n                },\n            },\n        }}>\n            {Levels.map(level => {\n                const { value, name } = level;\n                return <DropdownItem key={value} onClick={() => { setHabBonus(value) }}>{name}</DropdownItem>\n            })}\n        </DropdownMenu>\n    </Dropdown>\n}\n\nexport default HabLevelPicker;","import React from 'react';\nconst Spacer = ({ space }) => {\n    const marginTop = space || 0\n    return <div style={{ marginTop }}></div>\n}\n\nexport default Spacer;","import React from 'react';\nimport {\n    Input, InputGroup\n} from 'reactstrap';\nimport { toast } from 'react-toastify';\n\n\nconst CargoAndHatchesDropped = ({ value, setValue }) => {\n    return <InputGroup>\n        <Input value={value === -1 ? \"\" : value} placeholder=\"Number\" type=\"number\" onChange={(e) => {\n            let newNumber = Number(e.target.value)\n            if (newNumber < 0) {\n                toast.warn(\"Value must be greater than 0\")\n            } else {\n                setValue(newNumber)\n            }\n        }} />\n    </InputGroup>\n}\n\nexport default CargoAndHatchesDropped;\n","import React, { useState, useEffect } from 'react';\nimport firebase from 'firebase/app';\nimport 'firebase/database';\n\n\nconst SubmissionCount = ({ matchNumber }) => {\n    const [data, setData] = useState(null);\n    const [loading, setLoading] = useState(true);;\n\n    useEffect(() => {\n        const dataRef = firebase.database().ref(\"2019data\");\n        dataRef.on('value', (snap) => {\n            let value = snap.val() || null;\n            setData(value);\n            setLoading(false);\n        });\n\n        return () => { dataRef.off(); }\n    }, [])\n\n    if (loading) {\n        return <>\n        </>\n    }\n\n    let count = 0;\n    let teams = [];\n    Object.keys(data).forEach(team => {\n        let teamMatchData = data[team].match_data || {};\n        if (teamMatchData[matchNumber]) {\n            count++;\n            teams.push(team);\n        }\n    });\n\n    teams = teams.map(d => Number(d));\n    teams = teams.sort((a, b) => a - b);\n\n    return <>\n        <div>\n            There have been {count}/6 submissions for this match so far\n        </div>\n        <div>\n            <span style={{ fontWeight: 'bold', color: '#20508B' }}>Teams submitted:</span> {teams.join(\", \")}\n        </div>\n    </>\n}\n\nexport default SubmissionCount;\n","import React, { useState } from 'react';\n\nimport BlueButton from '../../Components/BlueButton';\nimport { Link } from 'react-router-dom';\nimport MatchNumberInput from './MatchNumberInput/MatchNumberInput';\nimport AutonPointsPicker from './AutonPointsPicker/AutonPointsPicker';\nimport TeamPicker from '../../Components/TeamPicker/TeamPicker';\nimport ScoringConfigurations from '../../Components/Constants/ScoringConfigurations';\nimport Rocket from './Rocket/Rocket';\nimport SidePicker from './SidePicker/SidePicker';\nimport { Grid, Row, Col } from 'react-flexbox-grid';\nimport CargoShip from './CargoShip/CargoShip';\nimport HabPlatformsImage from '../../Assets/Images/HabPlatforms.png';\nimport HabLevelPicker from './HabLevelPicker/HabLevelPicker';\nimport { Input, Label } from 'reactstrap';\nimport HabLevels from '../../Components/Constants/HabLevels';\nimport { TeamsMapping } from '../../Assets/Teams/Teams';\nimport { toast } from 'react-toastify';\nimport firebase from 'firebase/app';\nimport 'firebase/database';\nimport Spacer from '../../Components/Spacer';\nimport CargoAndHatchesDropped from './CargoAndHatchesDropped/CargoAndHatchesDropped';\nimport SubmissionCount from './SubmissionCount/SubmissionCount';\n\nconst { NONE, CARGO, CARGO_AND_HATCH, HATCH } = ScoringConfigurations;\n\n/**\n * calculateCargo calculates the score from an individual rocket or cargo ship\n * @param {Object} rocket Object with keys that all have values that are enums from ScoringConfigurations\n */\nconst calculateCargo = (rocket) => {\n    let score = 0;\n    Object.keys(rocket).forEach(space => {\n        let scored = rocket[space];\n        switch (scored) {\n            case CARGO:\n                score += 3;\n                break;\n            case HATCH:\n                score += 2;\n                break;\n            case CARGO_AND_HATCH:\n                score += 5;\n                break;\n            default:\n                score += 0;\n                break;\n        }\n    });\n    return score;\n}\n\nconst checkValidity = ({\n    selectedTeam,\n    matchNumber,\n    side,\n    selectedAuton,\n    habBonus,\n    doubleChecked,\n    cargoDropped,\n    hatchesDropped\n}) => {\n    if (selectedTeam === 0) {\n        toast.error(\"You haven't selected a team!\");\n        return false;\n    } else if (side === \"\") {\n        toast.error(\"You haven't selected a side!\");\n        return false;\n    } else if (matchNumber === 0) {\n        toast.error(\"You haven't provided a match number!\");\n        return false;\n    } else if (selectedAuton === -1) {\n        toast.error(\"You haven't provided info about autonomous!\");\n        return false;\n    } else if (habBonus === \"\") {\n        toast.error(\"You haven't provided the habitat bonus info!\");\n        return false;\n    } else if (cargoDropped < 0) {\n        toast.error(\"You have not provided cargo drop count\");\n        return false;\n    } else if (hatchesDropped < 0) {\n        toast.error(\"You have not provided hatches drop count\");\n        return false;\n    } else if (!doubleChecked) {\n        toast.error(\"Please double check before submitting!\");\n        return false;\n    }\n    return true;\n}\n\n/**\n * calculateScore calculates the team's score from the provided input.\n */\nconst calculateScore = ({ selectedAuton, nearRocket, farRocket, cargo, habBonus }) => {\n    let score = 0;\n\n    switch (selectedAuton) {\n        case 2:\n            score += 3;\n            break;\n        case 3:\n            score += 6;\n            break;\n        default:\n            score += 0;\n            break;\n    }\n\n    score += calculateCargo(nearRocket);\n    score += calculateCargo(farRocket);\n    score += calculateCargo(cargo);\n\n    switch (habBonus) {\n        case HabLevels.LEVEL_1:\n            score += 3;\n            break;\n        case HabLevels.LEVEL_2:\n            score += 6;\n            break;\n        case HabLevels.LEVEL_3:\n            score += 12;\n            break;\n        default:\n            score += 0;\n            break;\n    }\n\n    return score;\n}\n\nconst EnterInfo = ({ currentUser }) => {\n    const [selectedTeam, setSelectedTeam] = useState(0);\n    const [matchNumber, setMatchNumber] = useState(0);\n    const [side, setSide] = useState(\"\");\n    const [selectedAuton, setSelectedAuton] = useState(-1);\n    const [nearRocket, setNearRocket] = useState({\n        topLeft: NONE,\n        topRight: NONE,\n        midLeft: NONE,\n        midRight: NONE,\n        botLeft: NONE,\n        botRight: NONE\n    });\n    const [farRocket, setFarRocket] = useState({\n        topLeft: NONE,\n        topRight: NONE,\n        midLeft: NONE,\n        midRight: NONE,\n        botLeft: NONE,\n        botRight: NONE\n    });\n    const [cargo, setCargo] = useState({\n        bay1: NONE,\n        bay2: NONE,\n        bay3: NONE,\n        bay4: NONE,\n        bay5: NONE,\n        bay6: NONE,\n        bay7: NONE,\n        bay8: NONE,\n    });\n    const [habBonus, setHabBonus] = useState(\"\");\n    const [cargoDropped, setCargoDropped] = useState(-1);\n    const [hatchesDropped, setHatchesDropped] = useState(-1);\n    const [observations, setObservations] = useState(\"\");\n    const [doubleChecked, setDoubleChecked] = useState(false);\n\n    let score = calculateScore({ selectedAuton, nearRocket, farRocket, cargo, habBonus });\n    return <>\n        <Link to=\"/\"><BlueButton>Back</BlueButton></Link>\n        <hr />\n        <h1>Enter match information</h1>\n\n        <h2>General info</h2>\n        {/** Team picker */}\n        <TeamPicker {...{ selectedTeam, setSelectedTeam }} />\n        <Spacer space={10} />\n        {/** Match number */}\n        <Grid>\n            <Row>\n                <Col md={6}>\n                    <MatchNumberInput {...{ matchNumber, setMatchNumber }} />\n                </Col>\n                <Col md={6}>\n                    {matchNumber > 0 && <>\n                        <SubmissionCount matchNumber={matchNumber} />\n                    </>}\n                </Col>\n            </Row>\n        </Grid>\n        <Spacer space={10} />\n        <h4>What side is the team on?</h4>\n        <SidePicker {...{ side, setSide }} />\n        <Spacer space={10} />\n\n        <h2>Autonomous</h2>\n        <img src={HabPlatformsImage} alt={\"Platform reference\"} style={{ width: 150, border: \"3px solid #20508b\", borderRadius: 10 }} />\n        <Spacer space={10} />\n        <AutonPointsPicker {...{ selectedAuton, setSelectedAuton }} />\n\n        <Spacer space={10} />\n        <h2>Match</h2>\n\n        <Grid>\n            <Row>\n                <Col md={6}>\n                    <h3><strong>Far</strong> Rocket</h3>\n                    <Rocket rocket={farRocket} setRocket={setFarRocket} />\n\n                    <h3><strong>Near</strong> Rocket</h3>\n                    <Rocket rocket={nearRocket} setRocket={setNearRocket} />\n                </Col>\n                <Col md={6}>\n                    <CargoShip {...{ rocket: cargo, setRocket: setCargo, side }} />\n                </Col>\n            </Row>\n        </Grid>\n\n        <Spacer space={20} />\n\n        <h3>Habitat Parking Bonus</h3>\n        <HabLevelPicker {...{ habBonus, setHabBonus }} />\n        <Spacer space={10} />\n\n        <Grid>\n            <Row>\n                <Col md={6}>\n                    <h3>Cargo dropped</h3>\n                    <CargoAndHatchesDropped value={cargoDropped} setValue={setCargoDropped} />\n                </Col>\n                <Col md={6}>\n                    <h3>Hatches dropped</h3>\n                    <CargoAndHatchesDropped value={hatchesDropped} setValue={setHatchesDropped} />\n                </Col>\n            </Row>\n        </Grid>\n\n\n        <h2>Notes and observations (optional)</h2>\n        <Input type=\"textarea\" value={observations} onChange={(e) => {\n            setObservations(e.target.value);\n        }} />\n\n        <Spacer space={10} />\n        <h2>Review and submit</h2>\n        {selectedTeam !== 0 && <p style={{ fontSize: 30, fontWeight: 'bold' }}>Team {selectedTeam} - {TeamsMapping[selectedTeam]} has scored <span style={{ color: \"#990000\" }}>{score}</span> points</p>}\n        {selectedTeam === 0 && <p>Please select a team</p>}\n        <div><Label check><Input type=\"checkbox\" checked={doubleChecked} onChange={() => {\n            setDoubleChecked(!doubleChecked);\n        }} />{' '}Double checked\n        </Label></div>\n\n        <BlueButton onClick={async () => {\n            let valid = checkValidity({\n                selectedTeam,\n                matchNumber,\n                side,\n                selectedAuton,\n                habBonus,\n                doubleChecked,\n                cargoDropped,\n                hatchesDropped\n            });\n            if (valid) {\n                toast.info(\"Submitting data...\");\n\n                // Check if match exists in database. If it does, abort and show an error.\n                const checkMatchDB = await firebase.database().ref(`2019data/${selectedTeam}/match_data/${matchNumber}`).once('value')\n                const matchInDB = checkMatchDB.val();\n                if (matchInDB) {\n                    toast.error(\"Match for this team has been recorded already!\");\n                    return;\n                }\n\n                // If the match is not in the database, upload it.\n                await firebase.database().ref(`2019data/${selectedTeam}/match_data/${matchNumber}`).set({\n                    side,\n                    selectedAuton,\n                    nearRocket,\n                    farRocket,\n                    cargo,\n                    habBonus,\n                    observations,\n                    score,\n                    hatchesDropped,\n                    cargoDropped,\n                    whoAdded: currentUser.displayName || currentUser.email\n                });\n\n                // check if uploaded\n                const checkMatchUploaded = await firebase.database().ref(`2019data/${selectedTeam}/match_data/${matchNumber}`).once('value');\n                const matchUploaded = checkMatchUploaded.val();\n                if (!matchUploaded) {\n                    toast.error(\"Match failed to upload. Please try again in a bit\");\n                    return;\n                }\n                toast.success(\"Match uploaded successfully\");\n                setSelectedTeam(0);\n                setMatchNumber(0);\n                setSide(\"\");\n                setSelectedAuton(-1);\n                setNearRocket({\n                    topLeft: NONE,\n                    topRight: NONE,\n                    midLeft: NONE,\n                    midRight: NONE,\n                    botLeft: NONE,\n                    botRight: NONE\n                });\n                setFarRocket({\n                    topLeft: NONE,\n                    topRight: NONE,\n                    midLeft: NONE,\n                    midRight: NONE,\n                    botLeft: NONE,\n                    botRight: NONE\n                });\n                setCargo({\n                    bay1: NONE,\n                    bay2: NONE,\n                    bay3: NONE,\n                    bay4: NONE,\n                    bay5: NONE,\n                    bay6: NONE,\n                    bay7: NONE,\n                    bay8: NONE,\n                });\n                setHabBonus(\"\");\n                setObservations(\"\");\n                setCargoDropped(-1);\n                setHatchesDropped(-1);\n                setDoubleChecked(false);\n                window.scroll(0, 0);\n            }\n        }}>Submit</BlueButton>\n        <hr />\n        <Link to=\"/\"><BlueButton>Back</BlueButton></Link>\n    </>\n}\n\nexport default EnterInfo;","import React, { useState } from 'react';\nimport BlueButton from '../../../../Components/BlueButton';\nimport { Input } from 'reactstrap';\nimport Spacer from '../../../../Components/Spacer';\nimport crypto from 'crypto';\nimport firebase from 'firebase/app';\nimport 'firebase/database';\nimport 'firebase/storage';\nimport { toast } from 'react-toastify';\n\nconst AddImage = ({ selectedTeam }) => {\n    const [image, setImage] = useState(null);\n    return <>\n        <h4>Add an image</h4>\n        <Input type=\"file\" onChange={(e) => {\n            setImage({\n                name: e.target.files[0].name,\n                file: e.target.files[0]\n            });\n        }} />\n        <Spacer space={10} />\n        <BlueButton disabled={image ? false : true} onClick={async () => {\n            if (!image) {\n                toast.error(\"No/invalid image provided\");\n                return;\n            }\n            try {\n                toast.info(\"Uploading image...\");\n                const hash = crypto.randomBytes(32).toString(\"hex\");\n                const uploadSnap = await firebase.storage().ref(`imgs/${hash}/${image.name}`).put(image.file);\n                const url = await uploadSnap.ref.getDownloadURL();\n                await firebase.database().ref(`2019data/${selectedTeam}/images`).push({ src: url });\n                toast.success(\"Image upload success!\");\n            } catch (e) {\n                toast.error(`Error uploading image: ${e.message}`);\n            }\n        }}>Submit</BlueButton>\n    </>\n}\n\nexport default AddImage;","import ScoringConfigurations from \"../../../../Components/Constants/ScoringConfigurations\";\n\nconst nearRocket = (matches) => {\n    return matches.map((match, i) => {\n        return {\n            match: i + 1,\n            score: match.side === \"LEFT\" ? countBoth(match.farRocket) : countBoth(match.nearRocket)\n        }\n    });\n}\n\n\nconst farRocket = (matches) => {\n    return matches.map((match, i) => {\n        return {\n            match: i + 1,\n            score: match.side === \"RIGHT\" ? countBoth(match.farRocket) : countBoth(match.nearRocket)\n        }\n    });\n}\n\nconst cargo = (matches) => {\n    return matches.map((match, i) => {\n        return {\n            match: i + 1,\n            score: countBoth(match.cargo)\n        }\n    });\n}\n\n/**\n * Returns matches as {match: ##, score: ##} for hatches\n * @param {Object} matches \n */\nconst hatchScores = (matches) => {\n    return matches.map((match, i) => {\n        return {\n            match: i + 1,\n            score: countHatches(match.cargo) + countHatches(match.farRocket) + countHatches(match.nearRocket)\n        };\n    })\n}\n\nconst countBoth = (rocket) => {\n    let score = 0;\n    Object.keys(rocket).forEach(panel => {\n        if (rocket[panel] === ScoringConfigurations.HATCH || rocket[panel] === ScoringConfigurations.CARGO_AND_HATCH ||\n            rocket[panel] === ScoringConfigurations.CARGO) {\n            score++;\n        }\n    });\n    return score;\n}\n\n/**\n * Count the hatches per rocket or cargo ship\n * @param {Object} rocket \n */\nconst countHatches = (rocket) => {\n    let score = 0;\n    Object.keys(rocket).forEach(panel => {\n        if (rocket[panel] === ScoringConfigurations.HATCH || rocket[panel] === ScoringConfigurations.CARGO_AND_HATCH) {\n            score++;\n        }\n    });\n    return score;\n}\n\nconst cargoScores = (matches) => {\n    return matches.map((match, i) => {\n        return {\n            match: i + 1,\n            score: countCargo(match.cargo) + countCargo(match.farRocket) + countCargo(match.nearRocket)\n        }\n    })\n}\n\nconst countCargo = (rocket) => {\n    let score = 0;\n    Object.keys(rocket).forEach(panel => {\n        if (rocket[panel] === ScoringConfigurations.CARGO || rocket[panel] === ScoringConfigurations.CARGO_AND_HATCH) {\n            score++;\n        }\n    });\n    return score;\n}\n\nconst allScores = (matches) => {\n    return matches.map((match, i) => {\n        return {\n            match: i + 1,\n            score: match.score\n        }\n    })\n}\n\nconst farBays = [\"bay1\", \"bay2\", \"bay3\", \"bay4\"];\nconst nearBays = [\"bay5\", \"bay6\", \"bay7\", \"bay8\"];\n\nconst cargocomfortScores = (matches) => {\n    let nearLeft = [];\n    let farLeft = [];\n    let nearRight = [];\n    let farRight = [];\n\n    matches.forEach((match, i) => {\n        if (match.side === \"LEFT\") {\n            farLeft.push({\n                match: i + 1,\n                score: getScoreOfCertainCargoSpots(match.cargo, farBays)\n            });\n            nearLeft.push({\n                match: i + 1,\n                score: getScoreOfCertainCargoSpots(match.cargo, nearBays)\n            });\n        }\n\n        if (match.side === \"RIGHT\") {\n            farRight.push({\n                match: i + 1,\n                score: getScoreOfCertainCargoSpots(match.cargo, farBays)\n            });\n            nearRight.push({\n                match: i + 1,\n                score: getScoreOfCertainCargoSpots(match.cargo, nearBays)\n            });\n        }\n    })\n\n    return {\n        nearLeft,\n        farLeft,\n        nearRight,\n        farRight\n    }\n}\n\n// bays is an array of strings in the format \"bay#\"\nconst getScoreOfCertainCargoSpots = (cargo, bays) => {\n    let score = 0;\n    bays.forEach(bay => {\n        let scored = cargo[bay];\n        switch (scored) {\n            case ScoringConfigurations.CARGO:\n                score += 3;\n                break;\n            case ScoringConfigurations.HATCH:\n                score += 2;\n                break;\n            case ScoringConfigurations.CARGO_AND_HATCH:\n                score += 5;\n                break;\n            default:\n                score += 0;\n                break;\n        }\n    });\n    return score;\n}\n\nconst calculateClimb = (matches) => {\n    return matches.map((match, i) => {\n        return {\n            match: i + 1,\n            score: match.habBonus\n        }\n    });\n}\n\nconst calculateAuto = (matches) => {\n    return matches.map((match, i) => {\n        return {\n            match: i + 1,\n            score: calculateAutonLevel(match.selectedAuton)\n        }\n    })\n}\n\nconst calculateAutonLevel = (value) => {\n    switch (value) {\n        case 2:\n            return 1;\n        case 3:\n            return 2;\n        default:\n            return 0;\n    }\n}\n\nconst dropScores = (matches) => {\n    let cargoDropped = [];\n    let hatchesDropped = [];\n    // cargoDropped\n\n    matches.forEach((match, i) => {\n        cargoDropped.push({\n            match: i + 1,\n            score: match.cargoDropped\n        });\n        hatchesDropped.push({\n            match: i + 1,\n            score: match.hatchesDropped\n        });\n    })\n\n    return {\n        cargoDropped, hatchesDropped\n    }\n}\n\nexport {\n    calculateAuto,\n    calculateClimb,\n    cargocomfortScores,\n    cargo,\n    nearRocket,\n    farRocket,\n    hatchScores,\n    countHatches,\n    cargoScores,\n    countCargo,\n    allScores,\n    dropScores,\n    countBoth,\n    calculateAutonLevel\n}","import React from 'react';\nimport { LineChart, XAxis, YAxis, CartesianGrid, Tooltip, Line } from 'recharts';\n\nconst MatchScoreChart = ({ data, ylab }) => {\n    let finalYLab = ylab || \"Count\";\n    return <LineChart width={300} height={250} data={data} margin={{ top: 0, right: 0, left: 10, bottom: 25 }}>\n        <XAxis dataKey=\"match\" domain={[1, \"auto\"]} allowDecimals={false} label={{ value: \"Match\", position: \"bottom\" }} type=\"number\" />\n        <YAxis dataKey=\"score\" domain={[\"auto\", \"auto\"]} allowDecimals={false} label={{ value: finalYLab, angle: -90, position: \"insideLeft\" }} />\n        <CartesianGrid stroke=\"#ddd\" strokeDashArray=\"3 3\" />\n        <Tooltip />\n        <Line dot={true} type=\"monotone\" dataKey=\"score\" stroke={\"#20508B\"} fill={\"#20508B\"} />\n    </LineChart>\n}\n\nexport default MatchScoreChart;","import React from 'react';\nimport { hatchScores } from '../GetDataObjects/GetDataObjects';\nimport MatchScoreChart from '../Charts/MatchScoreChart/MatchScoreChart';\n\nconst ShowHatchData = ({ matchData }) => {\n    let data = hatchScores(matchData);\n    return <>\n        <h3>Total Hatches Scored Per Match (in any goal)</h3>\n        <MatchScoreChart data={data} />\n    </>\n}\n\nexport default ShowHatchData;","import React from 'react';\nimport { cargoScores } from '../GetDataObjects/GetDataObjects';\nimport MatchScoreChart from '../Charts/MatchScoreChart/MatchScoreChart';\n\nconst ShowCargoData = ({ matchData }) => {\n    let data = cargoScores(matchData);\n    return <>\n        <h3>Total Cargo Scored Per Match (in any goal)</h3>\n        <MatchScoreChart data={data} />\n    </>\n}\n\nexport default ShowCargoData;","import React from 'react';\nimport { allScores } from '../GetDataObjects/GetDataObjects';\nimport MatchScoreChart from '../Charts/MatchScoreChart/MatchScoreChart';\n\nconst ShowTotalScores = ({ matchData }) => {\n    let data = allScores(matchData);\n    return <>\n        <h3>Total Individual Score per Match</h3>\n        <MatchScoreChart data={data} ylab={\"Score\"} />\n    </>\n}\n\nexport default ShowTotalScores;","import React from 'react';\nimport { nearRocket } from '../GetDataObjects/GetDataObjects';\nimport MatchScoreChart from '../Charts/MatchScoreChart/MatchScoreChart';\n\nconst ShowNearRocketScoring = ({ matchData }) => {\n    let data = nearRocket(matchData);\n    return <>\n        <h3>Total Scored on Relative Left Rocket (hatch + cargo combined)</h3>\n        <MatchScoreChart data={data} />\n    </>\n}\n\nexport default ShowNearRocketScoring;","import React from 'react';\nimport { farRocket } from '../GetDataObjects/GetDataObjects';\nimport MatchScoreChart from '../Charts/MatchScoreChart/MatchScoreChart';\n\nconst ShowFarRocketScoring = ({ matchData }) => {\n    let data = farRocket(matchData);\n    return <>\n        <h3>Total Scored on Relative Right Rocket (hatch + cargo combined)</h3>\n        <MatchScoreChart data={data} />\n    </>\n}\n\nexport default ShowFarRocketScoring;","import React from 'react';\nimport { cargocomfortScores } from '../GetDataObjects/GetDataObjects';\nimport MatchScoreChart from '../Charts/MatchScoreChart/MatchScoreChart';\nimport { Grid, Row, Col } from 'react-flexbox-grid';\n\nconst CargoComfort = ({ matchData }) => {\n    // let data = cargoScores(matchData);\n    let { nearLeft, farLeft, nearRight, farRight } = cargocomfortScores(matchData);\n    return <>\n        <Grid>\n            <Row>\n                <Col md={6}>\n                    <h3>Near side when on left</h3>\n                    <MatchScoreChart data={nearLeft} />\n                    <h3>Far side when on left</h3>\n                    <MatchScoreChart data={farLeft} />\n                </Col>\n                <Col md={6}>\n                    <h3>Near side when on right</h3>\n                    <MatchScoreChart data={nearRight} />\n                    <h3>Far side when on right</h3>\n                    <MatchScoreChart data={farRight} />\n                </Col>\n            </Row>\n        </Grid>\n\n    </>\n}\n\nexport default CargoComfort;","import React from 'react';\nimport { calculateClimb } from '../GetDataObjects/GetDataObjects';\nimport MatchScoreChart from '../Charts/MatchScoreChart/MatchScoreChart';\n\nconst ShowClimbs = ({ matchData }) => {\n    let data = calculateClimb(matchData);\n    return <>\n        <h3>Climb for each match</h3>\n        <MatchScoreChart data={data} />\n    </>\n}\n\nexport default ShowClimbs;","import React from 'react';\nimport { calculateAuto } from '../GetDataObjects/GetDataObjects';\nimport MatchScoreChart from '../Charts/MatchScoreChart/MatchScoreChart';\n\nconst AutoPerformance = ({ matchData }) => {\n    let data = calculateAuto(matchData);\n    return <>\n        <h3>Auto performance (0 can mean none or fail)</h3>\n        <MatchScoreChart data={data} ylab={\"Level\"} />\n    </>\n}\n\nexport default AutoPerformance;","import React from 'react';\nimport { Grid, Row, Col } from 'react-flexbox-grid';\n\nconst Observations = ({ matchData }) => {\n    return <>\n        <h3>Click to go to TBA page for that match</h3>\n        <Grid>\n            <Row>\n                {matchData.map((match, i) => {\n                    return <Col md={3} key={\"obs\" + i}>\n                        <a href={`https://www.thebluealliance.com/match/2019hiho_qm${match.matchNumber}`}>\n                            <div style={{\n                                margin: 10,\n                                backgroundColor: '#efefef',\n                                border: \"2px solid #20508B\",\n                                borderRadius: 4,\n                                padding: 5,\n                                textAlign: 'left'\n                            }}>\n                                <div style={{\n                                    color: \"#20508B\",\n                                    fontWeight: 'bold'\n                                }}>Match {match.matchNumber}</div>\n                                <span style={{\n                                    fontWeight: 'bold'\n                                }}>{match.whoAdded}: </span>\n                                {match.observations}\n                            </div>\n                        </a>\n                    </Col>\n                })}\n            </Row>\n        </Grid>\n    </>\n}\n\nexport default Observations;","import React from 'react';\nimport { dropScores } from '../GetDataObjects/GetDataObjects';\nimport MatchScoreChart from '../Charts/MatchScoreChart/MatchScoreChart';\nimport { Grid, Row, Col } from 'react-flexbox-grid';\n\nconst DropCounts = ({ matchData }) => {\n    let { cargoDropped, hatchesDropped } = dropScores(matchData);\n    return <>\n        <Grid>\n            <Row>\n                <Col md={6}>\n                    <h3>Cargo</h3>\n                    <MatchScoreChart data={cargoDropped} />\n                </Col>\n                <Col md={6}>\n                    <h3>Hatches</h3>\n                    <MatchScoreChart data={hatchesDropped} />\n                </Col>\n            </Row>\n        </Grid>\n\n    </>\n}\n\nexport default DropCounts;","const PickupHatchConstants = {\n    NO_INFORMATION_AVAILABLE: \"NO_INFORMATION_AVAILABLE\",\n    CANT_PICKUP: \"CANT_PICKUP\",\n    PICKS_UP_WELL: \"PICKS_UP_WELL\",\n    CAN_PICKUP_BUT_NO_COMFORT: \"CAN_PICKUP_BUT_NO_COMFORT\",\n    CAN_PICKUP_BUT_OFTEN_FAILS: \"CAN_PICKUP_BUT_OFTEN_FAILS\",\n    CAN_PICKUP_BUT_CANNOT_SCORE: \"CAN_PICKUP_BUT_CANNOT_SCORE\"\n};\n\nconst PickupHatchConstantsMapping = {\n    NO_INFORMATION_AVAILABLE: \"There is no hatch pickup information available\",\n    CANT_PICKUP: \"The team cannot pick up hatches off the ground\",\n    PICKS_UP_WELL: \"The team can pick up hatches off the ground well\",\n    CAN_PICKUP_BUT_NO_COMFORT: \"The team can pick up hatches but it prefers not to\",\n    CAN_PICKUP_BUT_OFTEN_FAILS: \"The team can pick up hatches but fails to do so often\",\n    CAN_PICKUP_BUT_CANNOT_SCORE: \"The team can pick up hatches but cannot score them afterwards\"\n}\n\nexport default PickupHatchConstants;\n\nexport {PickupHatchConstantsMapping};","import React, {useState} from 'react';\nimport {\n    Dropdown, DropdownToggle, DropdownMenu, DropdownItem,\n} from 'reactstrap';\nimport PickupHatchConstants, { PickupHatchConstantsMapping } from './PickupHatchConstants';\nimport firebase from 'firebase/app';\nimport 'firebase/database';\nimport {toast} from 'react-toastify';\nimport Spacer from '../../../../Components/Spacer';\nimport {Grid, Row, Col} from 'react-flexbox-grid';\n\nconst {NO_INFORMATION_AVAILABLE,\nCANT_PICKUP,\nPICKS_UP_WELL,\nCAN_PICKUP_BUT_NO_COMFORT,\nCAN_PICKUP_BUT_OFTEN_FAILS,\nCAN_PICKUP_BUT_CANNOT_SCORE} = PickupHatchConstants;\n\nconst Levels = [{\n    value: CANT_PICKUP,\n    name: PickupHatchConstantsMapping.CANT_PICKUP\n}, {\n    value: PICKS_UP_WELL,\n    name: PickupHatchConstantsMapping.PICKS_UP_WELL\n},{\n    value:CAN_PICKUP_BUT_NO_COMFORT ,\n    name: PickupHatchConstantsMapping.CAN_PICKUP_BUT_NO_COMFORT\n},{\n    value: CAN_PICKUP_BUT_OFTEN_FAILS,\n    name: PickupHatchConstantsMapping.CAN_PICKUP_BUT_OFTEN_FAILS\n},{\n    value: CAN_PICKUP_BUT_CANNOT_SCORE,\n    name: PickupHatchConstantsMapping.CAN_PICKUP_BUT_CANNOT_SCORE\n}]\n\nconst PickupHatchPerformance = ({pickupHatchPerformance, currentUser, selectedTeam}) => {\n    const [dropOpen, setDropOpen] = useState(false);\n\n    let currUserChosenPerformance = NO_INFORMATION_AVAILABLE;\n    if(pickupHatchPerformance && pickupHatchPerformance[currentUser.uid]) {\n        currUserChosenPerformance = pickupHatchPerformance[currentUser.uid].ratingLevel;\n    } \n\n    return <>\n        <hr />\n        <h2>Hatch pickup performance</h2>\n\n        <h3>What do you think their hatch pickup performance is? (Pick 1)</h3>\n        <Dropdown isOpen={dropOpen} toggle={() => setDropOpen(!dropOpen)} >\n        <DropdownToggle caret style={{ backgroundColor: \"#20508b\" }}>\n            {PickupHatchConstantsMapping[currUserChosenPerformance]} \n        </DropdownToggle>\n        <DropdownMenu modifiers={{\n            setMaxHeight: {\n                enabled: true,\n                order: 890,\n                fn: (data) => {\n                    return {\n                        ...data,\n                        styles: {\n                            ...data.styles,\n                            overflow: 'auto',\n                            maxHeight: window.innerHeight * .8,\n                        },\n                    };\n                },\n            },\n        }}>\n            {Levels.map(level => {\n                const { value, name } = level;\n                return <DropdownItem key={value} onClick={async () => { \n                    // setSelectedAuton(value) \n                    toast.info(`Setting \"${name}\"...`);\n                    try {\n                        await firebase.database().ref(`2019data/${selectedTeam}/pickupHatchPerformance/${currentUser.uid}`).set({\n                            displayName: currentUser.displayName,\n                            ratingLevel: value\n                        });\n                        toast.success(\"Set value\");\n                    } catch(e) {\n                        toast.error(`Error: ${e.message}`);\n                    }\n                }}>{name}</DropdownItem>\n            })}\n            </DropdownMenu>\n        </Dropdown>\n        <Spacer space={10} />\n        <h3>What do others think?</h3>\n        {!pickupHatchPerformance && <>\n            Cannot find any ratings\n        </>}\n        {pickupHatchPerformance && \n            <Grid>\n                <Row>\n                    {Object.keys(pickupHatchPerformance).map((op, i) => {\n                        return <Col md={3} key={\"op\" + i}>\n                            <div style={{\n                                margin:10,\n                                backgroundColor: \"#efefef\",\n                                border: \"2px solid #20508B\",\n                                borderRadius: 4,\n                                padding: 5,\n                                textAlign: 'left'\n                            }}>\n                                <span style={{\n                                        fontWeight: 'bold'\n                                    }}>{pickupHatchPerformance[op].displayName}: </span>\n                                    {PickupHatchConstantsMapping[pickupHatchPerformance[op].ratingLevel]} \n                            </div>\n                        </Col>\n                    })}\n                </Row>\n            </Grid>\n        }\n        <hr />\n    </>\n}\n\nexport default PickupHatchPerformance;","import React from 'react';\n\nconst PitInfoShow = ({pitinfo}) => {\n    // console.log(pitinfo);\n//     cargoCircled: {Cargo: false, L1: true, L2: true, L3: true, None: false}\n// climbReliability: 0\n// driveType: \"Mechanum\"\n// hatchCircled: {Cargo: false, L1: true, L2: true, L3: true, None: false}\n// mainScoringMethod: 3\n// maxStartingPos: 1\n// notes: \"Wheels with stuff, not chains though (william note: Track?)\"\n// preGamePreference: 2\n// reliability: 0\n// scoringStrats: \"\"\n// timeToClimb: \"Depends, quick\"\n    let maxStart = \"None\";\n    switch (pitinfo.maxStartingPos) {\n        case 1: \n            maxStart = \"H1\";\n            break;\n        case 2:\n            maxStart = \"H2\";\n            break;\n        default:\n            maxStart = \"None\";\n            break;\n    }\n\n    let autoOrCamera = \"None\";\n    switch (pitinfo.preGamePreference) {\n        case 1:\n            autoOrCamera = \"Auto\";\n            break;\n        case 2:\n            autoOrCamera = \"Camera\";\n            break;\n        default:\n            autoOrCamera = \"None\";\n            break;\n    }\n\n    let mainScoringMethod = \"None\";\n    switch(pitinfo.mainScoringMethod) {\n        case 1:\n            mainScoringMethod = \"Hatch\";\n            break;\n        case 2:\n            mainScoringMethod = \"Cargo\";\n            break;\n        case 3:\n            mainScoringMethod = \"Climb\";\n            break;\n        case 4:\n            mainScoringMethod = \"Cargo and Hatch\";\n            break;\n        case 5:\n            mainScoringMethod = \"Cargo, Hatch, and Climb\";\n            break;\n        default:\n            mainScoringMethod = \"None\";\n            break;\n    }\n\n    let hatchCircled = Object.keys(pitinfo.hatchCircled).reduce((acc, curr) => {\n        if(pitinfo.hatchCircled[curr]) {\n            acc.push(curr);\n        }\n        return acc;\n    },[]).join(\", \");\n\n    let cargoCircled = Object.keys(pitinfo.cargoCircled).reduce((acc, curr) => {\n        if(pitinfo.cargoCircled[curr]) {\n            acc.push(curr);\n        }\n        return acc;\n    },[]).join(\", \");\n\n    let climbCircled = Object.keys(pitinfo.climbCircled).reduce((acc, curr) => {\n        if(pitinfo.climbCircled[curr]) {\n            acc.push(curr);\n        }\n        return acc;\n    },[]).join(\", \");\n\n    return <>\n        <div>\n            <div style={{\n                fontWeight: \"bold\", \n                color: \"#20508B\",\n                fontSize: 20}}>Drive type:</div>\n                {pitinfo.driveType}\n        </div>\n        <div>\n            <div style={{\n                fontWeight: \"bold\", \n                color: \"#20508B\",\n                fontSize: 20}}>Robot reliability (low = 1, high = 10, unrated = 0):</div>\n                {pitinfo.reliability} \n        </div>\n        <div>\n            <div style={{\n                fontWeight: \"bold\", \n                color: \"#20508B\",\n                fontSize: 20}}>Max starting position:</div>\n                {maxStart} \n        </div>\n        <div>\n            <div style={{\n                fontWeight: \"bold\", \n                color: \"#20508B\",\n                fontSize: 20}}>Pre-Game:</div>\n                {autoOrCamera} \n        </div>\n        <div>\n            <div style={{\n                fontWeight: \"bold\", \n                color: \"#20508B\",\n                fontSize: 20}}>Main scoring method:</div>\n                {mainScoringMethod} \n        </div>\n        <div>\n            <div style={{\n                fontWeight: \"bold\", \n                color: \"#20508B\",\n                fontSize: 20}}>Hatch:</div>\n                {hatchCircled} \n        </div>\n\n        <div>\n            <div style={{\n                fontWeight: \"bold\", \n                color: \"#20508B\",\n                fontSize: 20}}>Cargo:</div>\n                {cargoCircled} \n        </div>\n\n        <div>\n            <div style={{\n                fontWeight: \"bold\", \n                color: \"#20508B\",\n                fontSize: 20}}>Climb:</div>\n                {climbCircled} \n        </div>\n\n        <div>\n            <div style={{\n                fontWeight: \"bold\", \n                color: \"#20508B\",\n                fontSize: 20}}>Time to climb:</div>\n                {pitinfo.timeToClimb} \n        </div>\n\n        <div>\n            <div style={{\n                fontWeight: \"bold\", \n                color: \"#20508B\",\n                fontSize: 20}}>Climb reliability (low = 1, high = 10, unrated = 0):</div>\n                {pitinfo.climbReliability} \n        </div>\n\n        <div>\n            <div style={{\n                fontWeight: \"bold\", \n                color: \"#20508B\",\n                fontSize: 20}}>Scoring strategies:</div>\n                {pitinfo.scoringStrats} \n        </div>\n\n        <div>\n            <div style={{\n                fontWeight: \"bold\", \n                color: \"#20508B\",\n                fontSize: 20}}>Notes:</div>\n                {pitinfo.notes} \n        </div>\n    </>\n\n}\n\nexport default PitInfoShow;","import React from 'react';\nimport { UncontrolledCarousel } from 'reactstrap';\nimport AddImage from './AddImage/AddImage';\nimport Spacer from '../../../Components/Spacer';\nimport ShowHatchData from './ShowHatchData/ShowHatchData';\nimport ShowCargoData from './ShowCargoData/ShowCargoData';\nimport ShowTotalScores from './ShowTotalScores/ShowTotalScores';\nimport ShowNearRocketScoring from './ShowNearRocketScoring/ShowNearRocketScoring';\nimport ShowFarRocketScoring from './ShowFarRocketScoring/ShowFarRocketScoring';\nimport CargoComfort from './CargoComfort/CargoComfort';\nimport { Grid, Row, Col } from 'react-flexbox-grid';\nimport ShowClimbs from './ShowClimbs/ShowClimbs';\nimport AutoPerformance from './AutoPerformance/AutoPerformance';\nimport Observations from './Observations/Observations';\nimport DropCounts from './DropCounts/DropCounts';\nimport PickupHatchPerformance from './PickupHatchPerformance/PickupHatchPerformance';\nimport PitInfoShow from './PitInfoShow/PitInfoShow';\n\nconst TeamStats = ({ teamData, selectedTeam, currentUser }) => {\n    if (selectedTeam === 0) {\n        return <><h2>Please select a team to view data about them</h2></>\n    }\n\n    let items;\n    let matchData;\n    if (teamData) {\n        items = teamData.images || {};\n        matchData = teamData.match_data || {};\n    } else {\n        items = {};\n        matchData = {};\n    }\n\n    let areImages = false;\n    if (Object.keys(items).length > 0) {\n        items = Object.keys(items).map(item => {\n            return { ...items[item], caption: '', header: '' }\n        });\n        areImages = true;\n    }\n\n    matchData = Object.keys(matchData).map(match => {\n        return {\n            matchNumber: Number(match),\n            ...matchData[match]\n        };\n    })\n\n    matchData = matchData.sort((a, b) => {\n        return a.matchNumber - b.matchNumber;\n    });\n\n    return <>\n        <h2>Viewing data about Team {selectedTeam}</h2>\n        <p>See pit scouting info at bottom</p>\n        <h3>Pictures</h3>\n        {areImages ? <div className=\"carouselOut\" style={{ width: window.innerWidth < 700 ? '100%' : '50%', margin: 'auto' }}>\n            <UncontrolledCarousel items={items} autoPlay={false} interval={false} />\n        </div> : <div>There are no pictures for this team</div>}\n\n        <div><AddImage {...{ selectedTeam }} /></div>\n        <Spacer space={10} />\n\n        {teamData && <div><PickupHatchPerformance selectedTeam={selectedTeam} pickupHatchPerformance={teamData.pickupHatchPerformance} currentUser={currentUser}/></div>}\n\n        {/* <div><PickupHatchPerformance pickupHatchPerformance = teamData.pickupHatchPerformance, currentUser /></div> */}\n\n        {matchData.length > 0 ? <>\n            <div style={{ margin: 'auto', textAlign: 'center' }}>\n                {/* See chart of total scores */}\n                <ShowTotalScores {...{ matchData }} />\n                <hr />\n                <Grid>\n                    <Row>\n                        <Col md={6}>\n                            <h2>Hatch vs Cargo (which does the team prefer more?)</h2>\n                            {/* See chart of hatch on rockets and cargo ship per match */}\n                            <ShowHatchData {...{ matchData }} />\n                            {/* See chart of cargo on rockets and cargo ship per match */}\n                            <ShowCargoData {...{ matchData }} />\n                        </Col>\n                        {/* Show scoring on near and rocket */}\n                        <Col md={6}>\n                            <h2>Left vs Right Rocket (relative to the team, which does the team prefer more?)</h2>\n                            {/** For sake of not renaming files, Near is Left, Far is right. */}\n                            <ShowNearRocketScoring {...{ matchData }} />\n                            <ShowFarRocketScoring {...{ matchData }} />\n                        </Col>\n                    </Row>\n                </Grid>\n                <hr />\n                <h2>Cargo vs Hatch drop count (how well are they at handling them?)</h2>\n                <DropCounts {...{ matchData }} />\n                <hr />\n                <h2>Cargo ship scores (which side is the team comfortable with?)</h2>\n                <CargoComfort {...{ matchData }} />\n                <hr />\n\n                <Grid>\n                    <Row>\n                        <Col md={6}>\n                            {/* Climbing levels */}\n                            <h2>Climb level for each match (are they consistent?)</h2>\n                            <ShowClimbs {...{ matchData }} />\n                        </Col>\n                        <Col md={6}>\n                            <h2>Autonomous performance</h2>\n                            <AutoPerformance {...{ matchData }} />\n                        </Col>\n                    </Row>\n                </Grid>\n                <hr />\n                <h2>Observations</h2>\n                <Observations {...{ matchData }} />\n                {/* Scroll through all previous matches */}\n            </div>\n        </> : <>There is no match data for this team.</>}\n        <hr />\n        <h2>Pit scouting information</h2>\n        <h3>Aka what the teams <em>say</em> they can do</h3>\n        {teamData && teamData.pit_info ? <>\n            <PitInfoShow pitinfo={teamData.pit_info} />\n        </> : <>There is no pit info data yet</>}\n\n    </> \n}\n\nexport default TeamStats;","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport BlueButton from '../../Components/BlueButton';\nimport firebase from 'firebase/app';\nimport 'firebase/database';\nimport LoadingSpinner from '../../Components/LoadingSpinner';\nimport TeamStats from './TeamStats/TeamStats';\nimport TeamPicker from '../../Components/TeamPicker/TeamPicker';\nimport Spacer from '../../Components/Spacer';\n\nconst Stats = ({ currentUser, match }) => {\n    const [data, setData] = useState(null);\n    const [loading, setLoading] = useState(true);\n    const [selectedTeam, setSelectedTeam] = useState(0);\n\n    // console.log(match);\n    useEffect(() => {\n        if(match && match.params && match.params.team) {\n            setSelectedTeam(Number(match.params.team));\n        }\n    }, []);\n\n    useEffect(() => {\n        const dataRef = firebase.database().ref(\"2019data\");\n        dataRef.on('value', (snap) => {\n            let value = snap.val() || null;\n            setData(value);\n            setLoading(false);\n        });\n\n        return () => { dataRef.off(); }\n    }, [])\n\n    if (loading) {\n        return <>\n            <LoadingSpinner />\n            <Link to=\"/\"><BlueButton>Back</BlueButton></Link>\n        </>\n    }\n\n    return <>\n        <Link to=\"/\"><BlueButton>Back</BlueButton></Link>\n        <hr />\n        <h1>View team stats</h1>\n\n        <TeamPicker {...{ allData: data, selectedTeam, setSelectedTeam }} />\n        <Spacer space={10} />\n        <TeamStats {...{ teamData: data ? data[selectedTeam] : {}, selectedTeam, currentUser }} />\n\n        <hr />\n        <Link to=\"/\"><BlueButton>Back</BlueButton></Link>\n    </>\n}\n\nexport default Stats;\n","import React from 'react';\nimport { Grid, Row, Col } from 'react-flexbox-grid';\nimport { Teams, TeamsInit, TeamsInitF } from '../../../Assets/Teams/Teams';\nimport BlueButton from '../../../Components/BlueButton';\n\nconst TeamSelector = ({ teamsToInclude, setTeamsToInclude, sortByBest, setSortByBest }) => {\n    return <>\n        <Grid>\n            <Row>\n                <Col><BlueButton style={{ margin: 10 }} onClick={() => {\n                    setTeamsToInclude(TeamsInit);\n                }}>Select all</BlueButton></Col>\n                <Col><BlueButton style={{ margin: 10 }} onClick={() => {\n                    setTeamsToInclude(TeamsInitF);\n                }}>Deselect all</BlueButton></Col>\n                <Col><div style={{ width: 2, height: '80%', backgroundColor: \"#20508b\" }}></div></Col>\n                <Col><BlueButton style={{ margin: 10 }} onClick={() => {\n                    setSortByBest(true);\n                }} disabled={sortByBest}>Sort by best</BlueButton></Col>\n                <Col><BlueButton style={{ margin: 10 }} onClick={() => {\n                    setSortByBest(false);\n                }} disabled={!sortByBest}>Sort by team</BlueButton></Col>\n            </Row>\n            <Row>\n                {Teams.map(team => {\n                    return <Col xs={3} md={3} lg={1} key={team}>\n                        <div style={{\n                            border: \"2px solid #20508B\",\n                            borderRadius: 5,\n                            padding: 3,\n                            marginBottom: 5,\n                            backgroundColor: \"#efefef\",\n                            userSelect: \"none\",\n                            cursor: \"pointer\",\n                            opacity: teamsToInclude[team] ? 1 : 0.2,\n                            textAlign: 'center'\n                        }} onClick={() => {\n                            let setTeams = { ...teamsToInclude };\n                            setTeams[team] = !setTeams[team];\n                            setTeamsToInclude(setTeams);\n                        }}>\n                            {team}\n                        </div>\n                    </Col>\n                })}\n            </Row>\n        </Grid>\n    </>\n}\n\nexport default TeamSelector;","import {\n    countCargo,\n    countHatches,\n    countBoth,\n    calculateAutonLevel\n} from \"../../Stats/TeamStats/GetDataObjects/GetDataObjects\";\n// import { } from \"../../../Assets/Teams/Teams\";\n\nconst DataCalculator = (data) => {\n    let cargoScores = {};\n    let hatchScores = {};\n    let overallScores = {};\n    let autonScores = {};\n    let rocketOverallScores = {};\n    let cargoShipOverallScores = {};\n    let cargoDropCounts = {};\n    let hatchDropCounts = {};\n    let habBonuses = {};\n\n    if(data) {\n\n        Object.keys(data).forEach(team => {\n            const matchData = data[team] && data[team].match_data ? data[team].match_data : {}\n            let matchCount = Object.keys(matchData).length;\n            let cargoTotal = 0;\n            let hatchTotal = 0;\n            let overallTotal = 0;\n            let autonTotal = 0;\n            let rocketTotal = 0;\n            let cargoShipTotal = 0;\n            let cargoDropCount = 0;\n            let hatchDropCount = 0;\n            let habBonus = 0;\n            Object.keys(matchData).forEach(matchKey => {\n                let match = matchData[matchKey]\n    \n                let countBothNearRocket = countBoth(match.nearRocket);\n                let countBothFarRocket = countBoth(match.farRocket);\n                let countBothCargoShip = countBoth(match.cargo)\n    \n                cargoTotal += countCargo(match.nearRocket) + countCargo(match.farRocket) + countCargo(match.cargo);\n                hatchTotal += countHatches(match.nearRocket) + countHatches(match.farRocket) + countHatches(match.cargo);\n                overallTotal += countBothNearRocket + countBothFarRocket + countBothCargoShip;\n                autonTotal += calculateAutonLevel(match.selectedAuton)\n                rocketTotal += countBothNearRocket + countBothFarRocket;\n                cargoShipTotal += countBothCargoShip;\n                cargoDropCount += match.cargoDropped;\n                hatchDropCount += match.hatchesDropped;\n                habBonus += match.habBonus;\n            });\n    \n            if (matchCount > 0) {\n                cargoScores[team] = cargoTotal / matchCount;\n                hatchScores[team] = hatchTotal / matchCount;\n                overallScores[team] = overallTotal / matchCount;\n                autonScores[team] = autonTotal / matchCount;\n                rocketOverallScores[team] = rocketTotal / matchCount;\n                cargoShipOverallScores[team] = cargoShipTotal / matchCount;\n                cargoDropCounts[team] = cargoDropCount / matchCount;\n                hatchDropCounts[team] = hatchDropCount / matchCount;\n                habBonuses[team] = habBonus / matchCount;\n            }\n        });\n    }\n\n    return {\n        cargoScores,\n        hatchScores,\n        overallScores,\n        autonScores,\n        rocketOverallScores,\n        cargoShipOverallScores,\n        cargoDropCounts,\n        hatchDropCounts,\n        habBonuses\n    };\n}\n\n\n\nexport default DataCalculator;","import React from 'react';\nimport {\n    BarChart, Bar, XAxis, YAxis, Tooltip\n} from 'recharts';\n\nconst CustomTick = ({ x, y, stroke, payload }) => {\n    return <>\n        <g transform={`translate(${x},${y})`}>\n            <text x={0} y={0} dy={\n                window.innerWidth < 550 ? 3 : 6} textAnchor=\"end\" fill=\"#666\" transform=\"rotate(-90)\" fontSize={\n                    window.innerWidth < 550 ? 8 : 16}>{payload.value}</text>\n        </g>\n    </>\n}\n\nconst GeneralBarChart = ({ data, dataKey }) => {\n    return <BarChart\n        width={window.innerWidth < 550 ? 300 : 550}\n        height={250}\n        data={data}\n        margin={{ top: 0, right: 0, left: 0, bottom: 13 }}>\n        <XAxis dataKey=\"name\" interval={0} tick={<CustomTick />} />\n        <YAxis label={{ value: dataKey, angle: -90, position: \"insideLeft\" }} />\n        <Tooltip />\n        {/* <Legend /> */}\n        <Bar dataKey={dataKey} fill=\"#20508B\" />\n    </BarChart>\n}\n\nexport default GeneralBarChart;","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport BlueButton from '../../Components/BlueButton';\nimport firebase from 'firebase/app';\nimport 'firebase/database';\nimport LoadingSpinner from '../../Components/LoadingSpinner';\nimport { TeamsInit } from '../../Assets/Teams/Teams';\nimport TeamSelector from './TeamSelector/TeamSelector';\nimport DataCalculator from './DataCalculator/DataCalculator';\nimport GeneralBarChart from './GeneralBarChart/GeneralBarChart';\nimport { Grid, Row, Col } from 'react-flexbox-grid';\n\nconst AllStats = ({ currentUser }) => {\n    const [info, setCalculatedInfo] = useState({});\n    const [loading, setLoading] = useState(true);\n    const [teamsToInclude, setTeamsToInclude] = useState(TeamsInit);\n    const [sortByBest, setSortByBest] = useState(false)\n    useEffect(() => {\n        const dataRef = firebase.database().ref(\"2019data\");\n        dataRef.on('value', (snap) => {\n            let value = snap.val() || null;\n            let calculatedInfo = DataCalculator(value)\n            setCalculatedInfo(calculatedInfo);\n            setLoading(false);\n        });\n\n\n        return () => { dataRef.off(); }\n    }, [])\n\n    if (loading) {\n        return <>\n            <LoadingSpinner />\n            <Link to=\"/\"><BlueButton>Back</BlueButton></Link>\n        </>\n    }\n\n    // Get the teams to show\n    let teamsArr = [];\n    Object.keys(teamsToInclude).forEach(team => {\n        if (teamsToInclude[team]) {\n            teamsArr.push(team);\n        }\n    });\n    teamsArr = teamsArr.map(d => Number(d));\n    teamsArr = teamsArr.sort((a, b) => a - b);\n\n    // Convert to objects used in the bar charts\n    let avgCargoScoreData = [];\n    let currHighestCargoAvg = [\"Nobody\", 0];\n    let avgHatchScoreData = [];\n    let currHighestHatchAvg = [\"Nobody\", 0];\n    let overallBothScoreData = [];\n    let highestOverallScore = [\"Nobody\", 0];\n    let autonScoreData = [];\n    let highestAutonScore = [\"Nobody\", 0];\n    let rocketScoreData = [];\n    let highestRocketScore = [\"Nobody\", 0];\n    let cargoScoreData = [];\n    let highestCargoScore = [\"Nobody\", 0];\n    let cargoDropData = [];\n    let lowestCargoDropCount = [\"Nobody\", Infinity];\n    let hatchDropData = [];\n    let lowestHatchDropCount = [\"Nobody\", Infinity];\n    let habBonuses = [];\n    let highestHabBonus = [\"Nobody\", 0];\n\n    teamsArr.forEach(team => {\n        let cargoScoreCurr = info.cargoScores[team];\n        let hatchScoreCurr = info.hatchScores[team];\n        let overallScoreCurr = info.overallScores[team];\n        let autonScoreCurr = info.autonScores[team];\n        let rocketOverallCurr = info.rocketOverallScores[team];\n        let cargoShipOverallCurr = info.cargoShipOverallScores[team];\n        let cargoDropCurr = info.cargoDropCounts[team];\n        let hatchDropCurr = info.hatchDropCounts[team];\n        let habBonusCurr = info.habBonuses[team];\n\n        if (habBonusCurr || habBonusCurr === 0) {\n            habBonuses.push({\n                name: team,\n                score: habBonusCurr\n            });\n            if (habBonusCurr > highestHabBonus[1]) {\n                highestHabBonus = [team, habBonusCurr];\n            }\n        }\n\n        if (cargoDropCurr || cargoDropCurr === 0) {\n            cargoDropData.push({\n                name: team,\n                count: cargoDropCurr\n            });\n            if (cargoDropCurr < lowestCargoDropCount[1]) {\n                lowestCargoDropCount = [team, cargoDropCurr];\n            }\n        }\n\n        if (hatchDropCurr || hatchDropCurr === 0) {\n            hatchDropData.push({\n                name: team,\n                count: hatchDropCurr\n            });\n            if (hatchDropCurr < lowestHatchDropCount[1]) {\n                lowestHatchDropCount = [team, hatchDropCurr];\n            }\n        }\n\n        if (rocketOverallCurr || rocketOverallCurr === 0) {\n            rocketScoreData.push({\n                name: team,\n                count: rocketOverallCurr\n            });\n            if (rocketOverallCurr > highestRocketScore[1]) {\n                highestRocketScore = [team, rocketOverallCurr];\n            }\n        }\n\n        if (cargoShipOverallCurr || cargoShipOverallCurr === 0) {\n            cargoScoreData.push({\n                name: team,\n                count: cargoShipOverallCurr\n            });\n            if (cargoShipOverallCurr > highestCargoScore[1]) {\n                highestCargoScore = [team, cargoShipOverallCurr];\n            }\n        }\n\n\n        if (autonScoreCurr || autonScoreCurr === 0) {\n            autonScoreData.push({\n                name: team,\n                score: autonScoreCurr\n            });\n            if (autonScoreCurr > highestAutonScore[1]) {\n                highestAutonScore = [team, autonScoreCurr];\n            }\n        }\n\n        if (overallScoreCurr || overallScoreCurr === 0) {\n            overallBothScoreData.push({\n                name: team,\n                count: overallScoreCurr\n            });\n            if (overallScoreCurr > highestOverallScore[1]) {\n                highestOverallScore = [team, overallScoreCurr];\n            }\n        }\n\n        if (cargoScoreCurr || cargoScoreCurr === 0) {\n            avgCargoScoreData.push({\n                name: team,\n                count: cargoScoreCurr\n            });\n            if (cargoScoreCurr > currHighestCargoAvg[1]) {\n                currHighestCargoAvg = [team, cargoScoreCurr];\n            }\n        }\n\n        if (hatchScoreCurr || hatchScoreCurr === 0) {\n            avgHatchScoreData.push({\n                name: team,\n                count: hatchScoreCurr\n            });\n            if (hatchScoreCurr > currHighestHatchAvg[1]) {\n                currHighestHatchAvg = [team, hatchScoreCurr];\n            }\n        }\n    });\n\n    if (sortByBest) {\n        avgCargoScoreData = avgCargoScoreData.sort((a, b) => {\n            return b.count - a.count;\n        });\n\n        avgHatchScoreData = avgHatchScoreData.sort((a, b) => {\n            return b.count - a.count;\n        });\n\n        overallBothScoreData = overallBothScoreData.sort((a, b) => {\n            return b.count - a.count;\n        });\n\n        autonScoreData = autonScoreData.sort((a, b) => {\n            return b.score - a.score;\n        });\n\n        rocketScoreData = rocketScoreData.sort((a, b) => {\n            return b.count - a.count;\n        });\n\n        cargoScoreData = cargoScoreData.sort((a, b) => {\n            return b.count - a.count;\n        });\n\n        cargoDropData = cargoDropData.sort((a, b) => {\n            return a.count - b.count;\n        });\n\n        hatchDropData = hatchDropData.sort((a, b) => {\n            return a.count - b.count;\n        });\n\n        habBonuses = habBonuses.sort((a, b) => {\n            return b.score - a.score;\n        })\n    }\n\n    return <>\n        <Link to=\"/\"><BlueButton>Back</BlueButton></Link>\n        <hr />\n        <h1>View all stats</h1>\n\n        <h2>Click on a team to hide them</h2>\n        <TeamSelector {...{ teamsToInclude, setTeamsToInclude, sortByBest, setSortByBest }} />\n\n        <Grid>\n            <Row>\n                <Col md={6} sm={12} xs={12}>\n                    {info && info.cargoScores && <>\n                        <div style={{ textAlign: 'center' }}>\n                            <h2>Average cargo scores</h2>\n                            <h3>Higher is better (current highest: {currHighestCargoAvg[0]})</h3>\n                        </div>\n                        <GeneralBarChart data={avgCargoScoreData} dataKey={\"count\"} />\n                    </>}\n                </Col>\n                <Col md={6} sm={12} xs={12}>\n                    {info && info.hatchScores && <>\n                        <div style={{ textAlign: 'center' }}>\n                            <h2 style={{ textAlign: 'center' }}>Average hatch scores</h2>\n                            <h3>Higher is better (current highest: {currHighestHatchAvg[0]})</h3>\n                        </div>\n                        <GeneralBarChart data={avgHatchScoreData} dataKey={\"count\"} />\n                    </>}\n                </Col>\n                <Col md={6} sm={12} xs={12}>\n                    {info && info.overallScores && <>\n                        <div style={{ textAlign: 'center' }}>\n                            <h2 style={{ textAlign: 'center' }}>Average combined hatch + cargo</h2>\n                            <h3>Higher is better (current highest: {highestOverallScore[0]})</h3>\n                        </div>\n                        <GeneralBarChart data={overallBothScoreData} dataKey={\"count\"} />\n                    </>}\n                </Col>\n                <Col md={6} sm={12} xs={12}>\n                    {info && info.autonScores && <>\n                        <div style={{ textAlign: 'center' }}>\n                            <h2 style={{ textAlign: 'center' }}>Average auton performance</h2>\n                            <h3>Higher is better (current highest: {highestAutonScore[0]})</h3>\n                        </div>\n                        <GeneralBarChart data={autonScoreData} dataKey={\"score\"} />\n                    </>}\n                </Col>\n                <Col md={6} sm={12} xs={12}>\n                    {info && info.rocketOverallScores && <>\n                        <div style={{ textAlign: 'center' }}>\n                            <h2 style={{ textAlign: 'center' }}>Rocket performance</h2>\n                            <h3>Higher is better (current highest: {highestRocketScore[0]})</h3>\n                        </div>\n                        <GeneralBarChart data={rocketScoreData} dataKey={\"count\"} />\n                    </>}\n                </Col>\n                <Col md={6} sm={12} xs={12}>\n                    {info && info.cargoShipOverallScores && <>\n                        <div style={{ textAlign: 'center' }}>\n                            <h2 style={{ textAlign: 'center' }}>Cargo ship performance</h2>\n                            <h3>Higher is better (current highest: {highestCargoScore[0]})</h3>\n                        </div>\n                        <GeneralBarChart data={cargoScoreData} dataKey={\"count\"} />\n                    </>}\n                </Col>\n                <Col md={6} sm={12} xs={12}>\n                    {info && info.cargoDropCounts && <>\n                        <div style={{ textAlign: 'center' }}>\n                            <h2 style={{ textAlign: 'center' }}>Cargo drop averages</h2>\n                            <h3>Lower is better (current lowest: {lowestCargoDropCount[0]})</h3>\n                        </div>\n                        <GeneralBarChart data={cargoDropData} dataKey={\"count\"} />\n                    </>}\n                </Col>\n                <Col md={6} sm={12} xs={12}>\n                    {info && info.hatchDropCounts && <>\n                        <div style={{ textAlign: 'center' }}>\n                            <h2 style={{ textAlign: 'center' }}>Hatch drop averages</h2>\n                            <h3>Lower is better (current lowest: {lowestHatchDropCount[0]})</h3>\n                        </div>\n                        <GeneralBarChart data={hatchDropData} dataKey={\"count\"} />\n                    </>}\n                </Col>\n                <Col md={6} sm={12} xs={12}>\n                    {info && info.habBonuses && <>\n                        <div style={{ textAlign: 'center' }}>\n                            <h2 style={{ textAlign: 'center' }}>Hab Bonus Level Avgs</h2>\n                            <h3>Higher is better (current highest: {highestHabBonus[0]})</h3>\n                        </div>\n                        <GeneralBarChart data={habBonuses} dataKey={\"score\"} />\n                    </>}\n                </Col>\n            </Row>\n        </Grid>\n\n\n\n\n        <hr />\n        <Link to=\"/\"><BlueButton>Back</BlueButton></Link>\n    </>\n}\n\nexport default AllStats;\n","const INIT_CIRCLED = {L3: false, L2: false, L1: false, Cargo: false, None: false};\nconst INIT_CLIMB_CIRCLED = {L3: false, L2: false, L1: false, None: false};\n\nexport {\n    INIT_CIRCLED,\n    INIT_CLIMB_CIRCLED\n};","import React from 'react';\nimport {\n    Input, InputGroup, InputGroupAddon, InputGroupText\n} from 'reactstrap';\n\n\nconst InputBox = ({ value, setValue, name, placeholder }) => {\n    return <InputGroup>\n        <InputGroupAddon addonType=\"prepend\">\n            <InputGroupText>{name}</InputGroupText>\n        </InputGroupAddon>\n        <Input value={value} placeholder={placeholder} onChange={(e) => {\n            setValue(e.target.value);\n        }} />\n    </InputGroup>\n}\n\nexport default InputBox;\n","import React from 'react';\nimport {\n    Input, InputGroup, InputGroupAddon, InputGroupText\n} from 'reactstrap';\nimport { toast } from 'react-toastify';\n\n\nconst ReliabilityInput = ({ value, setValue, name, placeholder, max }) => {\n    return <InputGroup>\n        <InputGroupAddon addonType=\"prepend\">\n            <InputGroupText>{name}</InputGroupText>\n        </InputGroupAddon>\n        <Input value={value !== 0 ? value : \"\"} placeholder={placeholder} \n                type=\"number\" onChange={(e) => {\n            let newNumber = Number(e.target.value)\n            if (newNumber > max || newNumber < 0) {\n                toast.warn(`Match number must be between 0 and ${max + 1}`)\n            } else {\n                setValue(newNumber)\n            }\n        }} />\n    </InputGroup>\n}\n\nexport default ReliabilityInput;\n","import React, {useState} from 'react';\nimport BlueButton from '../../Components/BlueButton';\nimport {Link} from 'react-router-dom';\nimport {Input, Label} from 'reactstrap';\nimport TeamPicker from '../../Components/TeamPicker/TeamPicker';\nimport { INIT_CIRCLED, INIT_CLIMB_CIRCLED } from './PitInfoConsts/PitInfoConsts';\nimport Spacer from '../../Components/Spacer';\nimport InputBox from './InputBox/InputBox';\nimport ReliabilityInput from './ReliabilityInput/ReliabilityInput';\nimport firebase from 'firebase/app';\nimport 'firebase/database';\nimport {toast} from 'react-toastify';\n\nconst PitInfo = () => {\n    const [selectedTeam, setSelectedTeam] = useState(0);\n    const [driveType, setDriveTypeText] = useState(\"\");\n    const [reliability, setReliability] = useState(0); // 1-10\n    const [maxStartingPos, setMaxStartingPos] = useState(0); // 0, 1, or 2 (None, Level 1, Level 2)\n    const [preGamePreference, setPreGamePreference] = useState(0); // Auto or camera\n    const [mainScoringMethod, setMainScoringMethod] = useState(0); // Cargo or hatch or both\n    const [hatchCircled, setHatchCircled] = useState(INIT_CIRCLED);\n    const [cargoCircled, setCargoCircled] = useState(INIT_CIRCLED);\n    const [climbCircled, setClimbCircled] = useState(INIT_CLIMB_CIRCLED);\n    const [timeToClimb, setTimeToClimb] = useState(\"\");\n    const [climbReliability, setClimbReliability] = useState(0); // 1-10\n    const [scoringStrats, setScoringStrats] = useState(\"\");\n    const [notes, setNotes] = useState(\"\");\n\n    return <>\n        <Link to=\"/\"><BlueButton>Back</BlueButton></Link>\n        <hr />\n        <h1>Enter pit scouting information</h1>\n        <h2>Warning: If there is already data, you will be overriding it. Double check if you are not sure.</h2>\n        <h3>There is also no double checking, so please double check to make sure all inputs are filled or you will have to do it over.</h3>\n        <TeamPicker {...{selectedTeam, setSelectedTeam}} />\n        <Spacer space={10} />\n\n        <h2>Drive Type</h2>\n        <InputBox {...{\n            value: driveType, \n            setValue: setDriveTypeText, \n            name: \"Drive Type\",\n            placeholder: \"eg. Mechanum, West Coast, Swerve...\"}}/>\n        <Spacer space={5} />\n        <h2>Reliability</h2> \n        <ReliabilityInput {...{\n            value: reliability,\n            setValue: setReliability,\n            name: \"Reliability\",\n            placeholder: \"1-10\",\n            max: 10\n        }}/>\n        <Spacer space={5} />\n        <h2>Max starting position</h2>\n        <h3>0 for none, 1 for H1, 2 for H2</h3>\n        <ReliabilityInput {...{\n            value: maxStartingPos,\n            setValue: setMaxStartingPos,\n            name: \"Max starting pos\",\n            placeholder: \"leave blank or enter 1, or 2\",\n            max: 2\n        }}/>\n        <Spacer space={5} />\n        <h2>Pre-Game</h2>\n        <h3>0 for None, 1 for Auto, 2 for Camera</h3>\n        <ReliabilityInput {...{\n            value: preGamePreference,\n            setValue: setPreGamePreference,\n            name: \"Pregame\",\n            placeholder: \"leave blank or enter 1, or 2\",\n            max: 2\n        }}/>\n        <h2>Main scoring method</h2>\n        <h3>0 for none, 1 for Hatch, 2 for Cargo, 3 for Climb, 4 for Hatch and cargo, 5 for all three</h3>\n        <ReliabilityInput {...{\n            value: mainScoringMethod,\n            setValue: setMainScoringMethod,\n            name: \"Main scoring method\",\n            placeholder: \"leave blank or enter 1, 2, 3, 4, 5\",\n            max: 5\n        }}/>\n\n        <div>\n            <h2>Hatch</h2>\n            {[\"L3\", \"L2\", \"L1\", \"Cargo\", \"None\"].map((d,i) => {\n                return <div key={\"h\" + i}><Label check >\n                    <Input type=\"checkbox\" \n                        checked={hatchCircled[d]}\n                        onChange={() => {\n                            setHatchCircled({...hatchCircled, [d]: !hatchCircled[d]});\n                        }}\n                    />\n                    {d}\n                </Label></div>\n            })}\n        </div>\n\n        <div>\n            <h2>Cargo</h2>\n            {[\"L3\", \"L2\", \"L1\", \"Cargo\", \"None\"].map((d,i) => {\n                return <div key={\"h\" + i}><Label check >\n                    <Input type=\"checkbox\" \n                        checked={cargoCircled[d]}\n                        onChange={() => {\n                            setCargoCircled({...cargoCircled, [d]: !cargoCircled[d]});\n                        }}\n                    />\n                    {d}\n                </Label></div>\n            })}\n        </div>\n\n        <div>\n            <h2>Climb</h2>\n            {[\"L3\", \"L2\", \"L1\", \"None\"].map((d,i) => {\n                return <div key={\"h\" + i}><Label check >\n                    <Input type=\"checkbox\" \n                        checked={climbCircled[d]}\n                        onChange={() => {\n                            setClimbCircled({...climbCircled, [d]: !climbCircled[d]});\n                        }}\n                    />\n                    {d}\n                </Label></div>\n            })}\n        </div>\n        <Spacer space={10} />\n        <InputBox {...{\n            value: timeToClimb, \n            setValue: setTimeToClimb, \n            name: \"Time to climb\",\n            placeholder: \"eg. 5 seconds, quick\"}}/>\n        <h2>Climb reliability</h2>\n        <ReliabilityInput {...{\n            value: climbReliability,\n            setValue: setClimbReliability,\n            name: \"Climb Reliability\",\n            placeholder: \"1-10\",\n            max: 10\n        }}/>\n        <Spacer space={5} />\n        <h2>Scoring strats</h2>\n        <InputBox {...{\n            value: scoringStrats, \n            setValue: setScoringStrats, \n            name: \"Scoring strategies\",\n            placeholder: \"\"}}/>\n        \n        <h2>Notes</h2>\n        <InputBox {...{\n            value: notes, \n            setValue: setNotes, \n            name: \"Notes\",\n            placeholder: \"notes\"}}/>\n        <hr />\n        <BlueButton onClick={async () => {\n            toast.info(\"Submitting info...\");\n            if (selectedTeam === 0) {\n                toast.error(\"You must select a team\");\n                return;\n            }\n            try {\n                await firebase.database().ref(`2019data/${selectedTeam}/pit_info`).set({\n                    driveType,\n                    reliability, \n                    maxStartingPos,\n                    preGamePreference,\n                    mainScoringMethod,\n                    hatchCircled,\n                    cargoCircled,\n                    timeToClimb,\n                    climbCircled,\n                    climbReliability,\n                    scoringStrats,\n                    notes\n                });\n                toast.success(\"Success! Info set.\")\n            } catch(e) {\n                toast.error(`Error submitting info: ${e.message}`)\n            }\n\n        }}>Submit</BlueButton>\n\n        <Link to=\"/\"><BlueButton>Back</BlueButton></Link>\n    </>\n}\n\nexport default PitInfo;","const Matches = {1: {'blueTeams': [2443, 4270, 2853], 'redTeams': [7898, 7497, 2465]},\n 10: {'blueTeams': [6704, 3878, 2090], 'redTeams': [2443, 6998, 7724]},\n 11: {'blueTeams': [6909, 2465, 2438], 'redTeams': [359, 2504, 7631]},\n 12: {'blueTeams': [368, 2896, 2439], 'redTeams': [2441, 6998, 4270]},\n 13: {'blueTeams': [3008, 359, 3882], 'redTeams': [7505, 7548, 2438]},\n 14: {'blueTeams': [2444, 2090, 2896], 'redTeams': [2853, 6909, 3721]},\n 15: {'blueTeams': [2504, 2443, 2441], 'redTeams': [2445, 2437, 4253]},\n 16: {'blueTeams': [7631, 7898, 6704], 'redTeams': [3878, 5701, 7497]},\n 17: {'blueTeams': [7724, 5515, 3800], 'redTeams': [6766, 2477, 2465]},\n 18: {'blueTeams': [6998, 3878, 7505], 'redTeams': [2853, 368, 2504]},\n 19: {'blueTeams': [2438, 5515, 2437], 'redTeams': [7548, 2090, 6766]},\n 2: {'blueTeams': [2439, 7631, 7548], 'redTeams': [2441, 2090, 4253]},\n 20: {'blueTeams': [2465, 5701, 2444], 'redTeams': [2439, 4253, 3882]},\n 21: {'blueTeams': [7898, 3721, 2443], 'redTeams': [7631, 3008, 7724]},\n 22: {'blueTeams': [2441, 2896, 7497], 'redTeams': [6909, 2477, 359]},\n 23: {'blueTeams': [2445, 2504, 6704], 'redTeams': [2444, 3800, 4270]},\n 24: {'blueTeams': [6766, 6998, 5515], 'redTeams': [359, 2438, 2441]},\n 25: {'blueTeams': [2437, 7497, 2443], 'redTeams': [2853, 5701, 2090]},\n 26: {'blueTeams': [368, 7548, 2465], 'redTeams': [6704, 2439, 6909]},\n 27: {'blueTeams': [7505, 7898, 7724], 'redTeams': [2445, 2896, 3008]},\n 28: {'blueTeams': [4253, 3721, 3800], 'redTeams': [7631, 3878, 2477]},\n 29: {'blueTeams': [4270, 2437, 6909], 'redTeams': [3882, 2443, 7505]},\n 3: {'blueTeams': [3882, 368, 6998], 'redTeams': [6909, 2445, 7505]},\n 30: {'blueTeams': [368, 6766, 2438], 'redTeams': [2477, 7898, 2896]},\n 31: {'blueTeams': [2441, 2444, 7548], 'redTeams': [7724, 2465, 3878]},\n 32: {'blueTeams': [3800, 2853, 359], 'redTeams': [7497, 3882, 7631]},\n 33: {'blueTeams': [4253, 6704, 3008], 'redTeams': [4270, 2504, 2090]},\n 34: {'blueTeams': [5701, 2439, 6998], 'redTeams': [3721, 5515, 2445]},\n 35: {'blueTeams': [2504, 4253, 2477], 'redTeams': [7724, 2853, 3882]},\n 36: {'blueTeams': [5515, 2465, 7631], 'redTeams': [2444, 6909, 3878]},\n 37: {'blueTeams': [2438, 2090, 3800], 'redTeams': [3008, 368, 2441]},\n 38: {'blueTeams': [2896, 359, 4270], 'redTeams': [5701, 7505, 3721]},\n 39: {'blueTeams': [6998, 2445, 7898], 'redTeams': [6704, 7548, 2437]},\n 4: {'blueTeams': [2437, 3878, 3008], 'redTeams': [6766, 2896, 2504]},\n 40: {'blueTeams': [6766, 2443, 3878], 'redTeams': [7497, 3721, 2439]},\n 41: {'blueTeams': [2504, 3008, 5701], 'redTeams': [7548, 2853, 7898]},\n 42: {'blueTeams': [2437, 7724, 6766], 'redTeams': [7497, 4270, 368]},\n 43: {'blueTeams': [2090, 3882, 2445], 'redTeams': [2465, 359, 6704]},\n 44: {'blueTeams': [2441, 7505, 5515], 'redTeams': [2443, 4253, 2896]},\n 45: {'blueTeams': [2477, 2439, 2444], 'redTeams': [6998, 2438, 7631]},\n 46: {'blueTeams': [6909, 7497, 2090], 'redTeams': [3800, 6766, 7898]},\n 47: {'blueTeams': [2477, 2441, 2437], 'redTeams': [7505, 4270, 2465]},\n 48: {'blueTeams': [3878, 3882, 3800], 'redTeams': [3008, 2438, 2443]},\n 49: {'blueTeams': [6998, 359, 3721], 'redTeams': [368, 6909, 4253]},\n 5: {'blueTeams': [7724, 3721, 2438], 'redTeams': [5701, 3800, 6704]},\n 50: {'blueTeams': [2504, 7724, 2439], 'redTeams': [2896, 6704, 5515]},\n 51: {'blueTeams': [2853, 7631, 2444], 'redTeams': [7548, 2445, 5701]},\n 52: {'blueTeams': [3878, 2504, 7898], 'redTeams': [2090, 2437, 368]},\n 53: {'blueTeams': [3721, 6704, 2477], 'redTeams': [2465, 6998, 2853]},\n 54: {'blueTeams': [7505, 6766, 3008], 'redTeams': [7631, 2441, 5701]},\n 55: {'blueTeams': [7548, 5515, 2443], 'redTeams': [2896, 3800, 6909]},\n 56: {'blueTeams': [4253, 2438, 7497], 'redTeams': [2444, 7724, 2445]},\n 57: {'blueTeams': [4270, 3882, 7898], 'redTeams': [359, 2439, 5515]},\n 58: {'blueTeams': [7497, 3008, 7548], 'redTeams': [2896, 2437, 6998]},\n 59: {'blueTeams': [2443, 7631, 6909], 'redTeams': [2444, 6704, 368]},\n 6: {'blueTeams': [5515, 2477, 368], 'redTeams': [2437, 2444, 359]},\n 60: {'blueTeams': [2439, 7505, 2853], 'redTeams': [2090, 7724, 359]},\n 61: {'blueTeams': [3800, 2465, 2445], 'redTeams': [4270, 4253, 3878]},\n 62: {'blueTeams': [3721, 2441, 6766], 'redTeams': [2438, 3882, 2504]},\n 63: {'blueTeams': [5701, 6909, 7724], 'redTeams': [2477, 3008, 6998]},\n 64: {'blueTeams': [4253, 2444, 7505], 'redTeams': [6704, 2853, 6766]},\n 65: {'blueTeams': [2438, 2445, 4270], 'redTeams': [5515, 7497, 2504]},\n 66: {'blueTeams': [3721, 7631, 2896], 'redTeams': [2439, 3800, 2437]},\n 67: {'blueTeams': [7898, 368, 5701], 'redTeams': [2465, 2441, 3882]},\n 68: {'blueTeams': [3878, 359, 7548], 'redTeams': [2090, 2443, 2477]},\n 7: {'blueTeams': [5701, 6766, 4253], 'redTeams': [3882, 7548, 3721]},\n 8: {'blueTeams': [2445, 2477, 2853], 'redTeams': [3008, 4270, 2439]},\n 9: {'blueTeams': [3800, 7505, 7497], 'redTeams': [5515, 7898, 2444]}};\n\nexport default Matches;","import React from 'react';\nimport Matches from './Matches';\nimport {Link} from 'react-router-dom';\nimport BlueButton from '../../Components/BlueButton';\nimport {Table} from 'reactstrap';\nimport \"./Matches.css\";\nimport { TeamsMapping } from '../../Assets/Teams/Teams';\n\nconst MatchSchedule = () => {\n    let orderedMatches = Object.keys(Matches).sort((a,b) => {\n        return Number(a) - Number(b);\n    });\n\n\n    return <>\n        <Link to=\"/\"><BlueButton>Back</BlueButton></Link>\n        <h1>Match schedule</h1>\n        <h3>Click on a team to go to their info page</h3>\n        <Table bordered size=\"sm\" responsive>\n            <thead>\n                <tr>\n                    <th>#</th>\n                    <th className=\"blue\">Blue 1</th>\n                    <th className=\"blue\">Blue 2</th>\n                    <th className=\"blue\">Blue 3</th>\n                    <th className=\"red\">Red 1</th>\n                    <th className=\"red\">Red 2</th>\n                    <th className=\"red\">Red 3</th>\n                </tr>\n            </thead>\n            <tbody>\n                {orderedMatches.map(match => {\n                    return <tr key={match}>\n                        <th>{match}</th>\n                        {Matches[match].blueTeams.map(blueTeam => {\n                            return <td key={\"bl-\"+match+blueTeam} className={blueTeam === 2090 ? \"punahou\" :\"blue\"}><Link to={`/stats/${blueTeam}`}><strong>{blueTeam}</strong> - {TeamsMapping[blueTeam]}</Link></td>\n                        })}\n                        {Matches[match].redTeams.map(redTeam => {\n                            return <td key={\"bl-\"+match+redTeam} className={redTeam === 2090 ? \"punahou\" : \"red\"}><Link to={`/stats/${redTeam}`}><strong>{redTeam}</strong> - {TeamsMapping[redTeam]}</Link></td>\n                        })}\n                    </tr>   \n                })}\n            </tbody>\n        </Table>\n        \n\n        <hr />\n        <Link to=\"/\"><BlueButton>Back</BlueButton></Link>\n    </>\n}\n\nexport default MatchSchedule;","import React, { useState, useEffect } from 'react';\nimport firebase from 'firebase/app';\nimport 'firebase/database';\nimport 'firebase/auth';\nimport LoadingSpinner from '../Components/LoadingSpinner';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport BlueButton from '../Components/BlueButton';\nimport MainPage from './MainPage/MainPage';\nimport EnterInfo from './EnterInfo/EnterInfo';\nimport Stats from './Stats/Stats';\nimport AllStats from './AllStats/AllStats';\nimport PitInfo from './PitInfo/PitInfo';\nimport MatchSchedule from './MatchSchedule/MatchSchedule';\n\nconst Home = ({ currentUser }) => {\n    const [canSee, setCanSee] = useState(false)\n    const [loading, setLoading] = useState(true)\n\n    useEffect(() => {\n        const canSeeRef = firebase.database().ref(\"canSee\");\n        canSeeRef.on('value', (snap) => {\n            let value = snap.val() || false;\n            setCanSee(value);\n            setLoading(false);\n        });\n\n        return () => { canSeeRef.off(); };\n    }, []);\n\n    if (loading) {\n        return <>\n            <LoadingSpinner />\n            <div>If you see this spinner for a while it means you do not have access to the page</div>\n            <BlueButton style={{ marginTop: 10 }} onClick={() => {\n                firebase.auth().signOut();\n            }}>Sign out</BlueButton>\n        </>\n    }\n\n    return <>\n        {canSee &&\n            <>\n                <Router>\n                    <Switch>\n                        <Route exact path=\"/\" component={() => <MainPage currentUser={currentUser} />} />\n                        <Route path=\"/enterinfo\" component={() => <EnterInfo currentUser={currentUser} />} />\n                        <Route path=\"/enterpitscouting\" component={() => <PitInfo currentUser={currentUser} />} /> \n                        <Route exact path=\"/stats\" component={(r) => <Stats currentUser={currentUser} />} />\n                        <Route path=\"/stats/:team\" component={(r) => <Stats {...r} currentUser={currentUser} />} />\n                        <Route path=\"/allstats\" component={() => <AllStats currentUser={currentUser} />} />\n                        <Route path=\"/matchschedule\" component={() => <MatchSchedule />} />\n                        <Route component={() => <div>This page does not exist</div>} />\n                    </Switch>\n                </Router>\n            </>\n        }\n\n        {!canSee &&\n            <>\n                <div>You are not authorized to see this page.</div>\n                <BlueButton style={{ marginTop: 10 }} onClick={() => {\n                    firebase.auth().signOut();\n                }}>Sign out</BlueButton>\n            </>\n        }\n\n\n    </>\n}\n\nexport default Home;","import React, { Component } from 'react';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport Home from './Pages/Home';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport LoadingSpinner from './Components/LoadingSpinner';\nimport BlueButton from './Components/BlueButton';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst provider = new firebase.auth.GoogleAuthProvider();\n\nclass App extends Component {\n    state = {\n        currentUser: null,\n        loading: true\n    }\n\n    // When the component mounts, connect to firebase and check if\n    // user is logged in or not\n    componentDidMount = () => {\n        this.auth = firebase.auth().onAuthStateChanged(user => {\n            if (user) {\n                this.setState({\n                    currentUser: user,\n                    loading: false\n                });\n                toast.success(\"Login successful\", { autoClose: 3000 })\n            } else {\n                this.setState({\n                    currentUser: null,\n                    loading: false\n                });\n            }\n        })\n    }\n\n    render() {\n        const { currentUser, loading } = this.state;\n\n        // If still loading, show a spinner instead.\n        if (loading) {\n            return <LoadingSpinner />;\n        }\n\n        return (\n            <div style={{\n                marginLeft: '5%',\n                marginRight: '5%',\n                marginTop: '2%',\n                marginBottom: '5%'\n            }}>\n                <ToastContainer />\n                {/** If the user isn't logged in, show a button to log in via Google */}\n                {!currentUser &&\n                    <>\n                        <div style={{\n                            margin: 'auto',\n                            color: \"#20508b\"\n                        }}>\n                            <h1>FRC 2090 Scouting App 2019</h1>\n                            <h2>Built by William Kwok</h2>\n                            <BlueButton style={{ marginTop: 10 }}\n                                onClick={() => {\n                                    firebase.auth().signInWithRedirect(provider);\n                                }}\n                            >Log in via google</BlueButton>\n                        </div>\n                    </>\n                }\n\n                {/** If the user is logged in, enable different routes. */}\n                {currentUser && <Home currentUser={currentUser} />\n                }\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport firebase from 'firebase/app';\n\nconsole.log(\"v1.0.0\");\n\n// Firebase config. This API Key is completely okay to be exposed\nconst config = {\n    apiKey: \"AIzaSyDqNearNomkDkz8cgGN5jkvnKUcxabHQ1g\",\n    authDomain: \"frc2090scouting.firebaseapp.com\",\n    databaseURL: \"https://frc2090scouting.firebaseio.com\",\n    projectId: \"frc2090scouting\",\n    storageBucket: \"frc2090scouting.appspot.com\",\n    messagingSenderId: \"536911532006\"\n};\nfirebase.initializeApp(config);\n\n// React render to the root element\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}